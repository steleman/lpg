
Options in effect for D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/GJavaLexer.g:

    ACTION-BLOCK=("D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexer.java","/.","./")

    AST-DIRECTORY=""  AST-TYPE="Ast"  NOATTRIBUTES  NOAUTOMATIC-AST  NOBACKTRACK
    BYTE  CONFLICTS  
    DAT-DIRECTORY="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/"
    BYTE  CONFLICTS  
    DAT-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexerdcl.data"
    BYTE  CONFLICTS  
    DCL-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexerdcl.java"
    BYTE  CONFLICTS  NODEBUG  
    DEF-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexerdef.java"
    BYTE  CONFLICTS  NODEBUG  NOEDIT  NOERROR-MAPS  ESCAPE='$'  
    EXPORT-TERMINALS=("D:\eclipse\workspace\lpg.javaruntime.examples\javaexample\genericjavaparser\JavaParsersym.java","TK_","")
    BYTE  CONFLICTS  NODEBUG  NOEDIT  NOERROR-MAPS  ESCAPE='$'  
    EXTENDS-PARSETABLE  FACTORY="new "  FILE-PREFIX="JavaLexer"  
    FILTER="GJavaKWLexer.g"  NOFIRST  NOFOLLOW  NOGLR  NOGOTO-DEFAULT  
    GRM-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/GJavaLexer.g"
    FILTER="GJavaKWLexer.g"  NOFIRST  NOFOLLOW  NOGLR  NOGOTO-DEFAULT  
    IMP-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexerimp.java"
    FILTER="GJavaKWLexer.g"  NOFIRST  NOFOLLOW  NOGLR  NOGOTO-DEFAULT  
    INCLUDE-DIRECTORY="D:\eclipse\workspace\lpg.javaruntime.examples\javaexample\genericjavaparser\;.;D:\eclipse\workspace\lpg.javaruntime.v2\include;D:\eclipse\workspace;D:\eclipse\workspace\com.ibm.db.parsers.sql2003\src\com\ibm\db\parsers\sql2003;D:\eclipse\workspace\com.ibm.db.parsers.sql2003\src\com\ibm\db\parsers\sql2003\lexer;D:\eclipse\workspace\com.ibm.db.parsers.sql.common.db2.lexer\src\com\ibm\db\parsers\sql\common\db2\lexer;D:\eclipse\workspace\com.ibm.db.parsers.sql.routines.db2.common\src\com\ibm\db\parsers\sql\routines\db2\common;"
    FILTER="GJavaKWLexer.g"  NOFIRST  NOFOLLOW  NOGLR  NOGOTO-DEFAULT  LALR=1  
    LIST  MARGIN=4  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK  OR_MARKER='|'
    OUT-DIRECTORY="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/"
    LIST  MARGIN=4  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK  OR_MARKER='|'
    PACKAGE="genericjavaparser"  NOPARENT-SAVE  
    PARSETABLE-INTERFACES="lpg.javaruntime.ParseTable"  PREFIX="Char_"  PRIORITY
    PROGRAMMING_LANGUAGE=JAVA  
    PRS-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexerprs.java"
    PROGRAMMING_LANGUAGE=JAVA  NOQUIET  READ-REDUCE  REMAP-TERMINALS  NOSCOPES
    NOSERIALIZE  NOSHIFT-DEFAULT  SINGLE-PRODUCTIONS  NOSOFT-KEYWORDS  NOSTATES
    SUFFIX=""  
    SYM-FILE="D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/JavaLexersym.java"
    SUFFIX=""  TAB-FILE="GJavaLexer.t"  TABLE  TEMPLATE="LexerTemplateD.g"  
    TRACE=CONFLICTS  NOVARIABLES  NOVERBOSE  NOVISITOR  VISITOR-TYPE="Visitor"
    WARNINGS  NOXREF  


Predefined Macros:

    $rule_number
    $rule_text
    $rule_size
    $input_file
    $current_line
    $next_line
    $#identifier
    $symbol_declarations
    $num_rules
    $num_terminals
    $num_nonterminals
    $num_non_terminals
    $num_symbols
    $template
    $file_prefix
    $package
    $ast_package
    $ast_type
    $exp_type
    $prs_type
    $sym_type
    $action_type
    $visitor_type


Filter Macros:

    $$GJavaKWLexer


Exported symbols:

    EOF_TOKEN
    IDENTIFIER
    IntegerLiteral
    LongLiteral
    FloatingPointLiteral
    DoubleLiteral
    CharacterLiteral
    StringLiteral
    PLUS_PLUS
    MINUS_MINUS
    EQUAL_EQUAL
    LESS_EQUAL
    GREATER_EQUAL
    NOT_EQUAL
    LEFT_SHIFT
    RIGHT_SHIFT
    UNSIGNED_RIGHT_SHIFT
    PLUS_EQUAL
    MINUS_EQUAL
    MULTIPLY_EQUAL
    DIVIDE_EQUAL
    AND_EQUAL
    OR_EQUAL
    XOR_EQUAL
    REMAINDER_EQUAL
    LEFT_SHIFT_EQUAL
    RIGHT_SHIFT_EQUAL
    UNSIGNED_RIGHT_SHIFT_EQUAL
    OR_OR
    AND_AND
    PLUS
    MINUS
    NOT
    REMAINDER
    XOR
    AND
    MULTIPLY
    OR
    TWIDDLE
    DIVIDE
    GREATER
    LESS
    LPAREN
    RPAREN
    LBRACE
    RBRACE
    LBRACKET
    RBRACKET
    SEMICOLON
    QUESTION
    AT
    COLON
    COMMA
    DOT
    EQUAL
    ELLIPSIS


Defined Symbols:



    $eof_token
    /.$_EOF_TOKEN./


    $additional_interfaces
    /../


    $super_stream_class
    /.LpgLexStream./


    $prs_stream_class
    /.IPrsStream./


    $prs_stream
    /. // macro prs_stream is deprecated. Use function getPrsStream    
                      getPrsStream()./


    $setSym1
    /. // macro setSym1 is deprecated. Use function setResult    
                   lexParser.setSym1./


    $setResult
    /. // macro setResult is deprecated. Use function setResult    
                     lexParser.setSym1./


    $getSym
    /. // macro getSym is deprecated. Use function getLastToken    
                  lexParser.getSym./


    $getToken
    /. // macro getToken is deprecated. Use function getToken    
                    lexParser.getToken./


    $getLeftSpan
    /. // macro getLeftSpan is deprecated. Use function getLeftSpan    
                       lexParser.getFirstToken./


    $getRightSpan
    /. // macro getRightSpan is deprecated. Use function getRightSpan    
                        lexParser.getLastToken./


    $Header
    /.    
                    //    
                    // Rule $rule_number:  $rule_text    
                    //./


    $DefaultAction
    /. $Header    
                    case $rule_number: { ./


    $BeginAction
    /.$DefaultAction./


    $EndAction
    /.          break;    
                    }./


    $BeginJava
    /.$BeginAction    
                    $symbol_declarations./


    $EndJava
    /.$EndAction./


    $NoAction
    /. $Header    
                    case $rule_number:    
                        break; ./


    $BeginActions
    /.    
            public void ruleAction(int ruleNumber)    
            {    
                switch(ruleNumber)    
                {./


    $SplitActions
    /.    
    	            default:    
    	                ruleAction$rule_number(ruleNumber);    
    	                break;    
    	        }    
    	        return;    
    	    }    
    	    
    	    public void ruleAction$rule_number(int ruleNumber)    
    	    {    
    	        switch (ruleNumber)    
    	        {./


    $EndActions
    /.    
                    default:    
                        break;    
                }    
                return;    
            }./


    $kw_lexer_class
    /.$GJavaKWLexer./


Aliases:

    \u0080..\ufffe ::= AfterASCII
    ' ' ::= Space
    NewLine ::= LF
    Return ::= CR
    HorizontalTab ::= HT
    FormFeed ::= FF
    '"' ::= DoubleQuote
    "'" ::= SingleQuote
    % ::= Percent
    '|' ::= VerticalBar
    ! ::= Exclamation
    @ ::= AtSign
    ` ::= BackQuote
    ~ ::= Tilde
    # ::= Sharp
    '$' ::= DollarSign
    & ::= Ampersand
    ^ ::= Caret
    : ::= Colon
    ; ::= SemiColon
    \ ::= BackSlash
    { ::= LeftBrace
    } ::= RightBrace
    [ ::= LeftBracket
    ] ::= RightBracket
    ? ::= QuestionMark
    , ::= Comma
    . ::= Dot
    < ::= LessThan
    > ::= GreaterThan
    + ::= Plus
    - ::= Minus
    / ::= Slash
    * ::= Star
    ( ::= LeftParen
    ) ::= RightParen
    = ::= Equal


Eof:

    EOF

Terminals:

    CtlCharNotWS
    LF
    CR
    HT
    FF
    a
    b
    c
    d
    e
    f
    g
    h
    i
    j
    k
    l
    m
    n
    o
    p
    q
    r
    s
    t
    u
    v
    w
    x
    y
    z
    _
    A
    B
    C
    D
    E
    F
    G
    H
    I
    J
    K
    L
    M
    N
    O
    P
    Q
    R
    S
    T
    U
    V
    W
    X
    Y
    Z
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    AfterASCII
    Space
    DoubleQuote
    SingleQuote
    Percent
    VerticalBar
    Exclamation
    AtSign
    BackQuote
    Tilde
    Sharp
    DollarSign
    Ampersand
    Caret
    Colon
    SemiColon
    BackSlash
    LeftBrace
    RightBrace
    LeftBracket
    RightBracket
    QuestionMark
    Comma
    Dot
    LessThan
    GreaterThan
    Plus
    Minus
    Slash
    Star
    LeftParen
    RightParen
    Equal
    EOF


Soft Keywords:



Rules:

1      Token ::= Identifier
2      Token ::= '"' SLBody '"'
3      Token ::= "'" NotSQ "'"
4      Token ::= IntegerLiteral
5      Token ::= FloatingPointLiteral
6      Token ::= DoubleLiteral
7      Token ::= / * Inside Stars /
8      Token ::= SLC
9      Token ::= WS
10     Token ::= +
11     Token ::= -
12     Token ::= *
13     Token ::= /
14     Token ::= (
15     Token ::= )
16     Token ::= =
17     Token ::= ,
18     Token ::= :
19     Token ::= ;
20     Token ::= ^
21     Token ::= %
22     Token ::= ~
23     Token ::= '|'
24     Token ::= &
25     Token ::= <
26     Token ::= >
27     Token ::= .
28     Token ::= !
29     Token ::= [
30     Token ::= ]
31     Token ::= {
32     Token ::= }
33     Token ::= ?
34     Token ::= @
35     Token ::= + +
36     Token ::= - -
37     Token ::= = =
38     Token ::= < =
39     Token ::= ! =
40     Token ::= < <
41     Token ::= + =
42     Token ::= - =
43     Token ::= * =
44     Token ::= / =
45     Token ::= & =
46     Token ::= '|' =
47     Token ::= ^ =
48     Token ::= % =
49     Token ::= < < =
50     Token ::= '|' '|'
51     Token ::= & &
52     Token ::= . . .
53     IntegerLiteral -> Integer
54                     | Integer LetterLl
55                     | 0 LetterXx HexDigits
56                     | 0 LetterXx HexDigits LetterLl
57     DoubleLiteral -> Decimal
58                    | Decimal LetterForD
59                    | Decimal Exponent
60                    | Decimal Exponent LetterForD
61                    | Integer Exponent
62                    | Integer Exponent LetterForD
63                    | Integer LetterForD
64     FloatingPointLiteral -> Decimal LetterForF
65                           | Decimal Exponent LetterForF
66                           | Integer Exponent LetterForF
67                           | Integer LetterForF
68     Inside ::= Inside Stars NotSlashOrStar
69              | Inside /
70              | Inside NotSlashOrStar
71              | $Empty
72     Stars -> *
73            | Stars *
74     SLC ::= / /
75           | SLC NotEol
76     SLBody -> $Empty
77             | SLBody NotDQ
78     Integer -> Digit
79              | Integer Digit
80     HexDigits -> HexDigit
81                | HexDigits HexDigit
82     Decimal ::= . Integer
83               | Integer .
84               | Integer . Integer
85     Exponent ::= LetterEe Integer
86                | LetterEe + Integer
87                | LetterEe - Integer
88     WSChar -> Space
89             | LF
90             | CR
91             | HT
92             | FF
93     Letter -> LowerCaseLetter
94             | UpperCaseLetter
95             | _
96             | '$'
97             | \u0080..\ufffe
98     LowerCaseLetter -> a
99                      | b
100                     | c
101                     | d
102                     | e
103                     | f
104                     | g
105                     | h
106                     | i
107                     | j
108                     | k
109                     | l
110                     | m
111                     | n
112                     | o
113                     | p
114                     | q
115                     | r
116                     | s
117                     | t
118                     | u
119                     | v
120                     | w
121                     | x
122                     | y
123                     | z
124    UpperCaseLetter -> A
125                     | B
126                     | C
127                     | D
128                     | E
129                     | F
130                     | G
131                     | H
132                     | I
133                     | J
134                     | K
135                     | L
136                     | M
137                     | N
138                     | O
139                     | P
140                     | Q
141                     | R
142                     | S
143                     | T
144                     | U
145                     | V
146                     | W
147                     | X
148                     | Y
149                     | Z
150    Digit -> 0
151           | 1
152           | 2
153           | 3
154           | 4
155           | 5
156           | 6
157           | 7
158           | 8
159           | 9
160    OctalDigit -> 0
161                | 1
162                | 2
163                | 3
164                | 4
165                | 5
166                | 6
167                | 7
168    a..f -> a
169          | b
170          | c
171          | d
172          | e
173          | f
174          | A
175          | B
176          | C
177          | D
178          | E
179          | F
180    HexDigit -> Digit
181              | a..f
182    OctalDigits3 -> OctalDigit
183                  | OctalDigit OctalDigit
184                  | OctalDigit OctalDigit OctalDigit
185    LetterForD -> D
186                | d
187    LetterForF -> F
188                | f
189    LetterLl -> L
190              | l
191    LetterEe -> E
192              | e
193    LetterXx -> X
194              | x
195    WS -> WSChar
196        | WS WSChar
197    Identifier -> Letter
198                | Identifier Letter
199                | Identifier Digit
200    SpecialNotStar -> +
201                    | -
202                    | /
203                    | (
204                    | )
205                    | '"'
206                    | !
207                    | @
208                    | `
209                    | ~
210                    | %
211                    | &
212                    | ^
213                    | :
214                    | ;
215                    | "'"
216                    | \
217                    | '|'
218                    | {
219                    | }
220                    | [
221                    | ]
222                    | ?
223                    | ,
224                    | .
225                    | <
226                    | >
227                    | =
228                    | #
229    SpecialNotSlash -> +
230                     | -
231                     | (
232                     | )
233                     | '"'
234                     | !
235                     | @
236                     | `
237                     | ~
238                     | %
239                     | &
240                     | ^
241                     | :
242                     | ;
243                     | "'"
244                     | \
245                     | '|'
246                     | {
247                     | }
248                     | [
249                     | ]
250                     | ?
251                     | ,
252                     | .
253                     | <
254                     | >
255                     | =
256                     | #
257    SpecialNotDQ -> +
258                  | -
259                  | /
260                  | (
261                  | )
262                  | *
263                  | !
264                  | @
265                  | `
266                  | ~
267                  | %
268                  | &
269                  | ^
270                  | :
271                  | ;
272                  | "'"
273                  | '|'
274                  | {
275                  | }
276                  | [
277                  | ]
278                  | ?
279                  | ,
280                  | .
281                  | <
282                  | >
283                  | =
284                  | #
285    SpecialNotSQ -> +
286                  | -
287                  | *
288                  | (
289                  | )
290                  | '"'
291                  | !
292                  | @
293                  | `
294                  | ~
295                  | %
296                  | &
297                  | ^
298                  | :
299                  | ;
300                  | /
301                  | '|'
302                  | {
303                  | }
304                  | [
305                  | ]
306                  | ?
307                  | ,
308                  | .
309                  | <
310                  | >
311                  | =
312                  | #
313    NotSlashOrStar -> Letter
314                    | Digit
315                    | SpecialNotSlash
316                    | WSChar
317    Eol -> LF
318         | CR
319    NotEol -> Letter
320            | Digit
321            | Space
322            | *
323            | SpecialNotStar
324            | HT
325            | FF
326            | CtlCharNotWS
327    NotDQ -> Letter
328           | Digit
329           | SpecialNotDQ
330           | Space
331           | HT
332           | FF
333           | EscapeSequence
334           | \ u HexDigit HexDigit HexDigit HexDigit
335           | \ OctalDigit
336    NotSQ -> Letter
337           | Digit
338           | SpecialNotSQ
339           | Space
340           | HT
341           | FF
342           | EscapeSequence
343           | \ u HexDigit HexDigit HexDigit HexDigit
344           | \ OctalDigits3
345    EscapeSequence -> \ b
346                    | \ t
347                    | \ n
348                    | \ f
349                    | \ r
350                    | \ '"'
351                    | \ "'"
352                    | \ \
D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/GJavaLexer.g:567:5:567:7:12926:12928: Error: The nonterminal Eol is useless.



D:/eclipse/workspace/lpg.javaruntime.examples/javaexample/genericjavaparser/GJavaLexer.g is LALR(1).


Number of Terminals: 102
Number of Nonterminals: 38
Number of Productions: 353
Number of Single Productions: 253
Number of Items: 797
Number of States: 65
Number of Shift actions: 417
Number of Goto actions: 60
Number of Shift/Reduce actions: 675
Number of Goto/Reduce actions: 63
Number of Reduce actions: 442
Number of Shift-Reduce conflicts: 0
Number of Reduce-Reduce conflicts: 0

Number of entries in base Action Table: 188
Additional space required for compaction of Action Table: 0.5%

Number of unique terminal states: 65
Number of Shift actions saved by merging: 0
Number of Conflict points saved by merging: 0
Number of Reduce actions saved by merging: 0
Number of Reduce saved by default: 429

Number of entries in Terminal Action Table: 1170
Additional space required for compaction of Terminal Table: 9.4%

Actions in Compressed Tables:
     Number of Shifts: 417
     Number of Shift/Reduces: 675
     Number of Gotos: 60
     Number of Goto/Reduces: 63
     Number of Reduces: 13
     Number of Defaults: 43

Parsing Tables storage:
    Storage required for BASE_CHECK: 353 Bytes
    Storage required for BASE_ACTION: 1086 Bytes
    Storage required for TERM_CHECK: 1290 Bytes
    Storage required for TERM_ACTION: 2562 Bytes
