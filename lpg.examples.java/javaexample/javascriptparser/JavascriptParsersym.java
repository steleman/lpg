package javascriptparser;

public interface JavascriptParsersym {
    public final static int
      TK_NOT = 31,
      TK_NOT_EQUAL = 70,
      TK_NOT_EQUAL_EQUAL = 71,
      TK_REMAINDER = 72,
      TK_REMAINDER_EQUAL = 86,
      TK_AND = 73,
      TK_AND_AND = 74,
      TK_AND_AND_EQUAL = 87,
      TK_AND_EQUAL = 88,
      TK_LPAREN = 1,
      TK_RPAREN = 38,
      TK_MULTIPLY = 75,
      TK_MULTIPLY_EQUAL = 89,
      TK_PLUS = 11,
      TK_PLUS_PLUS = 6,
      TK_PLUS_EQUAL = 90,
      TK_COMMA = 24,
      TK_MINUS = 10,
      TK_MINUS_MINUS = 7,
      TK_MINUS_EQUAL = 91,
      TK_PERIOD = 52,
      TK_ETC = 84,
      TK_SLASH = 76,
      TK_SLASH_EQUAL = 92,
      TK_COLON = 40,
      TK_COLON_COLON = 48,
      TK_SEMICOLON = 17,
      TK_LESS = 41,
      TK_LEFT_SHIFT = 18,
      TK_LEFT_SHIFT_EQUAL = 93,
      TK_LESS_EQUAL = 42,
      TK_EQUAL = 63,
      TK_EQUAL_EQUAL = 77,
      TK_EQUAL_EQUAL_EQUAL = 78,
      TK_GREATER = 43,
      TK_GREATER_EQUAL = 44,
      TK_RIGHT_SHIFT = 19,
      TK_RIGHT_SHIFT_EQUAL = 94,
      TK_UNSIGNED_RIGHT_SHIFT = 20,
      TK_UNSIGNED_RIGHT_SHIFT_EQUAL = 95,
      TK_QUESTION = 79,
      TK_LBRACKET = 8,
      TK_RBRACKET = 96,
      TK_XOR = 80,
      TK_XOR_EQUAL = 97,
      TK_XOR_XOR = 81,
      TK_XOR_XOR_EQUAL = 98,
      TK_LBRACE = 12,
      TK_OR = 82,
      TK_OR_EQUAL = 99,
      TK_OR_OR = 85,
      TK_OR_OR_EQUAL = 100,
      TK_RBRACE = 9,
      TK_TWIDDLE = 32,
      TK_AS = 45,
      TK_BREAK = 53,
      TK_CASE = 102,
      TK_CATCH = 103,
      TK_CLASS = 66,
      TK_CONST = 50,
      TK_CONTINUE = 54,
      TK_DEFAULT = 104,
      TK_DELETE = 33,
      TK_DO = 55,
      TK_ELSE = 25,
      TK_EXPORT = 67,
      TK_EXTENDS = 107,
      TK_FALSE = 22,
      TK_FINAL = 108,
      TK_FINALLY = 105,
      TK_FOR = 56,
      TK_FUNCTION = 37,
      TK_IF = 57,
      TK_IMPORT = 68,
      TK_IN = 39,
      TK_INSTANCEOF = 46,
      TK_IS = 47,
      TK_NAMESPACE = 64,
      TK_NEW = 26,
      TK_NULL = 27,
      TK_PACKAGE = 106,
      TK_PRIVATE = 14,
      TK_PUBLIC = 15,
      TK_RETURN = 58,
      TK_STATIC = 109,
      TK_SUPER = 28,
      TK_SWITCH = 59,
      TK_THIS = 29,
      TK_THROW = 60,
      TK_TRUE = 23,
      TK_TRY = 61,
      TK_TYPEOF = 34,
      TK_USE = 69,
      TK_VAR = 49,
      TK_VOID = 35,
      TK_WHILE = 51,
      TK_WITH = 62,
      TK_ABSTRACT = 110,
      TK_DEBUGGER = 111,
      TK_ENUM = 112,
      TK_GOTO = 113,
      TK_IMPLEMENTS = 114,
      TK_INTERFACE = 115,
      TK_LONG = 116,
      TK_NATIVE = 117,
      TK_PROTECTED = 118,
      TK_SYNCHRONIZED = 119,
      TK_THROWS = 120,
      TK_TRANSIENT = 121,
      TK_VOLATILE = 122,
      TK_EXCLUDE = 123,
      TK_GET = 2,
      TK_INCLUDE = 3,
      TK_SET = 4,
      TK_EOF_TOKEN = 36,
      TK_SlComment = 124,
      TK_MlComment = 125,
      TK_NO_LINE_BREAK = 16,
      TK_NegatedMinLong = 101,
      TK_Number = 21,
      TK_RegularExpression = 30,
      TK_String = 13,
      TK_VirtualSemicolon = 65,
      TK_IDENTIFIER = 5,
      TK_ERROR_TOKEN = 83;

      public final static String orderedTerminalSymbols[] = {
                 "",
                 "LPAREN",
                 "GET",
                 "INCLUDE",
                 "SET",
                 "IDENTIFIER",
                 "PLUS_PLUS",
                 "MINUS_MINUS",
                 "LBRACKET",
                 "RBRACE",
                 "MINUS",
                 "PLUS",
                 "LBRACE",
                 "String",
                 "PRIVATE",
                 "PUBLIC",
                 "NO_LINE_BREAK",
                 "SEMICOLON",
                 "LEFT_SHIFT",
                 "RIGHT_SHIFT",
                 "UNSIGNED_RIGHT_SHIFT",
                 "Number",
                 "FALSE",
                 "TRUE",
                 "COMMA",
                 "ELSE",
                 "NEW",
                 "NULL",
                 "SUPER",
                 "THIS",
                 "RegularExpression",
                 "NOT",
                 "TWIDDLE",
                 "DELETE",
                 "TYPEOF",
                 "VOID",
                 "EOF_TOKEN",
                 "FUNCTION",
                 "RPAREN",
                 "IN",
                 "COLON",
                 "LESS",
                 "LESS_EQUAL",
                 "GREATER",
                 "GREATER_EQUAL",
                 "AS",
                 "INSTANCEOF",
                 "IS",
                 "COLON_COLON",
                 "VAR",
                 "CONST",
                 "WHILE",
                 "PERIOD",
                 "BREAK",
                 "CONTINUE",
                 "DO",
                 "FOR",
                 "IF",
                 "RETURN",
                 "SWITCH",
                 "THROW",
                 "TRY",
                 "WITH",
                 "EQUAL",
                 "NAMESPACE",
                 "VirtualSemicolon",
                 "CLASS",
                 "EXPORT",
                 "IMPORT",
                 "USE",
                 "NOT_EQUAL",
                 "NOT_EQUAL_EQUAL",
                 "REMAINDER",
                 "AND",
                 "AND_AND",
                 "MULTIPLY",
                 "SLASH",
                 "EQUAL_EQUAL",
                 "EQUAL_EQUAL_EQUAL",
                 "QUESTION",
                 "XOR",
                 "XOR_XOR",
                 "OR",
                 "ERROR_TOKEN",
                 "ETC",
                 "OR_OR",
                 "REMAINDER_EQUAL",
                 "AND_AND_EQUAL",
                 "AND_EQUAL",
                 "MULTIPLY_EQUAL",
                 "PLUS_EQUAL",
                 "MINUS_EQUAL",
                 "SLASH_EQUAL",
                 "LEFT_SHIFT_EQUAL",
                 "RIGHT_SHIFT_EQUAL",
                 "UNSIGNED_RIGHT_SHIFT_EQUAL",
                 "RBRACKET",
                 "XOR_EQUAL",
                 "XOR_XOR_EQUAL",
                 "OR_EQUAL",
                 "OR_OR_EQUAL",
                 "NegatedMinLong",
                 "CASE",
                 "CATCH",
                 "DEFAULT",
                 "FINALLY",
                 "PACKAGE",
                 "EXTENDS",
                 "FINAL",
                 "STATIC",
                 "ABSTRACT",
                 "DEBUGGER",
                 "ENUM",
                 "GOTO",
                 "IMPLEMENTS",
                 "INTERFACE",
                 "LONG",
                 "NATIVE",
                 "PROTECTED",
                 "SYNCHRONIZED",
                 "THROWS",
                 "TRANSIENT",
                 "VOLATILE",
                 "EXCLUDE",
                 "SlComment",
                 "MlComment"
             };

    public final static boolean isValidForParser = true;
}
