
Options in effect for C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:

    ACTION-BLOCK=("C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParser.java","/.","./")
    HEADERS=("C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParser.java","/:",":/")

    AST-DIRECTORY="./Ast"  AST-TYPE="Ast"  NOATTRIBUTES  AUTOMATIC-AST=TOPLEVEL
    NOBACKTRACK  BYTE  CONFLICTS  
    DAT-DIRECTORY="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\"
    NOBACKTRACK  BYTE  CONFLICTS  
    DAT-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserdcl.data"
    NOBACKTRACK  BYTE  CONFLICTS  
    DCL-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserdcl.java"
    NOBACKTRACK  BYTE  CONFLICTS  NODEBUG  
    DEF-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserdef.java"
    NOBACKTRACK  BYTE  CONFLICTS  NODEBUG  NOEDIT  ERROR-MAPS  ESCAPE='$'  
    EXPORT-TERMINALS=("C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserexp.java","","")
    NOBACKTRACK  BYTE  CONFLICTS  NODEBUG  NOEDIT  ERROR-MAPS  ESCAPE='$'  
    EXTENDS-PARSETABLE  FACTORY="new "  FILE-PREFIX="JavaParser"  FIRST  FOLLOW
    NOGLR  NOGOTO-DEFAULT  
    GRM-FILE="C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g"
    NOGLR  NOGOTO-DEFAULT  
    IMP-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserimp.java"
    NOGLR  NOGOTO-DEFAULT  IMPORT-TERMINALS="JavaLexer.g"  
    INCLUDE-DIRECTORY="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\;.;C:\eclipse\workspace\lpg.javaruntime.v2\include;C:\eclipse\workspace;C:\eclipse\workspace\com.ibm.db.parsers.sql2003\src\com\ibm\db\parsers\sql2003;C:\eclipse\workspace\com.ibm.db.parsers.sql2003\src\com\ibm\db\parsers\sql2003\lexer;C:\eclipse\workspace\com.ibm.db.parsers.sql.common.db2.lexer\src\com\ibm\db\parsers\sql\common\db2\lexer;C:\eclipse\workspace\com.ibm.db.parsers.sql.routines.db2.common\src\com\ibm\db\parsers\sql\routines\db2\common;"
    NOGLR  NOGOTO-DEFAULT  IMPORT-TERMINALS="JavaLexer.g"  LALR=2  LIST  
    MARGIN=8  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK  OR_MARKER='|'  
    OUT-DIRECTORY="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\"
    MARGIN=8  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK  OR_MARKER='|'  
    PACKAGE="expandedjavaparser"  PARENT-SAVED  
    PARSETABLE-INTERFACES="lpg.javaruntime.ParseTable"  PREFIX="TK_"  PRIORITY
    PROGRAMMING_LANGUAGE=JAVA  
    PRS-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParserprs.java"
    PROGRAMMING_LANGUAGE=JAVA  NOQUIET  READ-REDUCE  REMAP-TERMINALS  SCOPES  
    NOSERIALIZE  NOSHIFT-DEFAULT  NOSINGLE-PRODUCTIONS  NOSOFT-KEYWORDS  STATES
    SUFFIX=""  
    SYM-FILE="C:\eclipse\workspace\lpg.javaruntime.examples\javaexample\expandedjavaparser\JavaParsersym.java"
    SUFFIX=""  TAB-FILE="JavaParser.t"  TABLE  TEMPLATE="dtParserTemplateE.g"  
    TRACE=CONFLICTS  VARIABLES  VERBOSE  VISITOR=DEFAULT  VISITOR-TYPE="Visitor"
    WARNINGS  XREF  

C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:119:5:119:11:4054:4060: Warning: The undeclared symbol "ErrorID" is assumed to be a terminal
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:291:12:291:22:8615:8625: Warning: The macro "$identifier" is undefined. No substitution made

Predefined Macros:

    $rule_number
    $rule_text
    $rule_size
    $input_file
    $current_line
    $next_line
    $#identifier
    $symbol_declarations
    $num_rules
    $num_terminals
    $num_nonterminals
    $num_non_terminals
    $num_symbols
    $template
    $file_prefix
    $package
    $ast_package
    $ast_type
    $exp_type
    $prs_type
    $sym_type
    $action_type
    $visitor_type



Defined Symbols:



    $DefaultAllocation
    /:    
                    ruleAction[$rule_number] = new act$rule_number$();:/


    $NoAllocation
    /:    
                    ruleAction[$rule_number] = new NoAction();:/


    $NullAllocation
    /:    
                    ruleAction[$rule_number] = new NullAction();:/


    $BadAllocation
    /:    
                    ruleAction[$rule_number] = new BadAction();:/


    $Header
    /.    
                //    
                // Rule $rule_number:  $rule_text    
                //./


    $DefaultAction
    /.$DefaultAllocation $Header    
                final class act$rule_number extends Action./


    $NullAction
    /. $NullAllocation $Header    
                //    
                // final class NullAction extends Action    
                //    
            ./


    $NoAction
    /. $NoAllocation $Header    
                //    
                // final class NullAction extends Action    
                //    
            ./


    $BadAction
    /. $BadAllocation $Header    
                //    
                // final class NullAction extends Action    
                //    
            ./


    $BeginAction
    /.$DefaultAllocation $Header    
                final class act$rule_number extends Action    
                {    
                    public void action()    
                    {./


    $EndAction
    /.          return;    
                    }    
                }./


    $BeginJava
    /.$BeginAction    
                        $symbol_declarations./


    $EndJava
    /.$EndAction./


    $SplitActions
    /../


    $additional_interfaces
    /../


    $ast_class
    /.$ast_type./


    $unimplemented_symbols_warning
    /.false./


    $setSym1
    /. // macro setSym1 is deprecated. Use function setResult    
                        getParser().setSym1./


    $setResult
    /. // macro setResult is deprecated. Use function setResult    
                         getParser().setSym1./


    $getSym
    /. // macro getSym is deprecated. Use function getRhsSym    
                      getParser().getSym./


    $getToken
    /. // macro getToken is deprecated. Use function getRhsTokenIndex    
                        getParser().getToken./


    $getIToken
    /. // macro getIToken is deprecated. Use function getRhsIToken    
                         super.getIToken./


    $getLeftSpan
    /. // macro getLeftSpan is deprecated. Use function getLeftSpan    
                           getParser().getFirstToken./


    $getRightSpan
    /. // macro getRightSpan is deprecated. Use function getRightSpan    
                            getParser().getLastToken./


Aliases:

    ++ ::= PLUS_PLUS
    '--' ::= MINUS_MINUS
    == ::= EQUAL_EQUAL
    <= ::= LESS_EQUAL
    >= ::= GREATER_EQUAL
    != ::= NOT_EQUAL
    << ::= LEFT_SHIFT
    >> ::= RIGHT_SHIFT
    >>> ::= UNSIGNED_RIGHT_SHIFT
    += ::= PLUS_EQUAL
    -= ::= MINUS_EQUAL
    *= ::= MULTIPLY_EQUAL
    /= ::= DIVIDE_EQUAL
    &= ::= AND_EQUAL
    |= ::= OR_EQUAL
    ^= ::= XOR_EQUAL
    %= ::= REMAINDER_EQUAL
    <<= ::= LEFT_SHIFT_EQUAL
    >>= ::= RIGHT_SHIFT_EQUAL
    >>>= ::= UNSIGNED_RIGHT_SHIFT_EQUAL
    || ::= OR_OR
    && ::= AND_AND
    + ::= PLUS
    - ::= MINUS
    ! ::= NOT
    % ::= REMAINDER
    ^ ::= XOR
    & ::= AND
    * ::= MULTIPLY
    '|' ::= OR
    ~ ::= TWIDDLE
    / ::= DIVIDE
    > ::= GREATER
    < ::= LESS
    ( ::= LPAREN
    ) ::= RPAREN
    { ::= LBRACE
    } ::= RBRACE
    [ ::= LBRACKET
    ] ::= RBRACKET
    ; ::= SEMICOLON
    ? ::= QUESTION
    : ::= COLON
    , ::= COMMA
    . ::= DOT
    = ::= EQUAL


Start:

    CompilationUnit

Eol:

    SEMICOLON

Eof:

    EOF_TOKEN

Error:

    ERROR_TOKEN

Terminals:

    IDENTIFIER
    abstract
    boolean
    break
    byte
    case
    catch
    char
    class
    const
    continue
    default
    do
    double
    else
    extends
    false
    final
    finally
    float
    for
    goto
    if
    implements
    import
    instanceof
    int
    interface
    long
    native
    new
    null
    package
    private
    protected
    public
    return
    short
    static
    strictfp
    super
    switch
    synchronized
    this
    throw
    throws
    transient
    true
    try
    void
    volatile
    while
    IntegerLiteral
    LongLiteral
    FloatingPointLiteral
    DoubleLiteral
    CharacterLiteral
    StringLiteral
    PLUS_PLUS
    MINUS_MINUS
    EQUAL_EQUAL
    LESS_EQUAL
    GREATER_EQUAL
    NOT_EQUAL
    LEFT_SHIFT
    RIGHT_SHIFT
    UNSIGNED_RIGHT_SHIFT
    PLUS_EQUAL
    MINUS_EQUAL
    MULTIPLY_EQUAL
    DIVIDE_EQUAL
    AND_EQUAL
    OR_EQUAL
    XOR_EQUAL
    REMAINDER_EQUAL
    LEFT_SHIFT_EQUAL
    RIGHT_SHIFT_EQUAL
    UNSIGNED_RIGHT_SHIFT_EQUAL
    OR_OR
    AND_AND
    PLUS
    MINUS
    NOT
    REMAINDER
    XOR
    AND
    MULTIPLY
    OR
    TWIDDLE
    DIVIDE
    GREATER
    LESS
    LPAREN
    RPAREN
    LBRACE
    RBRACE
    LBRACKET
    RBRACKET
    SEMICOLON
    QUESTION
    COLON
    COMMA
    DOT
    EQUAL
    EOF_TOKEN
    SlComment
    MlComment
    DocComment
    ErrorID
    ERROR_TOKEN


Soft Keywords:



Rules:

1      Literal$IntegerLiteral ::= IntegerLiteral
2      Literal$LongLiteral ::= LongLiteral
3      Literal$FloatLiteral ::= FloatingPointLiteral
4      Literal$DoubleLiteral ::= DoubleLiteral
5      Literal$BooleanLiteral ::= BooleanLiteral
6      Literal$CharacterLiteral ::= CharacterLiteral
7      Literal$StringLiteral ::= StringLiteral
8      Literal$NullLiteral ::= null
9      BooleanLiteral$TrueLiteral ::= true
10     BooleanLiteral$FalseLiteral ::= false
11     Type ::= PrimitiveType
12     Type ::= ReferenceType
13     PrimitiveType ::= NumericType
14     PrimitiveType$BooleanType ::= boolean
15     NumericType ::= IntegralType
16     NumericType ::= FloatingPointType
17     IntegralType$ByteType ::= byte
18     IntegralType$ShortType ::= short
19     IntegralType$IntType ::= int
20     IntegralType$LongType ::= long
21     IntegralType$CharType ::= char
22     FloatingPointType$FloatType ::= float
23     FloatingPointType$DoubleType ::= double
24     ReferenceType ::= ClassOrInterfaceType
25     ReferenceType ::= ArrayType
26     ClassOrInterfaceType ::= Name
27     ArrayType$PrimitiveArrayType ::= PrimitiveType Dims
28     ArrayType$ClassOrInterfaceArrayType ::= Name Dims
29     ClassType ::= ClassOrInterfaceType
30     InterfaceType ::= ClassOrInterfaceType
31     Name ::= SimpleName
32            | QualifiedName
33     SimpleName$SimpleName ::= IDENTIFIER
34     QualifiedName ::= Name . IDENTIFIER
35     CompilationUnit ::= PackageDeclarationopt ImportDeclarationsopt TypeDeclarationsopt
36     ImportDeclarations$$ImportDeclaration ::= ImportDeclaration
37                          | ImportDeclarations ImportDeclaration
38     TypeDeclarations$$TypeDeclaration ::= TypeDeclaration
39                        | TypeDeclarations TypeDeclaration
40     PackageDeclaration ::= package Name ;
41     ImportDeclaration ::= SingleTypeImportDeclaration
42     ImportDeclaration ::= TypeImportOnDemandDeclaration
43     SingleTypeImportDeclaration ::= import Name ;
44     TypeImportOnDemandDeclaration ::= import Name . * ;
45     TypeDeclaration ::= ClassDeclaration
46     TypeDeclaration ::= InterfaceDeclaration
47     TypeDeclaration$EmptyDeclaration ::= ;
48     Modifiers$$Modifier ::= Modifier
49                 | Modifiers Modifier
50     Modifier$PublicModifier ::= public
51     Modifier$ProtectedModifier ::= protected
52     Modifier$PrivateModifier ::= private
53     Modifier$StaticModifier ::= static
54     Modifier$AbstractModifier ::= abstract
55     Modifier$FinalModifier ::= final
56     Modifier$NativeModifier ::= native
57     Modifier$StrictfpModifier ::= strictfp
58     Modifier$SynchronizedModifier ::= synchronized
59     Modifier$TransientModifier ::= transient
60     Modifier$VolatileModifier ::= volatile
61     ClassDeclaration ::= Modifiersopt class IDENTIFIER $Name Superopt Interfacesopt ClassBody
62     Super ::= extends ClassType
63     Interfaces$$InterfaceType ::= implements InterfaceTypeList
64     InterfaceTypeList$$InterfaceType ::= InterfaceType
65                         | InterfaceTypeList , InterfaceType
66     ClassBody ::= { ClassBodyDeclarationsopt }
67     ClassBodyDeclarations$$ClassBodyDeclaration ::= ClassBodyDeclaration
68                             | ClassBodyDeclarations ClassBodyDeclaration
69     ClassBodyDeclaration ::= ClassMemberDeclaration
70                            | StaticInitializer
71                            | ConstructorDeclaration
72                            | Block
73     ClassMemberDeclaration ::= FieldDeclaration
74                              | MethodDeclaration
75                              | ClassDeclaration
76                              | InterfaceDeclaration
77     ClassMemberDeclaration$EmptyDeclaration ::= ;
78     FieldDeclaration ::= Modifiersopt Type VariableDeclarators ;
79     VariableDeclarators$$VariableDeclarator ::= VariableDeclarator
80                           | VariableDeclarators , VariableDeclarator
81     VariableDeclarator ::= VariableDeclaratorId
82                          | VariableDeclaratorId = VariableInitializer
83     VariableDeclaratorId ::= IDENTIFIER Dimsopt
84     VariableInitializer ::= Expression
85                           | ArrayInitializer
86     MethodDeclaration ::= MethodHeader MethodBody
87     MethodHeader$TypedMethodHeader ::= Modifiersopt Type MethodDeclarator Throwsopt
88     MethodHeader$VoidMethodHeader ::= Modifiersopt void MethodDeclarator Throwsopt
89     MethodDeclarator ::= IDENTIFIER ( FormalParameterListopt ) Dimsopt
90     FormalParameterList$$FormalParameter ::= FormalParameter
91                           | FormalParameterList , FormalParameter
92     FormalParameter$FormalParameter ::= Modifiersopt Type VariableDeclaratorId
93     Throws$$ClassType ::= throws ClassTypeList
94     ClassTypeList$$ClassType ::= ClassType
95                     | ClassTypeList , ClassType
96     MethodBody ::= Block
97     MethodBody$EmptyMethodBody ::= ;
98     StaticInitializer ::= static Block
99     ConstructorDeclaration ::= Modifiersopt ConstructorDeclarator Throwsopt ConstructorBody
100    ConstructorDeclarator ::= IDENTIFIER ( FormalParameterListopt )
101    ConstructorBody ::= Block
102                      | { ExplicitConstructorInvocation BlockStatementsopt }
103    ExplicitConstructorInvocation$ThisCall ::= this ( ArgumentListopt ) ;
104                                    | Primary . this ( ArgumentListopt ) ;
105    ExplicitConstructorInvocation$SuperCall ::= super ( ArgumentListopt ) ;
106                                    | Primary $expression . super ( ArgumentListopt ) ;
107                                    | Name $expression . super ( ArgumentListopt ) ;
108    InterfaceDeclaration ::= Modifiersopt interface IDENTIFIER $Name ExtendsInterfacesopt InterfaceBody
109    ExtendsInterfaces$$InterfaceType ::= extends InterfaceTypeList
110    InterfaceBody ::= { InterfaceMemberDeclarationsopt }
111    InterfaceMemberDeclarations$$InterfaceMemberDeclaration ::= InterfaceMemberDeclaration
112                                  | InterfaceMemberDeclarations InterfaceMemberDeclaration
113    InterfaceMemberDeclaration ::= ConstantDeclaration
114                                 | AbstractMethodDeclaration
115                                 | ClassDeclaration
116                                 | InterfaceDeclaration
117    InterfaceMemberDeclaration$EmptyDeclaration ::= ;
118    ConstantDeclaration ::= FieldDeclaration
119    AbstractMethodDeclaration ::= MethodHeader ;
120    ArrayInitializer ::= { VariableInitializersopt Commaopt }
121    VariableInitializers$$VariableInitializer ::= VariableInitializer
122                           | VariableInitializers , VariableInitializer
123    Block ::= { BlockStatementsopt }
124    BlockStatements$$BlockStatement ::= BlockStatement
125                      | BlockStatements BlockStatement
126    BlockStatement ::= LocalVariableDeclarationStatement
127                     | Statement
128                     | ClassDeclaration
129    LocalVariableDeclarationStatement ::= LocalVariableDeclaration ;
130    LocalVariableDeclaration$LocalVariableDeclaration ::= Modifiers Type VariableDeclarators
131                               | Type VariableDeclarators
132    Statement ::= StatementWithoutTrailingSubstatement
133                | LabeledStatement
134                | IfThenStatement
135                | IfThenElseStatement
136                | WhileStatement
137                | ForStatement
138    StatementNoShortIf ::= StatementWithoutTrailingSubstatement
139                         | LabeledStatementNoShortIf
140                         | IfThenElseStatementNoShortIf
141                         | WhileStatementNoShortIf
142                         | ForStatementNoShortIf
143    StatementWithoutTrailingSubstatement ::= Block
144                                           | EmptyStatement
145                                           | ExpressionStatement
146                                           | SwitchStatement
147                                           | DoStatement
148                                           | BreakStatement
149                                           | ContinueStatement
150                                           | ReturnStatement
151                                           | SynchronizedStatement
152                                           | ThrowStatement
153                                           | TryStatement
154    EmptyStatement ::= ;
155    LabeledStatement$LabeledStatement ::= IDENTIFIER : Statement
156    LabeledStatementNoShortIf$LabeledStatement ::= IDENTIFIER : StatementNoShortIf $Statement
157    ExpressionStatement ::= StatementExpression ;
158    StatementExpression ::= Assignment
159                          | PreIncrementExpression
160                          | PreDecrementExpression
161                          | PostIncrementExpression
162                          | PostDecrementExpression
163                          | MethodInvocation
164                          | ClassInstanceCreationExpression
165    IfThenStatement$IfStatement ::= if ( Expression ) Statement $thenStmt
166    IfThenElseStatement$IfStatement ::= if ( Expression ) StatementNoShortIf $thenStmt else Statement $elseStmt
167    IfThenElseStatementNoShortIf$IfStatement ::= if ( Expression ) StatementNoShortIf $thenStmt else StatementNoShortIf $elseStmt
168    SwitchStatement ::= switch ( Expression ) SwitchBlock
169    SwitchBlock$SwitchBlock ::= { SwitchLabelsopt }
170    SwitchBlock$SwitchBlock ::= { SwitchBlockStatements SwitchLabelsopt }
171    SwitchBlockStatements$$SwitchBlockStatement ::= SwitchBlockStatement
172                            | SwitchBlockStatements SwitchBlockStatement
173    SwitchBlockStatement ::= SwitchLabels BlockStatements
174    SwitchLabels$$SwitchLabel ::= SwitchLabel
175                   | SwitchLabels SwitchLabel
176    SwitchLabel$CaseLabel ::= case ConstantExpression :
177    SwitchLabel$DefaultLabel ::= default :
178    WhileStatement$WhileStatement ::= while ( Expression ) Statement
179    WhileStatementNoShortIf$WhileStatement ::= while ( Expression ) StatementNoShortIf $Statement
180    DoStatement ::= do Statement while ( Expression ) ;
181    ForStatement$ForStatement ::= for ( ForInitopt ; Expressionopt ; ForUpdateopt ) Statement
182    ForStatementNoShortIf$ForStatement ::= for ( ForInitopt ; Expressionopt ; ForUpdateopt ) StatementNoShortIf $Statement
183    ForInit ::= StatementExpressionList
184              | LocalVariableDeclaration
185    ForUpdate$$StatementExpression ::= StatementExpressionList
186    StatementExpressionList$$StatementExpression ::= StatementExpression
187                              | StatementExpressionList , StatementExpression
188    BreakStatement ::= break IDENTIFIERopt ;
189    ContinueStatement ::= continue IDENTIFIERopt ;
190    ReturnStatement ::= return Expressionopt ;
191    ThrowStatement ::= throw Expression ;
192    SynchronizedStatement ::= synchronized ( Expression ) Block
193    TryStatement$TryStatement ::= try Block Catches $Catchesopt
194                   | try Block Catchesopt Finally
195    Catches$$CatchClause ::= CatchClause
196              | Catches CatchClause
197    CatchClause ::= catch ( FormalParameter ) Block
198    Finally ::= finally Block
199    Primary ::= PrimaryNoNewArray
200              | ArrayCreationExpression
201    PrimaryNoNewArray ::= Literal
202                        | MethodInvocation
203                        | ArrayAccess
204                        | ClassInstanceCreationExpression
205                        | FieldAccess
206    PrimaryNoNewArray$ParenthesizedExpression ::= ( Expression )
207    PrimaryNoNewArray$PrimaryThis ::= this
208                        | Name . this
209    PrimaryNoNewArray$PrimaryClassLiteral ::= Type . class
210    PrimaryNoNewArray$PrimaryVoidClassLiteral ::= void . class
211    ClassInstanceCreationExpression$ClassInstanceCreationExpression ::= new ClassType ( ArgumentListopt ) ClassBodyopt
212                                      | Primary $expression . new SimpleName $ClassType ( ArgumentListopt ) ClassBodyopt
213                                      | Name $expression . new SimpleName $ClassType ( ArgumentListopt ) ClassBodyopt
214    ArgumentList$$Expression ::= Expression
215                   | ArgumentList , Expression
216    ArrayCreationExpression$ArrayCreationExpression ::= new PrimitiveType $Type DimExprs Dimsopt
217                              | new ClassOrInterfaceType $Type DimExprs Dimsopt
218                              | new ArrayType $Type ArrayInitializer
219    DimExprs$$DimExpr ::= DimExpr
220               | DimExprs DimExpr
221    DimExpr ::= [ Expression ]
222    Dims$$Dim ::= Dim
223           | Dims Dim
224    Dim ::= [ ]
225    FieldAccess$FieldAccess ::= Primary . IDENTIFIER
226    FieldAccess$SuperFieldAccess ::= super . IDENTIFIER
227                  | Name . super . IDENTIFIER
228    MethodInvocation$MethodInvocation ::= Name ( ArgumentListopt )
229    MethodInvocation$PrimaryMethodInvocation ::= Primary . IDENTIFIER ( ArgumentListopt )
230    MethodInvocation$SuperMethodInvocation ::= super . IDENTIFIER ( ArgumentListopt )
231                       | Name . super . IDENTIFIER ( ArgumentListopt )
232    ArrayAccess$ArrayAccess ::= Name $Base [ Expression ]
233                  | PrimaryNoNewArray $Base [ Expression ]
234    PostfixExpression ::= Primary
235                        | Name
236                        | PostIncrementExpression
237                        | PostDecrementExpression
238    PostIncrementExpression ::= PostfixExpression ++
239    PostDecrementExpression ::= PostfixExpression '--'
240    UnaryExpression ::= PreIncrementExpression
241                      | PreDecrementExpression
242                      | UnaryExpressionNotPlusMinus
243    UnaryExpression$PlusUnaryExpression ::= + UnaryExpression
244    UnaryExpression$MinusUnaryExpression ::= - UnaryExpression
245    PreIncrementExpression ::= ++ UnaryExpression
246    PreDecrementExpression ::= '--' UnaryExpression
247    UnaryExpressionNotPlusMinus ::= PostfixExpression
248                                  | CastExpression
249    UnaryExpressionNotPlusMinus$UnaryComplementExpression ::= ~ UnaryExpression
250    UnaryExpressionNotPlusMinus$UnaryNotExpression ::= ! UnaryExpression
251    CastExpression$PrimitiveCastExpression ::= ( PrimitiveType Dimsopt ) UnaryExpression
252    CastExpression$ClassCastExpression ::= ( Expression $Name ) UnaryExpressionNotPlusMinus
253                     | ( Name $Name Dims ) UnaryExpressionNotPlusMinus
254    MultiplicativeExpression ::= UnaryExpression
255    MultiplicativeExpression$MultiplyExpression ::= MultiplicativeExpression * UnaryExpression
256    MultiplicativeExpression$DivideExpression ::= MultiplicativeExpression / UnaryExpression
257    MultiplicativeExpression$ModExpression ::= MultiplicativeExpression % UnaryExpression
258    AdditiveExpression ::= MultiplicativeExpression
259    AdditiveExpression$AddExpression ::= AdditiveExpression + MultiplicativeExpression
260    AdditiveExpression$SubtractExpression ::= AdditiveExpression - MultiplicativeExpression
261    ShiftExpression ::= AdditiveExpression
262    ShiftExpression$LeftShiftExpression ::= ShiftExpression << AdditiveExpression
263    ShiftExpression$RightShiftExpression ::= ShiftExpression >> AdditiveExpression
264    ShiftExpression$UnsignedRightShiftExpression ::= ShiftExpression >>> AdditiveExpression
265    RelationalExpression ::= ShiftExpression
266    RelationalExpression$LessExpression ::= RelationalExpression < ShiftExpression
267    RelationalExpression$GreaterExpression ::= RelationalExpression > ShiftExpression
268    RelationalExpression$LessEqualExpression ::= RelationalExpression <= ShiftExpression
269    RelationalExpression$GreaterEqualExpression ::= RelationalExpression >= ShiftExpression
270    RelationalExpression$InstanceofExpression ::= RelationalExpression instanceof ReferenceType
271    EqualityExpression ::= RelationalExpression
272    EqualityExpression$EqualExpression ::= EqualityExpression == RelationalExpression
273    EqualityExpression$NotEqualExpression ::= EqualityExpression != RelationalExpression
274    AndExpression ::= EqualityExpression
275    AndExpression ::= AndExpression & EqualityExpression
276    ExclusiveOrExpression ::= AndExpression
277    ExclusiveOrExpression ::= ExclusiveOrExpression ^ AndExpression
278    InclusiveOrExpression ::= ExclusiveOrExpression
279    InclusiveOrExpression ::= InclusiveOrExpression '|' ExclusiveOrExpression
280    ConditionalAndExpression ::= InclusiveOrExpression
281    ConditionalAndExpression ::= ConditionalAndExpression && InclusiveOrExpression
282    ConditionalOrExpression ::= ConditionalAndExpression
283    ConditionalOrExpression ::= ConditionalOrExpression || ConditionalAndExpression
284    ConditionalExpression ::= ConditionalOrExpression
285    ConditionalExpression ::= ConditionalOrExpression ? Expression : ConditionalExpression
286    AssignmentExpression ::= ConditionalExpression
287    AssignmentExpression ::= Assignment
288    Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression
289    LeftHandSide ::= Name
290    LeftHandSide ::= FieldAccess
291    LeftHandSide ::= ArrayAccess
292    AssignmentOperator$EqualOperator ::= =
293    AssignmentOperator$MultiplyEqualOperator ::= *=
294    AssignmentOperator$DivideEqualOperator ::= /=
295    AssignmentOperator$ModEqualOperator ::= %=
296    AssignmentOperator$PlusEqualOperator ::= +=
297    AssignmentOperator$MinusEqualOperator ::= -=
298    AssignmentOperator$LeftShiftEqualOperator ::= <<=
299    AssignmentOperator$RightShiftEqualOperator ::= >>=
300    AssignmentOperator$UnsignedRightShiftEqualOperator ::= >>>=
301    AssignmentOperator$AndEqualOperator ::= &=
302    AssignmentOperator$ExclusiveOrEqualOperator ::= ^=
303    AssignmentOperator$OrEqualOperator ::= |=
304    Expression ::= AssignmentExpression
305    ConstantExpression ::= Expression
306    PackageDeclarationopt ::= $Empty
307                            | PackageDeclaration
308    Superopt ::= $Empty
309               | Super
310    Expressionopt ::= $Empty
311                    | Expression
312    ClassBodyopt ::= $Empty
313                   | ClassBody
314    ImportDeclarationsopt$$ImportDeclaration ::= $Empty
315                            | ImportDeclarations
316    TypeDeclarationsopt$$TypeDeclaration ::= $Empty
317                          | TypeDeclarations
318    ClassBodyDeclarationsopt$$ClassBodyDeclaration ::= $Empty
319                               | ClassBodyDeclarations
320    Modifiersopt$$Modifier ::= $Empty
321                   | Modifiers
322    ExplicitConstructorInvocationopt ::= $Empty
323                                       | ExplicitConstructorInvocation
324    BlockStatementsopt$$BlockStatement ::= $Empty
325                         | BlockStatements
326    Dimsopt$$Dim ::= $Empty
327              | Dims
328    ArgumentListopt$$Expression ::= $Empty
329                      | ArgumentList
330    Throwsopt$$ClassType ::= $Empty
331                | Throws
332    FormalParameterListopt$$FormalParameter ::= $Empty
333                             | FormalParameterList
334    Interfacesopt$$InterfaceType ::= $Empty
335                    | Interfaces
336    InterfaceMemberDeclarationsopt$$InterfaceMemberDeclaration ::= $Empty
337                                     | InterfaceMemberDeclarations
338    ForInitopt ::= $Empty
339                 | ForInit
340    ForUpdateopt$$StatementExpression ::= $Empty
341                   | ForUpdate
342    ExtendsInterfacesopt$$InterfaceType ::= $Empty
343                           | ExtendsInterfaces
344    Catchesopt$$CatchClause ::= $Empty
345                 | Catches
346    VariableInitializersopt$$VariableInitializer ::= $Empty
347                              | VariableInitializers
348    SwitchBlockStatementsopt$$SwitchBlockStatement ::= $Empty
349                               | SwitchBlockStatements
350    SwitchLabelsopt$$SwitchLabel ::= $Empty
351                      | SwitchLabels
352    Commaopt ::= $Empty
353               | ,
354    IDENTIFIERopt ::= $Empty
355                    | IDENTIFIER
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:36:55:36:59:1214:1218: Informative: The terminal const is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:38:9:38:12:1300:1303: Informative: The terminal goto is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaLexer.g:27:5:27:13:487:495: Informative: The terminal SlComment is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaLexer.g:28:5:28:13:502:510: Informative: The terminal MlComment is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaLexer.g:29:5:29:14:517:526: Informative: The terminal DocComment is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:119:5:119:11:4054:4060: Informative: The terminal ErrorID is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:881:5:881:36:30818:30849: Error: The nonterminal ExplicitConstructorInvocationopt is useless.
C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g:920:5:920:28:32184:32207: Error: The nonterminal SwitchBlockStatementsopt is useless.


 IBM LALR Parser Generator              1.00 (Feb  1 2007)



Cross-reference table:


AND  ==>> 275 

AND_AND  ==>> 281 

AND_EQUAL  ==>> 301 

AbstractMethodDeclaration  ==>> 119 

AdditiveExpression  ==>> 258 259 260 

AndExpression  ==>> 274 275 

ArgumentList  ==>> 214 215 

ArgumentListopt  ==>> 328 329 

ArrayAccess  ==>> 232 233 

ArrayCreationExpression  ==>> 216 217 218 

ArrayInitializer  ==>> 120 

ArrayType  ==>> 27 28 

Assignment  ==>> 288 

AssignmentExpression  ==>> 286 287 

AssignmentOperator  ==>> 292 293 294 295 296 297 298 299 300 301 302 303 

Block  ==>> 123 

BlockStatement  ==>> 126 127 128 

BlockStatements  ==>> 124 125 

BlockStatementsopt  ==>> 324 325 

BooleanLiteral  ==>> 9 10 

BreakStatement  ==>> 188 

COLON  ==>> 155 156 176 177 285 

COMMA  ==>> 65 80 91 95 122 187 215 353 

CastExpression  ==>> 251 252 253 

CatchClause  ==>> 197 

Catches  ==>> 195 196 

Catchesopt  ==>> 344 345 

CharacterLiteral  ==>> 6 

ClassBody  ==>> 66 

ClassBodyDeclaration  ==>> 69 70 71 72 

ClassBodyDeclarations  ==>> 67 68 

ClassBodyDeclarationsopt  ==>> 318 319 

ClassBodyopt  ==>> 312 313 

ClassDeclaration  ==>> 61 

ClassInstanceCreationExpression  ==>> 211 212 213 

ClassMemberDeclaration  ==>> 73 74 75 76 77 

ClassOrInterfaceType  ==>> 26 

ClassType  ==>> 29 

ClassTypeList  ==>> 94 95 

Commaopt  ==>> 352 353 

CompilationUnit  ==>> 35 

ConditionalAndExpression  ==>> 280 281 

ConditionalExpression  ==>> 284 285 

ConditionalOrExpression  ==>> 282 283 

ConstantDeclaration  ==>> 118 

ConstantExpression  ==>> 305 

ConstructorBody  ==>> 101 102 

ConstructorDeclaration  ==>> 99 

ConstructorDeclarator  ==>> 100 

ContinueStatement  ==>> 189 

DIVIDE  ==>> 256 

DIVIDE_EQUAL  ==>> 294 

DOT  ==>> 34 44 104 106 107 208 209 210 212 213 225 226 227 227 229 230 231 231 

Dim  ==>> 224 

DimExpr  ==>> 221 

DimExprs  ==>> 219 220 

Dims  ==>> 222 223 

Dimsopt  ==>> 326 327 

DoStatement  ==>> 180 

DocComment  ==>> 

DoubleLiteral  ==>> 4 

EQUAL  ==>> 82 292 

EQUAL_EQUAL  ==>> 272 

ERROR_TOKEN  ==>> 

EmptyStatement  ==>> 154 

EqualityExpression  ==>> 271 272 273 

ErrorID  ==>> 

ExclusiveOrExpression  ==>> 276 277 

ExplicitConstructorInvocation  ==>> 103 104 105 106 107 

ExplicitConstructorInvocationopt  ==>> 322 323 

Expression  ==>> 304 

ExpressionStatement  ==>> 157 

Expressionopt  ==>> 310 311 

ExtendsInterfaces  ==>> 109 

ExtendsInterfacesopt  ==>> 342 343 

FieldAccess  ==>> 225 226 227 

FieldDeclaration  ==>> 78 

Finally  ==>> 198 

FloatingPointLiteral  ==>> 3 

FloatingPointType  ==>> 22 23 

ForInit  ==>> 183 184 

ForInitopt  ==>> 338 339 

ForStatement  ==>> 181 

ForStatementNoShortIf  ==>> 182 

ForUpdate  ==>> 185 

ForUpdateopt  ==>> 340 341 

FormalParameter  ==>> 92 

FormalParameterList  ==>> 90 91 

FormalParameterListopt  ==>> 332 333 

GREATER  ==>> 267 

GREATER_EQUAL  ==>> 269 

IDENTIFIER  ==>> 33 34 61 83 89 100 108 155 156 225 226 227 229 230 231 355 

IDENTIFIERopt  ==>> 354 355 

IfThenElseStatement  ==>> 166 

IfThenElseStatementNoShortIf  ==>> 167 

IfThenStatement  ==>> 165 

ImportDeclaration  ==>> 41 42 

ImportDeclarations  ==>> 36 37 

ImportDeclarationsopt  ==>> 314 315 

InclusiveOrExpression  ==>> 278 279 

IntegerLiteral  ==>> 1 

IntegralType  ==>> 17 18 19 20 21 

InterfaceBody  ==>> 110 

InterfaceDeclaration  ==>> 108 

InterfaceMemberDeclaration  ==>> 113 114 115 116 117 

InterfaceMemberDeclarations  ==>> 111 112 

InterfaceMemberDeclarationsopt  ==>> 336 337 

InterfaceType  ==>> 30 

InterfaceTypeList  ==>> 64 65 

Interfaces  ==>> 63 

Interfacesopt  ==>> 334 335 

LBRACE  ==>> 66 102 110 120 123 169 170 

LBRACKET  ==>> 221 224 232 233 

LEFT_SHIFT  ==>> 262 

LEFT_SHIFT_EQUAL  ==>> 298 

LESS  ==>> 266 

LESS_EQUAL  ==>> 268 

LPAREN  ==>> 89 100 103 104 105 106 107 165 166 167 168 178 179 180 181 182 192 
             197 206 211 212 213 228 229 230 231 251 252 253 

LabeledStatement  ==>> 155 

LabeledStatementNoShortIf  ==>> 156 

LeftHandSide  ==>> 289 290 291 

Literal  ==>> 1 2 3 4 5 6 7 8 

LocalVariableDeclaration  ==>> 130 131 

LocalVariableDeclarationStatement  ==>> 129 

LongLiteral  ==>> 2 

MINUS  ==>> 244 260 

MINUS_EQUAL  ==>> 297 

MINUS_MINUS  ==>> 239 246 

MULTIPLY  ==>> 44 255 

MULTIPLY_EQUAL  ==>> 293 

MethodBody  ==>> 96 97 

MethodDeclaration  ==>> 86 

MethodDeclarator  ==>> 89 

MethodHeader  ==>> 87 88 

MethodInvocation  ==>> 228 229 230 231 

MlComment  ==>> 

Modifier  ==>> 50 51 52 53 54 55 56 57 58 59 60 

Modifiers  ==>> 48 49 

Modifiersopt  ==>> 320 321 

MultiplicativeExpression  ==>> 254 255 256 257 

NOT  ==>> 250 

NOT_EQUAL  ==>> 273 

Name  ==>> 31 32 

NumericType  ==>> 15 16 

OR  ==>> 279 

OR_EQUAL  ==>> 303 

OR_OR  ==>> 283 

PLUS  ==>> 243 259 

PLUS_EQUAL  ==>> 296 

PLUS_PLUS  ==>> 238 245 

PackageDeclaration  ==>> 40 

PackageDeclarationopt  ==>> 306 307 

PostDecrementExpression  ==>> 239 

PostIncrementExpression  ==>> 238 

PostfixExpression  ==>> 234 235 236 237 

PreDecrementExpression  ==>> 246 

PreIncrementExpression  ==>> 245 

Primary  ==>> 199 200 

PrimaryNoNewArray  ==>> 201 202 203 204 205 206 207 208 209 210 

PrimitiveType  ==>> 13 14 

QUESTION  ==>> 285 

QualifiedName  ==>> 34 

RBRACE  ==>> 66 102 110 120 123 169 170 

RBRACKET  ==>> 221 224 232 233 

REMAINDER  ==>> 257 

REMAINDER_EQUAL  ==>> 295 

RIGHT_SHIFT  ==>> 263 

RIGHT_SHIFT_EQUAL  ==>> 299 

RPAREN  ==>> 89 100 103 104 105 106 107 165 166 167 168 178 179 180 181 182 192 
             197 206 211 212 213 228 229 230 231 251 252 253 

ReferenceType  ==>> 24 25 

RelationalExpression  ==>> 265 266 267 268 269 270 

ReturnStatement  ==>> 190 

SEMICOLON  ==>> 40 43 44 47 77 78 97 103 104 105 106 107 117 119 129 154 157 180 
                181 181 182 182 188 189 190 191 

ShiftExpression  ==>> 261 262 263 264 

SimpleName  ==>> 33 

SingleTypeImportDeclaration  ==>> 43 

SlComment  ==>> 

Statement  ==>> 132 133 134 135 136 137 

StatementExpression  ==>> 158 159 160 161 162 163 164 

StatementExpressionList  ==>> 186 187 

StatementNoShortIf  ==>> 138 139 140 141 142 

StatementWithoutTrailingSubstatement  ==>> 143 144 145 146 147 148 149 150 151 
                                           152 153 

StaticInitializer  ==>> 98 

StringLiteral  ==>> 7 

Super  ==>> 62 

Superopt  ==>> 308 309 

SwitchBlock  ==>> 169 170 

SwitchBlockStatement  ==>> 173 

SwitchBlockStatements  ==>> 171 172 

SwitchBlockStatementsopt  ==>> 348 349 

SwitchLabel  ==>> 176 177 

SwitchLabels  ==>> 174 175 

SwitchLabelsopt  ==>> 350 351 

SwitchStatement  ==>> 168 

SynchronizedStatement  ==>> 192 

TWIDDLE  ==>> 249 

ThrowStatement  ==>> 191 

Throws  ==>> 93 

Throwsopt  ==>> 330 331 

TryStatement  ==>> 193 194 

Type  ==>> 11 12 

TypeDeclaration  ==>> 45 46 47 

TypeDeclarations  ==>> 38 39 

TypeDeclarationsopt  ==>> 316 317 

TypeImportOnDemandDeclaration  ==>> 44 

UNSIGNED_RIGHT_SHIFT  ==>> 264 

UNSIGNED_RIGHT_SHIFT_EQUAL  ==>> 300 

UnaryExpression  ==>> 240 241 242 243 244 

UnaryExpressionNotPlusMinus  ==>> 247 248 249 250 

VariableDeclarator  ==>> 81 82 

VariableDeclaratorId  ==>> 83 

VariableDeclarators  ==>> 79 80 

VariableInitializer  ==>> 84 85 

VariableInitializers  ==>> 121 122 

VariableInitializersopt  ==>> 346 347 

WhileStatement  ==>> 178 

WhileStatementNoShortIf  ==>> 179 

XOR  ==>> 277 

XOR_EQUAL  ==>> 302 

abstract  ==>> 54 

boolean  ==>> 14 

break  ==>> 188 

byte  ==>> 17 

case  ==>> 176 

catch  ==>> 197 

char  ==>> 21 

class  ==>> 61 209 210 

const  ==>> 

continue  ==>> 189 

default  ==>> 177 

do  ==>> 180 

double  ==>> 23 

else  ==>> 166 167 

extends  ==>> 62 109 

false  ==>> 10 

final  ==>> 55 

finally  ==>> 198 

float  ==>> 22 

for  ==>> 181 182 

goto  ==>> 

if  ==>> 165 166 167 

implements  ==>> 63 

import  ==>> 43 44 

instanceof  ==>> 270 

int  ==>> 19 

interface  ==>> 108 

long  ==>> 20 

native  ==>> 56 

new  ==>> 211 212 213 216 217 218 

null  ==>> 8 

package  ==>> 40 

private  ==>> 52 

protected  ==>> 51 

public  ==>> 50 

return  ==>> 190 

short  ==>> 18 

static  ==>> 53 98 

strictfp  ==>> 57 

super  ==>> 105 106 107 226 227 230 231 

switch  ==>> 168 

synchronized  ==>> 58 192 

this  ==>> 103 104 207 208 

throw  ==>> 191 

throws  ==>> 93 

transient  ==>> 59 

true  ==>> 9 

try  ==>> 193 194 

void  ==>> 88 210 

volatile  ==>> 60 

while  ==>> 178 179 180 



 IBM LALR Parser Generator              1.00 (Feb  1 2007)


First map for non-terminals:


'$accept'  ==>> abstract class final import interface native package private 
    protected public static strictfp synchronized transient volatile SEMICOLON 
    EOF_TOKEN 

CompilationUnit  ==>> '$empty' abstract class final import interface native 
    package private protected public static strictfp synchronized transient 
    volatile SEMICOLON 

Literal  ==>> false null true IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral 

BooleanLiteral  ==>> false true 

Type  ==>> IDENTIFIER boolean byte char double float int long short 

PrimitiveType  ==>> boolean byte char double float int long short 

ReferenceType  ==>> IDENTIFIER boolean byte char double float int long short 

NumericType  ==>> byte char double float int long short 

IntegralType  ==>> byte char int long short 

FloatingPointType  ==>> double float 

ClassOrInterfaceType  ==>> IDENTIFIER 

ArrayType  ==>> IDENTIFIER boolean byte char double float int long short 

Name  ==>> IDENTIFIER 

Dims  ==>> LBRACKET 

ClassType  ==>> IDENTIFIER 

InterfaceType  ==>> IDENTIFIER 

SimpleName  ==>> IDENTIFIER 

QualifiedName  ==>> IDENTIFIER 

PackageDeclarationopt  ==>> '$empty' package 

ImportDeclarationsopt  ==>> '$empty' import 

TypeDeclarationsopt  ==>> '$empty' abstract class final interface native 
    private protected public static strictfp synchronized transient volatile 
    SEMICOLON 

ImportDeclarations  ==>> import 

ImportDeclaration  ==>> import 

TypeDeclarations  ==>> abstract class final interface native private protected 
    public static strictfp synchronized transient volatile SEMICOLON 

TypeDeclaration  ==>> abstract class final interface native private protected 
    public static strictfp synchronized transient volatile SEMICOLON 

PackageDeclaration  ==>> package 

SingleTypeImportDeclaration  ==>> import 

TypeImportOnDemandDeclaration  ==>> import 

ClassDeclaration  ==>> abstract class final native private protected public 
    static strictfp synchronized transient volatile 

InterfaceDeclaration  ==>> abstract final interface native private protected 
    public static strictfp synchronized transient volatile 

Modifiers  ==>> abstract final native private protected public static strictfp 
    synchronized transient volatile 

Modifier  ==>> abstract final native private protected public static strictfp 
    synchronized transient volatile 

Modifiersopt  ==>> '$empty' abstract final native private protected public 
    static strictfp synchronized transient volatile 

Superopt  ==>> '$empty' extends 

Interfacesopt  ==>> '$empty' implements 

ClassBody  ==>> LBRACE 

Super  ==>> extends 

Interfaces  ==>> implements 

InterfaceTypeList  ==>> IDENTIFIER 

ClassBodyDeclarationsopt  ==>> '$empty' IDENTIFIER abstract boolean byte char 
    class double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile LBRACE SEMICOLON 

ClassBodyDeclarations  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short static 
    strictfp synchronized transient void volatile LBRACE SEMICOLON 

ClassBodyDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short static 
    strictfp synchronized transient void volatile LBRACE SEMICOLON 

ClassMemberDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short static 
    strictfp synchronized transient void volatile SEMICOLON 

StaticInitializer  ==>> static 

ConstructorDeclaration  ==>> IDENTIFIER abstract final native private protected 
    public static strictfp synchronized transient volatile 

Block  ==>> LBRACE 

FieldDeclaration  ==>> IDENTIFIER abstract boolean byte char double final float 
    int long native private protected public short static strictfp synchronized 
    transient volatile 

MethodDeclaration  ==>> IDENTIFIER abstract boolean byte char double final 
    float int long native private protected public short static strictfp 
    synchronized transient void volatile 

VariableDeclarators  ==>> IDENTIFIER 

VariableDeclarator  ==>> IDENTIFIER 

VariableDeclaratorId  ==>> IDENTIFIER 

VariableInitializer  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN LBRACE 

Dimsopt  ==>> '$empty' LBRACKET 

Expression  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ArrayInitializer  ==>> LBRACE 

MethodHeader  ==>> IDENTIFIER abstract boolean byte char double final float int 
    long native private protected public short static strictfp synchronized 
    transient void volatile 

MethodBody  ==>> LBRACE SEMICOLON 

MethodDeclarator  ==>> IDENTIFIER 

Throwsopt  ==>> '$empty' throws 

FormalParameterListopt  ==>> '$empty' IDENTIFIER abstract boolean byte char 
    double final float int long native private protected public short static 
    strictfp synchronized transient volatile 

FormalParameterList  ==>> IDENTIFIER abstract boolean byte char double final 
    float int long native private protected public short static strictfp 
    synchronized transient volatile 

FormalParameter  ==>> IDENTIFIER abstract boolean byte char double final float 
    int long native private protected public short static strictfp synchronized 
    transient volatile 

Throws  ==>> throws 

ClassTypeList  ==>> IDENTIFIER 

ConstructorDeclarator  ==>> IDENTIFIER 

ConstructorBody  ==>> LBRACE 

ExplicitConstructorInvocation  ==>> IDENTIFIER boolean byte char double false 
    float int long new null short super this true void IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral LPAREN 

BlockStatementsopt  ==>> '$empty' IDENTIFIER abstract boolean break byte char 
    class continue do double false final float for if int long native new null 
    private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE 
    SEMICOLON 

ArgumentListopt  ==>> '$empty' IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

Primary  ==>> IDENTIFIER boolean byte char double false float int long new null 
    short super this true void IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN 

ExtendsInterfacesopt  ==>> '$empty' extends 

InterfaceBody  ==>> LBRACE 

ExtendsInterfaces  ==>> extends 

InterfaceMemberDeclarationsopt  ==>> '$empty' IDENTIFIER abstract boolean byte 
    char class double final float int interface long native private protected 
    public short static strictfp synchronized transient void volatile SEMICOLON 

InterfaceMemberDeclarations  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile SEMICOLON 

InterfaceMemberDeclaration  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile SEMICOLON 

ConstantDeclaration  ==>> IDENTIFIER abstract boolean byte char double final 
    float int long native private protected public short static strictfp 
    synchronized transient volatile 

AbstractMethodDeclaration  ==>> IDENTIFIER abstract boolean byte char double 
    final float int long native private protected public short static strictfp 
    synchronized transient void volatile 

VariableInitializersopt  ==>> '$empty' IDENTIFIER boolean byte char double 
    false float int long new null short super this true void IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral PLUS_PLUS MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN LBRACE 

Commaopt  ==>> '$empty' COMMA 

VariableInitializers  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN LBRACE 

BlockStatements  ==>> IDENTIFIER abstract boolean break byte char class 
    continue do double false final float for if int long native new null 
    private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE 
    SEMICOLON 

BlockStatement  ==>> IDENTIFIER abstract boolean break byte char class continue 
    do double false final float for if int long native new null private 
    protected public return short static strictfp super switch synchronized 
    this throw transient true try void volatile while IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE SEMICOLON 

LocalVariableDeclarationStatement  ==>> IDENTIFIER abstract boolean byte char 
    double final float int long native private protected public short static 
    strictfp synchronized transient volatile 

Statement  ==>> IDENTIFIER boolean break byte char continue do double false 
    float for if int long new null return short super switch synchronized this 
    throw true try void while IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN 
    LBRACE SEMICOLON 

LocalVariableDeclaration  ==>> IDENTIFIER abstract boolean byte char double 
    final float int long native private protected public short static strictfp 
    synchronized transient volatile 

StatementWithoutTrailingSubstatement  ==>> IDENTIFIER boolean break byte char 
    continue do double false float int long new null return short super switch 
    synchronized this throw true try void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN LBRACE SEMICOLON 

LabeledStatement  ==>> IDENTIFIER 

IfThenStatement  ==>> if 

IfThenElseStatement  ==>> if 

WhileStatement  ==>> while 

ForStatement  ==>> for 

StatementNoShortIf  ==>> IDENTIFIER boolean break byte char continue do double 
    false float for if int long new null return short super switch synchronized 
    this throw true try void while IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN LBRACE SEMICOLON 

LabeledStatementNoShortIf  ==>> IDENTIFIER 

IfThenElseStatementNoShortIf  ==>> if 

WhileStatementNoShortIf  ==>> while 

ForStatementNoShortIf  ==>> for 

EmptyStatement  ==>> SEMICOLON 

ExpressionStatement  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN 

SwitchStatement  ==>> switch 

DoStatement  ==>> do 

BreakStatement  ==>> break 

ContinueStatement  ==>> continue 

ReturnStatement  ==>> return 

SynchronizedStatement  ==>> synchronized 

ThrowStatement  ==>> throw 

TryStatement  ==>> try 

StatementExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN 

Assignment  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

PreIncrementExpression  ==>> PLUS_PLUS 

PreDecrementExpression  ==>> MINUS_MINUS 

PostIncrementExpression  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

PostDecrementExpression  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

MethodInvocation  ==>> IDENTIFIER boolean byte char double false float int long 
    new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

ClassInstanceCreationExpression  ==>> IDENTIFIER boolean byte char double false 
    float int long new null short super this true void IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral LPAREN 

SwitchBlock  ==>> LBRACE 

SwitchLabelsopt  ==>> '$empty' case default 

SwitchBlockStatements  ==>> case default 

SwitchBlockStatement  ==>> case default 

SwitchLabels  ==>> case default 

SwitchLabel  ==>> case default 

ConstantExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ForInitopt  ==>> '$empty' IDENTIFIER abstract boolean byte char double false 
    final float int long native new null private protected public short static 
    strictfp super synchronized this transient true void volatile 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN 

Expressionopt  ==>> '$empty' IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ForUpdateopt  ==>> '$empty' IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN 

ForInit  ==>> IDENTIFIER abstract boolean byte char double false final float 
    int long native new null private protected public short static strictfp 
    super synchronized this transient true void volatile IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral PLUS_PLUS MINUS_MINUS LPAREN 

StatementExpressionList  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN 

ForUpdate  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS LPAREN 

IDENTIFIERopt  ==>> '$empty' IDENTIFIER 

Catches  ==>> catch 

Catchesopt  ==>> '$empty' catch 

Finally  ==>> finally 

CatchClause  ==>> catch 

PrimaryNoNewArray  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

ArrayCreationExpression  ==>> new 

ArrayAccess  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

FieldAccess  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

ClassBodyopt  ==>> '$empty' LBRACE 

ArgumentList  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

DimExprs  ==>> LBRACKET 

DimExpr  ==>> LBRACKET 

Dim  ==>> LBRACKET 

PostfixExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

UnaryExpression  ==>> IDENTIFIER boolean byte char double false float int long 
    new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

UnaryExpressionNotPlusMinus  ==>> IDENTIFIER boolean byte char double false 
    float int long new null short super this true void IntegerLiteral 
    LongLiteral FloatingPointLiteral DoubleLiteral CharacterLiteral 
    StringLiteral NOT TWIDDLE LPAREN 

CastExpression  ==>> LPAREN 

MultiplicativeExpression  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

AdditiveExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ShiftExpression  ==>> IDENTIFIER boolean byte char double false float int long 
    new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

RelationalExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

EqualityExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

AndExpression  ==>> IDENTIFIER boolean byte char double false float int long 
    new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ExclusiveOrExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

InclusiveOrExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ConditionalAndExpression  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ConditionalOrExpression  ==>> IDENTIFIER boolean byte char double false float 
    int long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ConditionalExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

AssignmentExpression  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS 
    MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

LeftHandSide  ==>> IDENTIFIER boolean byte char double false float int long new 
    null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 

AssignmentOperator  ==>> PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL 
    AND_EQUAL OR_EQUAL XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL 
    RIGHT_SHIFT_EQUAL UNSIGNED_RIGHT_SHIFT_EQUAL EQUAL 

ExplicitConstructorInvocationopt  ==>> '$empty' IDENTIFIER boolean byte char 
    double false float int long new null short super this true void 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral LPAREN 

SwitchBlockStatementsopt  ==>> '$empty' case default 


 IBM LALR Parser Generator              1.00 (Feb  1 2007)


Follow Map:


'$accept'  ==>> EOF_TOKEN 

CompilationUnit  ==>> EOF_TOKEN 

Literal  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

BooleanLiteral  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

Type  ==>> IDENTIFIER DOT 

PrimitiveType  ==>> IDENTIFIER RPAREN LBRACKET DOT 

ReferenceType  ==>> IDENTIFIER instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL OR_OR AND_AND XOR AND OR GREATER LESS RPAREN RBRACE RBRACKET 
    SEMICOLON QUESTION COLON COMMA DOT 

NumericType  ==>> IDENTIFIER RPAREN LBRACKET DOT 

IntegralType  ==>> IDENTIFIER RPAREN LBRACKET DOT 

FloatingPointType  ==>> IDENTIFIER RPAREN LBRACKET DOT 

ClassOrInterfaceType  ==>> IDENTIFIER implements instanceof EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL OR_OR AND_AND XOR AND OR GREATER LESS 
    LPAREN RPAREN LBRACE RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON 
    COMMA DOT 

ArrayType  ==>> IDENTIFIER instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL OR_OR AND_AND XOR AND OR GREATER LESS RPAREN LBRACE RBRACE 
    RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

Name  ==>> IDENTIFIER implements instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL 
    AND_EQUAL OR_EQUAL XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL 
    RIGHT_SHIFT_EQUAL UNSIGNED_RIGHT_SHIFT_EQUAL OR_OR AND_AND PLUS MINUS 
    REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS LPAREN RPAREN LBRACE 
    RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT EQUAL 

Dims  ==>> IDENTIFIER instanceof throws PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN LBRACE RBRACE LBRACKET RBRACKET SEMICOLON 
    QUESTION COLON COMMA DOT EQUAL 

ClassType  ==>> implements LPAREN LBRACE SEMICOLON COMMA 

InterfaceType  ==>> LBRACE COMMA 

SimpleName  ==>> IDENTIFIER implements instanceof PLUS_PLUS MINUS_MINUS 
    EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL 
    AND_EQUAL OR_EQUAL XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL 
    RIGHT_SHIFT_EQUAL UNSIGNED_RIGHT_SHIFT_EQUAL OR_OR AND_AND PLUS MINUS 
    REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS LPAREN RPAREN LBRACE 
    RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT EQUAL 

QualifiedName  ==>> IDENTIFIER implements instanceof PLUS_PLUS MINUS_MINUS 
    EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL 
    AND_EQUAL OR_EQUAL XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL 
    RIGHT_SHIFT_EQUAL UNSIGNED_RIGHT_SHIFT_EQUAL OR_OR AND_AND PLUS MINUS 
    REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS LPAREN RPAREN LBRACE 
    RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT EQUAL 

PackageDeclarationopt  ==>> abstract class final import interface native 
    private protected public static strictfp synchronized transient volatile 
    SEMICOLON EOF_TOKEN 

ImportDeclarationsopt  ==>> abstract class final interface native private 
    protected public static strictfp synchronized transient volatile SEMICOLON 
    EOF_TOKEN 

TypeDeclarationsopt  ==>> EOF_TOKEN 

ImportDeclarations  ==>> abstract class final import interface native private 
    protected public static strictfp synchronized transient volatile SEMICOLON 
    EOF_TOKEN 

ImportDeclaration  ==>> abstract class final import interface native private 
    protected public static strictfp synchronized transient volatile SEMICOLON 
    EOF_TOKEN 

TypeDeclarations  ==>> abstract class final interface native private protected 
    public static strictfp synchronized transient volatile SEMICOLON EOF_TOKEN 

TypeDeclaration  ==>> abstract class final interface native private protected 
    public static strictfp synchronized transient volatile SEMICOLON EOF_TOKEN 

PackageDeclaration  ==>> abstract class final import interface native private 
    protected public static strictfp synchronized transient volatile SEMICOLON 
    EOF_TOKEN 

SingleTypeImportDeclaration  ==>> abstract class final import interface native 
    private protected public static strictfp synchronized transient volatile 
    SEMICOLON EOF_TOKEN 

TypeImportOnDemandDeclaration  ==>> abstract class final import interface 
    native private protected public static strictfp synchronized transient 
    volatile SEMICOLON EOF_TOKEN 

ClassDeclaration  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int interface long 
    native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON EOF_TOKEN 

InterfaceDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON EOF_TOKEN 

Modifiers  ==>> IDENTIFIER abstract boolean byte char class double final float 
    int interface long native private protected public short static strictfp 
    synchronized transient void volatile 

Modifier  ==>> IDENTIFIER abstract boolean byte char class double final float 
    int interface long native private protected public short static strictfp 
    synchronized transient void volatile 

Modifiersopt  ==>> IDENTIFIER boolean byte char class double float int 
    interface long short void 

Superopt  ==>> implements LBRACE 

Interfacesopt  ==>> LBRACE 

ClassBody  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if instanceof int 
    interface long native new null private protected public return short 
    static strictfp super switch synchronized this throw transient true try 
    void volatile while IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS 
    EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS LPAREN RPAREN LBRACE RBRACE LBRACKET RBRACKET 
    SEMICOLON QUESTION COLON COMMA DOT EOF_TOKEN 

Super  ==>> implements LBRACE 

Interfaces  ==>> LBRACE 

InterfaceTypeList  ==>> LBRACE COMMA 

ClassBodyDeclarationsopt  ==>> RBRACE 

ClassBodyDeclarations  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

ClassBodyDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

ClassMemberDeclaration  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

StaticInitializer  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

ConstructorDeclaration  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

Block  ==>> IDENTIFIER abstract boolean break byte case catch char class 
    continue default do double else false final finally float for if int 
    interface long native new null private protected public return short 
    static strictfp super switch synchronized this throw transient true try 
    void volatile while IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN 
    LBRACE RBRACE SEMICOLON 

FieldDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

MethodDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile LBRACE RBRACE 
    SEMICOLON 

VariableDeclarators  ==>> SEMICOLON COMMA 

VariableDeclarator  ==>> SEMICOLON COMMA 

VariableDeclaratorId  ==>> RPAREN SEMICOLON COMMA EQUAL 

VariableInitializer  ==>> RBRACE SEMICOLON COMMA 

Dimsopt  ==>> instanceof throws PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN LBRACE RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA DOT EQUAL 

Expression  ==>> RPAREN RBRACE RBRACKET SEMICOLON COLON COMMA 

ArrayInitializer  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

MethodHeader  ==>> LBRACE SEMICOLON 

MethodBody  ==>> IDENTIFIER abstract boolean byte char class double final 
    float int interface long native private protected public short static 
    strictfp synchronized transient void volatile LBRACE RBRACE SEMICOLON 

MethodDeclarator  ==>> throws LBRACE SEMICOLON 

Throwsopt  ==>> LBRACE SEMICOLON 

FormalParameterListopt  ==>> RPAREN 

FormalParameterList  ==>> RPAREN COMMA 

FormalParameter  ==>> RPAREN COMMA 

Throws  ==>> LBRACE SEMICOLON 

ClassTypeList  ==>> LBRACE SEMICOLON COMMA 

ConstructorDeclarator  ==>> throws LBRACE 

ConstructorBody  ==>> IDENTIFIER abstract boolean byte char class double final 
    float int interface long native private protected public short static 
    strictfp synchronized transient void volatile LBRACE RBRACE SEMICOLON 

ExplicitConstructorInvocation  ==>> IDENTIFIER abstract boolean break byte 
    char class continue do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

BlockStatementsopt  ==>> RBRACE 

ArgumentListopt  ==>> RPAREN 

Primary  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

ExtendsInterfacesopt  ==>> LBRACE 

InterfaceBody  ==>> IDENTIFIER abstract boolean byte char class double final 
    float int interface long native private protected public short static 
    strictfp synchronized transient void volatile LBRACE RBRACE SEMICOLON 
    EOF_TOKEN 

ExtendsInterfaces  ==>> LBRACE 

InterfaceMemberDeclarationsopt  ==>> RBRACE 

InterfaceMemberDeclarations  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile RBRACE 
    SEMICOLON 

InterfaceMemberDeclaration  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile RBRACE 
    SEMICOLON 

ConstantDeclaration  ==>> IDENTIFIER abstract boolean byte char class double 
    final float int interface long native private protected public short 
    static strictfp synchronized transient void volatile RBRACE SEMICOLON 

AbstractMethodDeclaration  ==>> IDENTIFIER abstract boolean byte char class 
    double final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile RBRACE 
    SEMICOLON 

VariableInitializersopt  ==>> RBRACE COMMA 

Commaopt  ==>> RBRACE 

VariableInitializers  ==>> RBRACE COMMA 

BlockStatements  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

BlockStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

LocalVariableDeclarationStatement  ==>> IDENTIFIER abstract boolean break byte 
    case char class continue default do double false final float for if int 
    long native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

Statement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

LocalVariableDeclaration  ==>> SEMICOLON 

StatementWithoutTrailingSubstatement  ==>> IDENTIFIER abstract boolean break 
    byte case char class continue default do double else false final float for 
    if int long native new null private protected public return short static 
    strictfp super switch synchronized this throw transient true try void 
    volatile while IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN 
    LBRACE RBRACE SEMICOLON 

LabeledStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

IfThenStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

IfThenElseStatement  ==>> IDENTIFIER abstract boolean break byte case char 
    class continue default do double false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

WhileStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ForStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

StatementNoShortIf  ==>> else 

LabeledStatementNoShortIf  ==>> else 

IfThenElseStatementNoShortIf  ==>> else 

WhileStatementNoShortIf  ==>> else 

ForStatementNoShortIf  ==>> else 

EmptyStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ExpressionStatement  ==>> IDENTIFIER abstract boolean break byte case char 
    class continue default do double else false final float for if int long 
    native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

SwitchStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

DoStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

BreakStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ContinueStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ReturnStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

SynchronizedStatement  ==>> IDENTIFIER abstract boolean break byte case char 
    class continue default do double else false final float for if int long 
    native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ThrowStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

TryStatement  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

StatementExpression  ==>> RPAREN SEMICOLON COMMA 

Assignment  ==>> RPAREN RBRACE RBRACKET SEMICOLON COLON COMMA 

PreIncrementExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS 
    MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE 
    RBRACKET SEMICOLON QUESTION COLON COMMA 

PreDecrementExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS 
    MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE 
    RBRACKET SEMICOLON QUESTION COLON COMMA 

PostIncrementExpression  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON 
    COMMA 

PostDecrementExpression  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON 
    COMMA 

MethodInvocation  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

ClassInstanceCreationExpression  ==>> instanceof PLUS_PLUS MINUS_MINUS 
    EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION 
    COLON COMMA DOT 

SwitchBlock  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double else false final float for if int long native 
    new null private protected public return short static strictfp super 
    switch synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

SwitchLabelsopt  ==>> RBRACE 

SwitchBlockStatements  ==>> case default RBRACE 

SwitchBlockStatement  ==>> case default RBRACE 

SwitchLabels  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

SwitchLabel  ==>> IDENTIFIER abstract boolean break byte case char class 
    continue default do double false final float for if int long native new 
    null private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

ConstantExpression  ==>> COLON 

ForInitopt  ==>> SEMICOLON 

Expressionopt  ==>> SEMICOLON 

ForUpdateopt  ==>> RPAREN 

ForInit  ==>> SEMICOLON 

StatementExpressionList  ==>> RPAREN SEMICOLON COMMA 

ForUpdate  ==>> RPAREN 

IDENTIFIERopt  ==>> SEMICOLON 

Catches  ==>> IDENTIFIER abstract boolean break byte case catch char class 
    continue default do double else false final finally float for if int long 
    native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

Catchesopt  ==>> finally 

Finally  ==>> IDENTIFIER abstract boolean break byte case char class continue 
    default do double else false final float for if int long native new null 
    private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while 
    IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

CatchClause  ==>> IDENTIFIER abstract boolean break byte case catch char class 
    continue default do double else false final finally float for if int long 
    native new null private protected public return short static strictfp 
    super switch synchronized this throw transient true try void volatile 
    while IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral PLUS_PLUS MINUS_MINUS LPAREN LBRACE RBRACE 
    SEMICOLON 

PrimaryNoNewArray  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION 
    COLON COMMA DOT 

ArrayCreationExpression  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON 
    COMMA DOT 

ArrayAccess  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT 
    PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL AND_EQUAL OR_EQUAL 
    XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL RIGHT_SHIFT_EQUAL 
    UNSIGNED_RIGHT_SHIFT_EQUAL OR_OR AND_AND PLUS MINUS REMAINDER XOR AND 
    MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE LBRACKET RBRACKET SEMICOLON 
    QUESTION COLON COMMA DOT EQUAL 

FieldAccess  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT 
    PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL AND_EQUAL OR_EQUAL 
    XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL RIGHT_SHIFT_EQUAL 
    UNSIGNED_RIGHT_SHIFT_EQUAL OR_OR AND_AND PLUS MINUS REMAINDER XOR AND 
    MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE LBRACKET RBRACKET SEMICOLON 
    QUESTION COLON COMMA DOT EQUAL 

ClassBodyopt  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

ArgumentList  ==>> RPAREN COMMA 

DimExprs  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

DimExpr  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE LBRACKET RBRACKET SEMICOLON QUESTION COLON COMMA DOT 

Dim  ==>> IDENTIFIER instanceof throws PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN LBRACE RBRACE LBRACKET RBRACKET SEMICOLON 
    QUESTION COLON COMMA DOT EQUAL 

PostfixExpression  ==>> instanceof PLUS_PLUS MINUS_MINUS EQUAL_EQUAL 
    LESS_EQUAL GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT 
    UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY 
    OR DIVIDE GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON 
    COMMA 

UnaryExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS 
    MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE 
    RBRACKET SEMICOLON QUESTION COLON COMMA 

UnaryExpressionNotPlusMinus  ==>> instanceof EQUAL_EQUAL LESS_EQUAL 
    GREATER_EQUAL NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR 
    AND_AND PLUS MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS 
    RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA 

CastExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL NOT_EQUAL 
    LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS MINUS 
    REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE RBRACKET 
    SEMICOLON QUESTION COLON COMMA 

MultiplicativeExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS 
    MINUS REMAINDER XOR AND MULTIPLY OR DIVIDE GREATER LESS RPAREN RBRACE 
    RBRACKET SEMICOLON QUESTION COLON COMMA 

AdditiveExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND PLUS 
    MINUS XOR AND OR GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION 
    COLON COMMA 

ShiftExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL LEFT_SHIFT RIGHT_SHIFT UNSIGNED_RIGHT_SHIFT OR_OR AND_AND XOR 
    AND OR GREATER LESS RPAREN RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA 

RelationalExpression  ==>> instanceof EQUAL_EQUAL LESS_EQUAL GREATER_EQUAL 
    NOT_EQUAL OR_OR AND_AND XOR AND OR GREATER LESS RPAREN RBRACE RBRACKET 
    SEMICOLON QUESTION COLON COMMA 

EqualityExpression  ==>> EQUAL_EQUAL NOT_EQUAL OR_OR AND_AND XOR AND OR RPAREN 
    RBRACE RBRACKET SEMICOLON QUESTION COLON COMMA 

AndExpression  ==>> OR_OR AND_AND XOR AND OR RPAREN RBRACE RBRACKET SEMICOLON 
    QUESTION COLON COMMA 

ExclusiveOrExpression  ==>> OR_OR AND_AND XOR OR RPAREN RBRACE RBRACKET 
    SEMICOLON QUESTION COLON COMMA 

InclusiveOrExpression  ==>> OR_OR AND_AND OR RPAREN RBRACE RBRACKET SEMICOLON 
    QUESTION COLON COMMA 

ConditionalAndExpression  ==>> OR_OR AND_AND RPAREN RBRACE RBRACKET SEMICOLON 
    QUESTION COLON COMMA 

ConditionalOrExpression  ==>> OR_OR RPAREN RBRACE RBRACKET SEMICOLON QUESTION 
    COLON COMMA 

ConditionalExpression  ==>> RPAREN RBRACE RBRACKET SEMICOLON COLON COMMA 

AssignmentExpression  ==>> RPAREN RBRACE RBRACKET SEMICOLON COLON COMMA 

LeftHandSide  ==>> PLUS_EQUAL MINUS_EQUAL MULTIPLY_EQUAL DIVIDE_EQUAL 
    AND_EQUAL OR_EQUAL XOR_EQUAL REMAINDER_EQUAL LEFT_SHIFT_EQUAL 
    RIGHT_SHIFT_EQUAL UNSIGNED_RIGHT_SHIFT_EQUAL EQUAL 

AssignmentOperator  ==>> IDENTIFIER boolean byte char double false float int 
    long new null short super this true void IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    PLUS_PLUS MINUS_MINUS PLUS MINUS NOT TWIDDLE LPAREN 

ExplicitConstructorInvocationopt  ==>> 

SwitchBlockStatementsopt  ==>> 


 IBM LALR Parser Generator              1.00 (Feb  1 2007)


Name map:

'$empty' ::= '$empty'
IDENTIFIER ::= IDENTIFIER
abstract ::= abstract
boolean ::= boolean
break ::= break
byte ::= byte
case ::= case
catch ::= catch
char ::= char
class ::= class
const ::= const
continue ::= continue
default ::= default
do ::= do
double ::= double
else ::= else
extends ::= extends
false ::= false
final ::= final
finally ::= finally
float ::= float
for ::= for
goto ::= goto
if ::= if
implements ::= implements
import ::= import
instanceof ::= instanceof
int ::= int
interface ::= interface
long ::= long
native ::= native
new ::= new
null ::= null
package ::= package
private ::= private
protected ::= protected
public ::= public
return ::= return
short ::= short
static ::= static
strictfp ::= strictfp
super ::= super
switch ::= switch
synchronized ::= synchronized
this ::= this
throw ::= throw
throws ::= throws
transient ::= transient
true ::= true
try ::= try
void ::= void
volatile ::= volatile
while ::= while
IntegerLiteral ::= IntegerLiteral
LongLiteral ::= LongLiteral
FloatingPointLiteral ::= FloatingPointLiteral
DoubleLiteral ::= DoubleLiteral
CharacterLiteral ::= CharacterLiteral
StringLiteral ::= StringLiteral
PLUS_PLUS ::= ++
MINUS_MINUS ::= --
EQUAL_EQUAL ::= ==
LESS_EQUAL ::= <=
GREATER_EQUAL ::= >=
NOT_EQUAL ::= !=
LEFT_SHIFT ::= <<
RIGHT_SHIFT ::= >>
UNSIGNED_RIGHT_SHIFT ::= >>>
PLUS_EQUAL ::= +=
MINUS_EQUAL ::= -=
MULTIPLY_EQUAL ::= *=
DIVIDE_EQUAL ::= /=
AND_EQUAL ::= &=
OR_EQUAL ::= |=
XOR_EQUAL ::= ^=
REMAINDER_EQUAL ::= %=
LEFT_SHIFT_EQUAL ::= <<=
RIGHT_SHIFT_EQUAL ::= >>=
UNSIGNED_RIGHT_SHIFT_EQUAL ::= >>>=
OR_OR ::= ||
AND_AND ::= &&
PLUS ::= +
MINUS ::= -
NOT ::= !
REMAINDER ::= %
XOR ::= ^
AND ::= &
MULTIPLY ::= *
OR ::= '|'
TWIDDLE ::= ~
DIVIDE ::= /
GREATER ::= >
LESS ::= <
LPAREN ::= (
RPAREN ::= )
LBRACE ::= {
RBRACE ::= }
LBRACKET ::= [
RBRACKET ::= ]
SEMICOLON ::= ;
QUESTION ::= ?
COLON ::= :
COMMA ::= ,
DOT ::= .
EQUAL ::= =
EOF_TOKEN ::= EOF_TOKEN
SlComment ::= SlComment
MlComment ::= MlComment
DocComment ::= DocComment
ErrorID ::= ErrorID
ERROR_TOKEN ::= ERROR_TOKEN
Type ::= Type
PrimitiveType ::= PrimitiveType
ReferenceType ::= ReferenceType
ClassOrInterfaceType ::= ClassOrInterfaceType
ArrayType ::= ArrayType
Name ::= Name
Dims ::= Dims
ClassType ::= ClassType
InterfaceType ::= InterfaceType
SimpleName ::= SimpleName
ImportDeclarations ::= ImportDeclarations
ImportDeclaration ::= ImportDeclaration
TypeDeclarations ::= TypeDeclarations
TypeDeclaration ::= TypeDeclaration
Modifiers ::= Modifiers
Modifier ::= Modifier
ClassBody ::= ClassBody
InterfaceTypeList ::= InterfaceTypeList
ClassBodyDeclarations ::= ClassBodyDeclarations
ClassBodyDeclaration ::= ClassBodyDeclaration
Block ::= Block
VariableDeclarators ::= VariableDeclarators
VariableDeclarator ::= VariableDeclarator
VariableDeclaratorId ::= VariableDeclaratorId
VariableInitializer ::= VariableInitializer
Expression ::= Expression
ArrayInitializer ::= ArrayInitializer
MethodHeader ::= MethodHeader
MethodBody ::= MethodBody
MethodDeclarator ::= MethodDeclarator
FormalParameterList ::= FormalParameterList
FormalParameter ::= FormalParameter
ClassTypeList ::= ClassTypeList
ConstructorDeclarator ::= ConstructorDeclarator
ConstructorBody ::= ConstructorBody
ExplicitConstructorInvocation ::= ExplicitConstructorInvocation
Primary ::= Primary
InterfaceBody ::= InterfaceBody
InterfaceMemberDeclarations ::= InterfaceMemberDeclarations
InterfaceMemberDeclaration ::= InterfaceMemberDeclaration
VariableInitializers ::= VariableInitializers
BlockStatements ::= BlockStatements
BlockStatement ::= BlockStatement
Statement ::= Statement
LocalVariableDeclaration ::= LocalVariableDeclaration
StatementWithoutTrailingSubstatement ::= StatementWithoutTrailingSubstatement
StatementNoShortIf ::= StatementNoShortIf
StatementExpression ::= StatementExpression
PostIncrementExpression ::= PostIncrementExpression
PostDecrementExpression ::= PostDecrementExpression
MethodInvocation ::= MethodInvocation
ClassInstanceCreationExpression ::= ClassInstanceCreationExpression
SwitchBlock ::= SwitchBlock
SwitchBlockStatements ::= SwitchBlockStatements
SwitchBlockStatement ::= SwitchBlockStatement
SwitchLabels ::= SwitchLabels
SwitchLabel ::= SwitchLabel
ConstantExpression ::= ConstantExpression
StatementExpressionList ::= StatementExpressionList
Catches ::= Catches
Finally ::= Finally
CatchClause ::= CatchClause
PrimaryNoNewArray ::= PrimaryNoNewArray
ArrayAccess ::= ArrayAccess
FieldAccess ::= FieldAccess
ArgumentList ::= ArgumentList
DimExprs ::= DimExprs
DimExpr ::= DimExpr
Dim ::= Dim
PostfixExpression ::= PostfixExpression
UnaryExpression ::= UnaryExpression
UnaryExpressionNotPlusMinus ::= UnaryExpressionNotPlusMinus
MultiplicativeExpression ::= MultiplicativeExpression
AdditiveExpression ::= AdditiveExpression
ShiftExpression ::= ShiftExpression
RelationalExpression ::= RelationalExpression
EqualityExpression ::= EqualityExpression
AndExpression ::= AndExpression
ExclusiveOrExpression ::= ExclusiveOrExpression
InclusiveOrExpression ::= InclusiveOrExpression
ConditionalAndExpression ::= ConditionalAndExpression
ConditionalOrExpression ::= ConditionalOrExpression
ConditionalExpression ::= ConditionalExpression
AssignmentExpression ::= AssignmentExpression
LeftHandSide ::= LeftHandSide
AssignmentOperator ::= AssignmentOperator
CompilationUnit ::= 
Literal ::= 
BooleanLiteral ::= 
NumericType ::= 
IntegralType ::= 
FloatingPointType ::= 
QualifiedName ::= 
PackageDeclarationopt ::= 
ImportDeclarationsopt ::= 
TypeDeclarationsopt ::= 
PackageDeclaration ::= 
SingleTypeImportDeclaration ::= 
TypeImportOnDemandDeclaration ::= 
ClassDeclaration ::= 
InterfaceDeclaration ::= 
Modifiersopt ::= 
Superopt ::= 
Interfacesopt ::= 
Super ::= 
Interfaces ::= 
ClassBodyDeclarationsopt ::= 
ClassMemberDeclaration ::= 
StaticInitializer ::= 
ConstructorDeclaration ::= 
FieldDeclaration ::= 
MethodDeclaration ::= 
Dimsopt ::= 
Throwsopt ::= 
FormalParameterListopt ::= 
Throws ::= 
BlockStatementsopt ::= 
ArgumentListopt ::= 
ExtendsInterfacesopt ::= 
ExtendsInterfaces ::= 
InterfaceMemberDeclarationsopt ::= 
ConstantDeclaration ::= 
AbstractMethodDeclaration ::= 
VariableInitializersopt ::= 
Commaopt ::= 
LocalVariableDeclarationStatement ::= 
LabeledStatement ::= 
IfThenStatement ::= 
IfThenElseStatement ::= 
WhileStatement ::= 
ForStatement ::= 
LabeledStatementNoShortIf ::= 
IfThenElseStatementNoShortIf ::= 
WhileStatementNoShortIf ::= 
ForStatementNoShortIf ::= 
EmptyStatement ::= 
ExpressionStatement ::= 
SwitchStatement ::= 
DoStatement ::= 
BreakStatement ::= 
ContinueStatement ::= 
ReturnStatement ::= 
SynchronizedStatement ::= 
ThrowStatement ::= 
TryStatement ::= 
Assignment ::= 
PreIncrementExpression ::= 
PreDecrementExpression ::= 
SwitchLabelsopt ::= 
ForInitopt ::= 
Expressionopt ::= 
ForUpdateopt ::= 
ForInit ::= 
ForUpdate ::= 
IDENTIFIERopt ::= 
Catchesopt ::= 
ArrayCreationExpression ::= 
ClassBodyopt ::= 
CastExpression ::= 
ExplicitConstructorInvocationopt ::= 
SwitchBlockStatementsopt ::= 

 IBM LALR Parser Generator              1.00 (Feb  1 2007)


Scopes:

MethodInvocation ::= Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt  .
                     RPAREN 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt  .RPAREN StatementNoShortIf 
ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt  .RPAREN Statement 
ClassInstanceCreationExpression ::= Name DOT new SimpleName LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 
MethodInvocation ::= super DOT IDENTIFIER LPAREN ArgumentListopt  .RPAREN 
MethodInvocation ::= Primary DOT IDENTIFIER LPAREN ArgumentListopt  .RPAREN 
DoStatement ::= do Statement while LPAREN Expression  .RPAREN SEMICOLON 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf  .else StatementNoShortIf 
IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 
ExplicitConstructorInvocation ::= Name DOT super LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= Primary DOT super LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= Primary DOT this LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ClassInstanceCreationExpression ::= new ClassType LPAREN ArgumentListopt  .
                                    RPAREN ClassBodyopt 
ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression  .RBRACKET 
ArrayAccess ::= Name LBRACKET Expression  .RBRACKET 
MethodInvocation ::= Name LPAREN ArgumentListopt  .RPAREN 
TryStatement ::= try Block Catchesopt  .Finally 
SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabelsopt  .RBRACE 
ArrayInitializer ::= LBRACE VariableInitializersopt Commaopt  .RBRACE 
ConstructorBody ::= LBRACE ExplicitConstructorInvocation BlockStatementsopt  .
                    RBRACE 
FieldDeclaration ::= Modifiersopt Type VariableDeclarators  .SEMICOLON 
ConditionalExpression ::= ConditionalOrExpression QUESTION Expression  .COLON 
                          ConditionalExpression 
SynchronizedStatement ::= synchronized LPAREN Expression  .RPAREN Block 
WhileStatementNoShortIf ::= while LPAREN Expression  .RPAREN StatementNoShortIf 
WhileStatement ::= while LPAREN Expression  .RPAREN Statement 
SwitchStatement ::= switch LPAREN Expression  .RPAREN SwitchBlock 
IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt  .RPAREN 
                                  SEMICOLON 
ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt  .RPAREN 
                                  SEMICOLON 
IfThenElseStatementNoShortIf ::= if LPAREN Expression  .RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
ForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
DimExpr ::= LBRACKET Expression  .RBRACKET 
PrimaryNoNewArray ::= LPAREN Expression  .RPAREN 
TryStatement ::= try Block  .Catches 
ThrowStatement ::= throw Expression  .SEMICOLON 
ReturnStatement ::= return Expressionopt  .SEMICOLON 
SwitchLabel ::= case ConstantExpression  .COLON 
SwitchBlock ::= LBRACE SwitchLabelsopt  .RBRACE 
Block ::= LBRACE BlockStatementsopt  .RBRACE 
InterfaceBody ::= LBRACE InterfaceMemberDeclarationsopt  .RBRACE 
ClassBody ::= LBRACE ClassBodyDeclarationsopt  .RBRACE 
CastExpression ::= LPAREN Expression  .RPAREN UnaryExpressionNotPlusMinus 
DoStatement ::= do Statement  .while LPAREN Expression RPAREN SEMICOLON 
SwitchBlockStatement ::= SwitchLabels  .BlockStatements 
ExpressionStatement ::= StatementExpression  .SEMICOLON 
LocalVariableDeclarationStatement ::= LocalVariableDeclaration  .SEMICOLON 
Assignment ::= LeftHandSide  .AssignmentOperator AssignmentExpression 
ExplicitConstructorInvocation ::= Primary  .DOT super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= Primary  .DOT this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 


C:/eclipse/workspace/lpg.javaruntime.examples/javaexample/expandedjavaparser/JavaParser.g is LALR(2).


Number of Terminals: 110
Number of Nonterminals: 161
Number of Productions: 356
Number of Items: 1031
Number of Scopes: 54
Number of States: 333
Number of look-ahead states: 6
Number of Shift actions: 1279
Number of Goto actions: 1440
Number of Shift/Reduce actions: 2019
Number of Goto/Reduce actions: 2367
Number of Reduce actions: 1602
Number of Shift-Reduce conflicts: 0
Number of Reduce-Reduce conflicts: 0


 IBM LALR Parser Generator              1.00 (Feb  1 2007)

Shift STATES: 


STATE 1 ------------------------------------------------------------------------
( )

'$accept' ::= .CompilationUnit 

CompilationUnit ::= .PackageDeclarationopt ImportDeclarationsopt 
                    TypeDeclarationsopt 
PackageDeclaration ::= .package Name SEMICOLON 
PackageDeclarationopt ::= . (306)
PackageDeclarationopt ::= .PackageDeclaration 

package                  Shift  4

CompilationUnit          Goto   2
PackageDeclarationopt    Goto   3
PackageDeclaration       Gt/Rd  307

EOF_TOKEN                Reduce 306
SEMICOLON                Reduce 306
volatile                 Reduce 306
transient                Reduce 306
synchronized             Reduce 306
strictfp                 Reduce 306
static                   Reduce 306
public                   Reduce 306
protected                Reduce 306
private                  Reduce 306
native                   Reduce 306
interface                Reduce 306
import                   Reduce 306
final                    Reduce 306
class                    Reduce 306
abstract                 Reduce 306

Default reduction to rule  306


STATE 2 ------------------------------------------------------------------------
( 1 )

'$accept' ::= CompilationUnit . (0)

EOF_TOKEN    Accept


STATE 3 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= PackageDeclarationopt  .ImportDeclarationsopt 
                    TypeDeclarationsopt 

ImportDeclarations ::= .ImportDeclaration 
ImportDeclarations ::= .ImportDeclarations ImportDeclaration 
ImportDeclaration ::= .SingleTypeImportDeclaration 
ImportDeclaration ::= .TypeImportOnDemandDeclaration 
SingleTypeImportDeclaration ::= .import Name SEMICOLON 
TypeImportOnDemandDeclaration ::= .import Name DOT MULTIPLY SEMICOLON 
ImportDeclarationsopt ::= . (314)
ImportDeclarationsopt ::= .ImportDeclarations 

import                           Shift  6

ImportDeclarationsopt            Goto   5
TypeImportOnDemandDeclaration    Gt/Rd  42
SingleTypeImportDeclaration      Gt/Rd  41
ImportDeclarations               Goto   7
ImportDeclaration                Gt/Rd  36

EOF_TOKEN                        Reduce 314
SEMICOLON                        Reduce 314
volatile                         Reduce 314
transient                        Reduce 314
synchronized                     Reduce 314
strictfp                         Reduce 314
static                           Reduce 314
public                           Reduce 314
protected                        Reduce 314
private                          Reduce 314
native                           Reduce 314
interface                        Reduce 314
final                            Reduce 314
class                            Reduce 314
abstract                         Reduce 314

Default reduction to rule  314


STATE 4 ------------------------------------------------------------------------
( 1 )

PackageDeclaration ::= package  .Name SEMICOLON 

Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER       Sh/Rd  33

QualifiedName    Gt/Rd  32
SimpleName       Gt/Rd  31
Name             Goto   8



STATE 5 ------------------------------------------------------------------------
( 3 )

CompilationUnit ::= PackageDeclarationopt ImportDeclarationsopt  .
                    TypeDeclarationsopt 

TypeDeclarations ::= .TypeDeclaration 
TypeDeclarations ::= .TypeDeclarations TypeDeclaration 
TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
TypeDeclarationsopt ::= . (316)
TypeDeclarationsopt ::= .TypeDeclarations 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

SEMICOLON               Sh/Rd  47
volatile                Sh/Rd  60
transient               Sh/Rd  59
synchronized            Sh/Rd  58
strictfp                Sh/Rd  57
native                  Sh/Rd  56
final                   Sh/Rd  55
abstract                Sh/Rd  54
static                  Sh/Rd  53
private                 Sh/Rd  52
protected               Sh/Rd  51
public                  Sh/Rd  50

TypeDeclarationsopt     Gt/Rd  35
InterfaceDeclaration    Gt/Rd  46
ClassDeclaration        Gt/Rd  45
Modifiers               Goto   9
Modifier                Gt/Rd  48
Modifiersopt            Goto   10
TypeDeclarations        Goto   11
TypeDeclaration         Gt/Rd  38

interface               Reduce 320
class                   Reduce 320
EOF_TOKEN               Reduce 316

Default reduction to rule  320


STATE 6 ------------------------------------------------------------------------
( 3 7 )

SingleTypeImportDeclaration ::= import  .Name SEMICOLON 
TypeImportOnDemandDeclaration ::= import  .Name DOT MULTIPLY SEMICOLON 

Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER       Sh/Rd  33

QualifiedName    Gt/Rd  32
SimpleName       Gt/Rd  31
Name             Goto   12



STATE 7 ------------------------------------------------------------------------
( 3 )

ImportDeclarations ::= ImportDeclarations  .ImportDeclaration 
ImportDeclarationsopt ::= ImportDeclarations . (315)

ImportDeclaration ::= .SingleTypeImportDeclaration 
ImportDeclaration ::= .TypeImportOnDemandDeclaration 
SingleTypeImportDeclaration ::= .import Name SEMICOLON 
TypeImportOnDemandDeclaration ::= .import Name DOT MULTIPLY SEMICOLON 

import                           Shift  6

ImportDeclaration                Gt/Rd  37
TypeImportOnDemandDeclaration    Gt/Rd  42
SingleTypeImportDeclaration      Gt/Rd  41

EOF_TOKEN                        Reduce 315
SEMICOLON                        Reduce 315
volatile                         Reduce 315
transient                        Reduce 315
synchronized                     Reduce 315
strictfp                         Reduce 315
static                           Reduce 315
public                           Reduce 315
protected                        Reduce 315
private                          Reduce 315
native                           Reduce 315
interface                        Reduce 315
final                            Reduce 315
class                            Reduce 315
abstract                         Reduce 315

Default reduction to rule  315


STATE 8 ------------------------------------------------------------------------
( 4 )

QualifiedName ::= Name  .DOT IDENTIFIER 
PackageDeclaration ::= package Name  .SEMICOLON 

SEMICOLON    Sh/Rd  40
DOT          Shift  13



STATE 9 ------------------------------------------------------------------------
( 5 11 24 32 34 45 94 147 208 212 )

Modifiers ::= Modifiers  .Modifier 
Modifiersopt ::= Modifiers . (321)

Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 

volatile        Sh/Rd  60
transient       Sh/Rd  59
synchronized    Sh/Rd  58
strictfp        Sh/Rd  57
native          Sh/Rd  56
final           Sh/Rd  55
abstract        Sh/Rd  54
static          Sh/Rd  53
private         Sh/Rd  52
protected       Sh/Rd  51
public          Sh/Rd  50

Modifier        Gt/Rd  49

void            Reduce 321
short           Reduce 321
long            Reduce 321
interface       Reduce 321
int             Reduce 321
float           Reduce 321
double          Reduce 321
class           Reduce 321
char            Reduce 321
byte            Reduce 321
boolean         Reduce 321
IDENTIFIER      Reduce 321

Default reduction to rule  321


STATE 10 -----------------------------------------------------------------------
( 5 11 )

ClassDeclaration ::= Modifiersopt  .class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
InterfaceDeclaration ::= Modifiersopt  .interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 

interface    Shift  14
class        Shift  15



STATE 11 -----------------------------------------------------------------------
( 5 )

TypeDeclarations ::= TypeDeclarations  .TypeDeclaration 
TypeDeclarationsopt ::= TypeDeclarations . (317)

TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

SEMICOLON               Sh/Rd  47
volatile                Sh/Rd  60
transient               Sh/Rd  59
synchronized            Sh/Rd  58
strictfp                Sh/Rd  57
native                  Sh/Rd  56
final                   Sh/Rd  55
abstract                Sh/Rd  54
static                  Sh/Rd  53
private                 Sh/Rd  52
protected               Sh/Rd  51
public                  Sh/Rd  50

TypeDeclaration         Gt/Rd  39
InterfaceDeclaration    Gt/Rd  46
ClassDeclaration        Gt/Rd  45
Modifiers               Goto   9
Modifier                Gt/Rd  48
Modifiersopt            Goto   10

interface               Reduce 320
class                   Reduce 320
EOF_TOKEN               Reduce 317

Default reduction to rule  320


STATE 12 -----------------------------------------------------------------------
( 6 )

QualifiedName ::= Name  .DOT IDENTIFIER 
SingleTypeImportDeclaration ::= import Name  .SEMICOLON 
TypeImportOnDemandDeclaration ::= import Name  .DOT MULTIPLY SEMICOLON 

SEMICOLON    Sh/Rd  43
DOT          Shift  16



STATE 13 -----------------------------------------------------------------------
( 8 26 38 )

QualifiedName ::= Name DOT  .IDENTIFIER 

IDENTIFIER    Sh/Rd  34



STATE 14 -----------------------------------------------------------------------
( 10 31 44 )

InterfaceDeclaration ::= Modifiersopt interface  .IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 

IDENTIFIER    Shift  17



STATE 15 -----------------------------------------------------------------------
( 10 31 44 56 )

ClassDeclaration ::= Modifiersopt class  .IDENTIFIER Superopt Interfacesopt 
                     ClassBody 

IDENTIFIER    Shift  18



STATE 16 -----------------------------------------------------------------------
( 12 )

QualifiedName ::= Name DOT  .IDENTIFIER 
TypeImportOnDemandDeclaration ::= import Name DOT  .MULTIPLY SEMICOLON 

MULTIPLY      Shift  19
IDENTIFIER    Sh/Rd  34



STATE 17 -----------------------------------------------------------------------
( 14 )

InterfaceDeclaration ::= Modifiersopt interface IDENTIFIER  .
                         ExtendsInterfacesopt InterfaceBody 

ExtendsInterfaces ::= .extends InterfaceTypeList 
ExtendsInterfacesopt ::= . (342)
ExtendsInterfacesopt ::= .ExtendsInterfaces 

extends                 Shift  21

ExtendsInterfacesopt    Goto   20
ExtendsInterfaces       Gt/Rd  343

LBRACE                  Reduce 342

Default reduction to rule  342


STATE 18 -----------------------------------------------------------------------
( 15 )

ClassDeclaration ::= Modifiersopt class IDENTIFIER  .Superopt Interfacesopt 
                     ClassBody 

Super ::= .extends ClassType 
Superopt ::= . (308)
Superopt ::= .Super 

extends       Shift  23

Superopt      Goto   22
Super         Gt/Rd  309

LBRACE        Reduce 308
implements    Reduce 308

Default reduction to rule  308


STATE 19 -----------------------------------------------------------------------
( 16 )

TypeImportOnDemandDeclaration ::= import Name DOT MULTIPLY  .SEMICOLON 

SEMICOLON    Sh/Rd  44



STATE 20 -----------------------------------------------------------------------
( 17 )

InterfaceDeclaration ::= Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt  .InterfaceBody 

InterfaceBody ::= .LBRACE InterfaceMemberDeclarationsopt RBRACE 

LBRACE           Shift  24

InterfaceBody    Gt/Rd  108



STATE 21 -----------------------------------------------------------------------
( 17 )

ExtendsInterfaces ::= extends  .InterfaceTypeList 

ClassOrInterfaceType ::= .Name 
InterfaceType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
InterfaceTypeList ::= .InterfaceType 
InterfaceTypeList ::= .InterfaceTypeList COMMA InterfaceType 

IDENTIFIER              Sh/Rd  33

InterfaceTypeList       Goto   25
InterfaceType           Gt/Rd  64
Name                    Goto   26
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
ClassOrInterfaceType    Gt/Rd  30



STATE 22 -----------------------------------------------------------------------
( 18 )

ClassDeclaration ::= Modifiersopt class IDENTIFIER Superopt  .Interfacesopt 
                     ClassBody 

Interfaces ::= .implements InterfaceTypeList 
Interfacesopt ::= . (334)
Interfacesopt ::= .Interfaces 

implements       Shift  28

Interfacesopt    Goto   27
Interfaces       Gt/Rd  335

LBRACE           Reduce 334

Default reduction to rule  334


STATE 23 -----------------------------------------------------------------------
( 18 )

Super ::= extends  .ClassType 

ClassOrInterfaceType ::= .Name 
ClassType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33

ClassType               Gt/Rd  62
ClassOrInterfaceType    Gt/Rd  29
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   26



STATE 24 -----------------------------------------------------------------------
( 20 )

InterfaceBody ::= LBRACE  .InterfaceMemberDeclarationsopt RBRACE 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
FieldDeclaration ::= .Modifiersopt Type VariableDeclarators SEMICOLON 
MethodHeader ::= .Modifiersopt Type MethodDeclarator Throwsopt 
MethodHeader ::= .Modifiersopt void MethodDeclarator Throwsopt 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .FieldDeclaration 
AbstractMethodDeclaration ::= .MethodHeader SEMICOLON 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
InterfaceMemberDeclarationsopt ::= . (336)
InterfaceMemberDeclarationsopt ::= .InterfaceMemberDeclarations 

SEMICOLON                         Sh/Rd  117
volatile                          Sh/Rd  60
transient                         Sh/Rd  59
synchronized                      Sh/Rd  58
strictfp                          Sh/Rd  57
native                            Sh/Rd  56
final                             Sh/Rd  55
abstract                          Sh/Rd  54
static                            Sh/Rd  53
private                           Sh/Rd  52
protected                         Sh/Rd  51
public                            Sh/Rd  50

InterfaceMemberDeclarationsopt    Goto   29
InterfaceDeclaration              Gt/Rd  116
ClassDeclaration                  Gt/Rd  115
AbstractMethodDeclaration         Gt/Rd  114
ConstantDeclaration               Gt/Rd  113
MethodHeader                      Goto   30
Modifiersopt                      Goto   31
Modifier                          Gt/Rd  48
Modifiers                         Goto   9
FieldDeclaration                  Gt/Rd  118
InterfaceMemberDeclarations       Goto   32
InterfaceMemberDeclaration        Gt/Rd  111

void                              Reduce 320
short                             Reduce 320
long                              Reduce 320
interface                         Reduce 320
int                               Reduce 320
float                             Reduce 320
double                            Reduce 320
class                             Reduce 320
char                              Reduce 320
byte                              Reduce 320
boolean                           Reduce 320
IDENTIFIER                        Reduce 320
RBRACE                            Reduce 336

Default reduction to rule  320


STATE 25 -----------------------------------------------------------------------
( 21 )

InterfaceTypeList ::= InterfaceTypeList  .COMMA InterfaceType 
ExtendsInterfaces ::= extends InterfaceTypeList . (109)

COMMA     Shift  33

LBRACE    Reduce 109

Default reduction to rule  109


STATE 26 -----------------------------------------------------------------------
( 21 23 28 33 93 205 )

ClassOrInterfaceType ::= Name . (26)
QualifiedName ::= Name  .DOT IDENTIFIER 

DOT           Shift  13

COMMA         Reduce 26
SEMICOLON     Reduce 26
LBRACE        Reduce 26
implements    Reduce 26

Default reduction to rule  26


STATE 27 -----------------------------------------------------------------------
( 22 )

ClassDeclaration ::= Modifiersopt class IDENTIFIER Superopt Interfacesopt  .
                     ClassBody 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 

LBRACE       Shift  34

ClassBody    Gt/Rd  61



STATE 28 -----------------------------------------------------------------------
( 22 )

Interfaces ::= implements  .InterfaceTypeList 

ClassOrInterfaceType ::= .Name 
InterfaceType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
InterfaceTypeList ::= .InterfaceType 
InterfaceTypeList ::= .InterfaceTypeList COMMA InterfaceType 

IDENTIFIER              Sh/Rd  33

InterfaceTypeList       Goto   35
InterfaceType           Gt/Rd  64
Name                    Goto   26
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
ClassOrInterfaceType    Gt/Rd  30



STATE 29 -----------------------------------------------------------------------
( 24 )

InterfaceBody ::= LBRACE InterfaceMemberDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  110



STATE 30 -----------------------------------------------------------------------
( 24 32 )

AbstractMethodDeclaration ::= MethodHeader  .SEMICOLON 

SEMICOLON    Sh/Rd  119



STATE 31 -----------------------------------------------------------------------
( 24 32 )

ClassDeclaration ::= Modifiersopt  .class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
FieldDeclaration ::= Modifiersopt  .Type VariableDeclarators SEMICOLON 
MethodHeader ::= Modifiersopt  .Type MethodDeclarator Throwsopt 
MethodHeader ::= Modifiersopt  .void MethodDeclarator Throwsopt 
InterfaceDeclaration ::= Modifiersopt  .interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 

Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

interface               Shift  14
void                    Shift  36
class                   Shift  15
IDENTIFIER              Sh/Rd  33
double                  Sh/Rd  23
float                   Sh/Rd  22
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
boolean                 Sh/Rd  14

Type                    Goto   37
ReferenceType           Gt/Rd  12
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   38
PrimitiveType           Goto   39
ArrayType               Gt/Rd  25
ClassOrInterfaceType    Gt/Rd  24
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
NumericType             Gt/Rd  13



STATE 32 -----------------------------------------------------------------------
( 24 )

InterfaceMemberDeclarations ::= InterfaceMemberDeclarations  .
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarationsopt ::= InterfaceMemberDeclarations . (337)

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
FieldDeclaration ::= .Modifiersopt Type VariableDeclarators SEMICOLON 
MethodHeader ::= .Modifiersopt Type MethodDeclarator Throwsopt 
MethodHeader ::= .Modifiersopt void MethodDeclarator Throwsopt 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .FieldDeclaration 
AbstractMethodDeclaration ::= .MethodHeader SEMICOLON 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

SEMICOLON                     Sh/Rd  117
volatile                      Sh/Rd  60
transient                     Sh/Rd  59
synchronized                  Sh/Rd  58
strictfp                      Sh/Rd  57
native                        Sh/Rd  56
final                         Sh/Rd  55
abstract                      Sh/Rd  54
static                        Sh/Rd  53
private                       Sh/Rd  52
protected                     Sh/Rd  51
public                        Sh/Rd  50

InterfaceMemberDeclaration    Gt/Rd  112
InterfaceDeclaration          Gt/Rd  116
ClassDeclaration              Gt/Rd  115
AbstractMethodDeclaration     Gt/Rd  114
ConstantDeclaration           Gt/Rd  113
MethodHeader                  Goto   30
Modifiersopt                  Goto   31
Modifier                      Gt/Rd  48
Modifiers                     Goto   9
FieldDeclaration              Gt/Rd  118

void                          Reduce 320
short                         Reduce 320
long                          Reduce 320
interface                     Reduce 320
int                           Reduce 320
float                         Reduce 320
double                        Reduce 320
class                         Reduce 320
char                          Reduce 320
byte                          Reduce 320
boolean                       Reduce 320
IDENTIFIER                    Reduce 320
RBRACE                        Reduce 337

Default reduction to rule  320


STATE 33 -----------------------------------------------------------------------
( 25 35 )

InterfaceTypeList ::= InterfaceTypeList COMMA  .InterfaceType 

ClassOrInterfaceType ::= .Name 
InterfaceType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33

InterfaceType           Gt/Rd  65
ClassOrInterfaceType    Gt/Rd  30
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   26



STATE 34 -----------------------------------------------------------------------
( 27 263 305 312 )

ClassBody ::= LBRACE  .ClassBodyDeclarationsopt RBRACE 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassBodyDeclaration ::= .Block 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .Modifiersopt Type VariableDeclarators SEMICOLON 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .Modifiersopt Type MethodDeclarator Throwsopt 
MethodHeader ::= .Modifiersopt void MethodDeclarator Throwsopt 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .Modifiersopt ConstructorDeclarator Throwsopt 
                           ConstructorBody 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
ClassBodyDeclarationsopt ::= . (318)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

LBRACE                      Shift  41
volatile                    Sh/Rd  60
transient                   Sh/Rd  59
synchronized                Sh/Rd  58
strictfp                    Sh/Rd  57
native                      Sh/Rd  56
final                       Sh/Rd  55
abstract                    Sh/Rd  54
static                      Shift  42
private                     Sh/Rd  52
protected                   Sh/Rd  51
public                      Sh/Rd  50
SEMICOLON                   Sh/Rd  77

ClassBodyDeclarationsopt    Goto   40
Block                       Gt/Rd  72
ConstructorDeclaration      Gt/Rd  71
StaticInitializer           Gt/Rd  70
ClassMemberDeclaration      Gt/Rd  69
Modifier                    Gt/Rd  48
Modifiers                   Goto   9
MethodHeader                Goto   43
Modifiersopt                Goto   44
InterfaceDeclaration        Gt/Rd  76
ClassDeclaration            Gt/Rd  75
MethodDeclaration           Gt/Rd  74
FieldDeclaration            Gt/Rd  73
ClassBodyDeclarations       Goto   45
ClassBodyDeclaration        Gt/Rd  67

void                        Reduce 320
short                       Reduce 320
long                        Reduce 320
interface                   Reduce 320
int                         Reduce 320
float                       Reduce 320
double                      Reduce 320
class                       Reduce 320
char                        Reduce 320
byte                        Reduce 320
boolean                     Reduce 320
IDENTIFIER                  Reduce 320
RBRACE                      Reduce 318

Default reduction to rule  320


STATE 35 -----------------------------------------------------------------------
( 28 )

Interfaces ::= implements InterfaceTypeList . (63)
InterfaceTypeList ::= InterfaceTypeList  .COMMA InterfaceType 

COMMA     Shift  33

LBRACE    Reduce 63

Default reduction to rule  63


STATE 36 -----------------------------------------------------------------------
( 31 44 )

MethodHeader ::= Modifiersopt void  .MethodDeclarator Throwsopt 

MethodDeclarator ::= .IDENTIFIER LPAREN FormalParameterListopt RPAREN Dimsopt 

IDENTIFIER          Shift  47

MethodDeclarator    Goto   46



STATE 37 -----------------------------------------------------------------------
( 31 44 )

FieldDeclaration ::= Modifiersopt Type  .VariableDeclarators SEMICOLON 
MethodHeader ::= Modifiersopt Type  .MethodDeclarator Throwsopt 

VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .IDENTIFIER Dimsopt 
MethodDeclarator ::= .IDENTIFIER LPAREN FormalParameterListopt RPAREN Dimsopt 

IDENTIFIER              Shift  51

MethodDeclarator        Goto   48
VariableDeclarators     Goto   49
VariableDeclarator      Gt/Rd  79
VariableDeclaratorId    Goto   50



STATE 38 -----------------------------------------------------------------------
( 31 44 75 88 150 164 194 )

ClassOrInterfaceType ::= Name . (26)
ArrayType ::= Name  .Dims 
QualifiedName ::= Name  .DOT IDENTIFIER 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

DOT              Shift  13
LBRACKET         La/Sh  334

Dims             Goto   52
Dim              Gt/Rd  222

COMMA            Reduce 26
COLON            Reduce 26
QUESTION         Reduce 26
SEMICOLON        Reduce 26
RBRACKET         Reduce 26
RBRACE           Reduce 26
RPAREN           Reduce 26
LPAREN           Reduce 26
LESS             Reduce 26
GREATER          Reduce 26
OR               Reduce 26
AND              Reduce 26
XOR              Reduce 26
AND_AND          Reduce 26
OR_OR            Reduce 26
NOT_EQUAL        Reduce 26
GREATER_EQUAL    Reduce 26
LESS_EQUAL       Reduce 26
EQUAL_EQUAL      Reduce 26
instanceof       Reduce 26
IDENTIFIER       Reduce 26

Default reduction to rule  26


STATE 39 -----------------------------------------------------------------------
( 31 41 44 58 59 62 67 68 70 88 90 96 100 101 105 106 122 130 133 134 135 136 
  140 141 143 144 150 152 159 160 161 162 163 165 166 167 168 169 170 171 172 
  173 174 175 176 177 178 179 182 184 186 194 203 213 235 239 240 242 243 244 
  245 246 250 256 258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 
  295 304 315 316 317 318 319 320 321 330 331 333 )

Type ::= PrimitiveType . (11)
ArrayType ::= PrimitiveType  .Dims 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LBRACKET      Shift  53

Dims          Goto   54
Dim           Gt/Rd  222

DOT           Reduce 11
IDENTIFIER    Reduce 11

Default reduction to rule  11


STATE 40 -----------------------------------------------------------------------
( 34 )

ClassBody ::= LBRACE ClassBodyDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  66



STATE 41 -----------------------------------------------------------------------
( 34 41 42 43 45 57 62 90 140 203 211 242 243 249 250 281 287 289 293 304 319 
  320 321 331 333 )

Block ::= LBRACE  .BlockStatementsopt RBRACE 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
BlockStatementsopt ::= . (324)
BlockStatementsopt ::= .BlockStatements 

try                                     Shift  57
throw                                   Shift  58
return                                  Shift  59
continue                                Shift  60
break                                   Shift  61
do                                      Shift  62
switch                                  Shift  63
MINUS_MINUS                             Shift  67
PLUS_PLUS                               Shift  68
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
false                                   Sh/Rd  10
true                                    Sh/Rd  9
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
new                                     Shift  75
super                                   Shift  77
SEMICOLON                               Sh/Rd  154
LBRACE                                  Shift  41
if                                      Shift  81
while                                   Shift  82
for                                     Shift  83
boolean                                 Sh/Rd  14
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
double                                  Sh/Rd  23
float                                   Sh/Rd  22
IDENTIFIER                              Shift  85
volatile                                Sh/Rd  60
transient                               Sh/Rd  59
synchronized                            Shift  87
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50

BlockStatementsopt                      Goto   55
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126
Modifiersopt                            Goto   56
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PostfixExpression                       Goto   66
FieldAccess                             Goto   71
ClassInstanceCreationExpression         Goto   72
ArrayAccess                             Goto   73
MethodInvocation                        Goto   74
Literal                                 Gt/Rd  201
BooleanLiteral                          Gt/Rd  5
ArrayCreationExpression                 Gt/Rd  200
PrimaryNoNewArray                       Goto   76
Primary                                 Goto   78
LeftHandSide                            Goto   79
StatementExpression                     Goto   80
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
Type                                    Goto   84
NumericType                             Gt/Rd  13
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
Name                                    Goto   86
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
Modifiers                               Goto   88
Modifier                                Gt/Rd  48
LocalVariableDeclaration                Goto   89
BlockStatements                         Goto   90
BlockStatement                          Gt/Rd  124

class                                   Reduce 320
RBRACE                                  Reduce 324

Default reduction to rule  324


STATE 42 -----------------------------------------------------------------------
( 34 45 )

Modifier ::= static . (53)
StaticInitializer ::= static  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE          Shift  41

Block           Gt/Rd  98

volatile        Reduce 53
void            Reduce 53
transient       Reduce 53
synchronized    Reduce 53
strictfp        Reduce 53
static          Reduce 53
short           Reduce 53
public          Reduce 53
protected       Reduce 53
private         Reduce 53
native          Reduce 53
long            Reduce 53
interface       Reduce 53
int             Reduce 53
float           Reduce 53
final           Reduce 53
double          Reduce 53
class           Reduce 53
char            Reduce 53
byte            Reduce 53
boolean         Reduce 53
abstract        Reduce 53
IDENTIFIER      Reduce 53

Default reduction to rule  53


STATE 43 -----------------------------------------------------------------------
( 34 45 )

MethodDeclaration ::= MethodHeader  .MethodBody 

MethodBody ::= .Block 
MethodBody ::= .SEMICOLON 
Block ::= .LBRACE BlockStatementsopt RBRACE 

SEMICOLON     Sh/Rd  97
LBRACE        Shift  41

MethodBody    Gt/Rd  86
Block         Gt/Rd  96



STATE 44 -----------------------------------------------------------------------
( 34 45 )

ClassDeclaration ::= Modifiersopt  .class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
FieldDeclaration ::= Modifiersopt  .Type VariableDeclarators SEMICOLON 
MethodHeader ::= Modifiersopt  .Type MethodDeclarator Throwsopt 
MethodHeader ::= Modifiersopt  .void MethodDeclarator Throwsopt 
ConstructorDeclaration ::= Modifiersopt  .ConstructorDeclarator Throwsopt 
                           ConstructorBody 
InterfaceDeclaration ::= Modifiersopt  .interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 

Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
ConstructorDeclarator ::= .IDENTIFIER LPAREN FormalParameterListopt RPAREN 

interface                Shift  14
void                     Shift  36
class                    Shift  15
double                   Sh/Rd  23
float                    Sh/Rd  22
char                     Sh/Rd  21
long                     Sh/Rd  20
int                      Sh/Rd  19
short                    Sh/Rd  18
byte                     Sh/Rd  17
boolean                  Sh/Rd  14
IDENTIFIER               Shift  92

ConstructorDeclarator    Goto   91
Type                     Goto   37
ReferenceType            Gt/Rd  12
QualifiedName            Gt/Rd  32
SimpleName               Gt/Rd  31
Name                     Goto   38
PrimitiveType            Goto   39
ArrayType                Gt/Rd  25
ClassOrInterfaceType     Gt/Rd  24
FloatingPointType        Gt/Rd  16
IntegralType             Gt/Rd  15
NumericType              Gt/Rd  13



STATE 45 -----------------------------------------------------------------------
( 34 )

ClassBodyDeclarations ::= ClassBodyDeclarations  .ClassBodyDeclaration 
ClassBodyDeclarationsopt ::= ClassBodyDeclarations . (319)

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassBodyDeclaration ::= .Block 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .Modifiersopt Type VariableDeclarators SEMICOLON 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .Modifiersopt Type MethodDeclarator Throwsopt 
MethodHeader ::= .Modifiersopt void MethodDeclarator Throwsopt 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .Modifiersopt ConstructorDeclarator Throwsopt 
                           ConstructorBody 
InterfaceDeclaration ::= .Modifiersopt interface IDENTIFIER 
                         ExtendsInterfacesopt InterfaceBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

LBRACE                    Shift  41
volatile                  Sh/Rd  60
transient                 Sh/Rd  59
synchronized              Sh/Rd  58
strictfp                  Sh/Rd  57
native                    Sh/Rd  56
final                     Sh/Rd  55
abstract                  Sh/Rd  54
static                    Shift  42
private                   Sh/Rd  52
protected                 Sh/Rd  51
public                    Sh/Rd  50
SEMICOLON                 Sh/Rd  77

ClassBodyDeclaration      Gt/Rd  68
Block                     Gt/Rd  72
ConstructorDeclaration    Gt/Rd  71
StaticInitializer         Gt/Rd  70
ClassMemberDeclaration    Gt/Rd  69
Modifier                  Gt/Rd  48
Modifiers                 Goto   9
MethodHeader              Goto   43
Modifiersopt              Goto   44
InterfaceDeclaration      Gt/Rd  76
ClassDeclaration          Gt/Rd  75
MethodDeclaration         Gt/Rd  74
FieldDeclaration          Gt/Rd  73

void                      Reduce 320
short                     Reduce 320
long                      Reduce 320
interface                 Reduce 320
int                       Reduce 320
float                     Reduce 320
double                    Reduce 320
class                     Reduce 320
char                      Reduce 320
byte                      Reduce 320
boolean                   Reduce 320
IDENTIFIER                Reduce 320
RBRACE                    Reduce 319

Default reduction to rule  320


STATE 46 -----------------------------------------------------------------------
( 36 )

MethodHeader ::= Modifiersopt void MethodDeclarator  .Throwsopt 

Throws ::= .throws ClassTypeList 
Throwsopt ::= . (330)
Throwsopt ::= .Throws 

throws       Shift  93

Throwsopt    Gt/Rd  88
Throws       Gt/Rd  331

SEMICOLON    Reduce 330
LBRACE       Reduce 330

Default reduction to rule  330


STATE 47 -----------------------------------------------------------------------
( 36 )

MethodDeclarator ::= IDENTIFIER  .LPAREN FormalParameterListopt RPAREN Dimsopt 

LPAREN    Shift  94



STATE 48 -----------------------------------------------------------------------
( 37 )

MethodHeader ::= Modifiersopt Type MethodDeclarator  .Throwsopt 

Throws ::= .throws ClassTypeList 
Throwsopt ::= . (330)
Throwsopt ::= .Throws 

throws       Shift  93

Throwsopt    Gt/Rd  87
Throws       Gt/Rd  331

SEMICOLON    Reduce 330
LBRACE       Reduce 330

Default reduction to rule  330


STATE 49 -----------------------------------------------------------------------
( 37 )

FieldDeclaration ::= Modifiersopt Type VariableDeclarators  .SEMICOLON 
VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 

COMMA        Shift  95
SEMICOLON    Sh/Rd  78



STATE 50 -----------------------------------------------------------------------
( 37 84 95 145 )

VariableDeclarator ::= VariableDeclaratorId . (81)
VariableDeclarator ::= VariableDeclaratorId  .EQUAL VariableInitializer 

EQUAL        Shift  96

COMMA        Reduce 81
SEMICOLON    Reduce 81

Default reduction to rule  81


STATE 51 -----------------------------------------------------------------------
( 37 )

VariableDeclaratorId ::= IDENTIFIER  .Dimsopt 
MethodDeclarator ::= IDENTIFIER  .LPAREN FormalParameterListopt RPAREN Dimsopt 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LPAREN       Shift  94
LBRACKET     Shift  53

Dimsopt      Gt/Rd  83
Dims         Goto   97
Dim          Gt/Rd  222

EQUAL        Reduce 326
COMMA        Reduce 326
SEMICOLON    Reduce 326

Default reduction to rule  326


STATE 52 -----------------------------------------------------------------------
( 38 86 123 254 )

ArrayType ::= Name Dims . (28)
Dims ::= Dims  .Dim 

Dim ::= .LBRACKET RBRACKET 

LBRACKET         Shift  53

Dim              Gt/Rd  223

DOT              Reduce 28
COMMA            Reduce 28
COLON            Reduce 28
QUESTION         Reduce 28
SEMICOLON        Reduce 28
RBRACKET         Reduce 28
RBRACE           Reduce 28
LBRACE           Reduce 28
RPAREN           Reduce 28
LESS             Reduce 28
GREATER          Reduce 28
OR               Reduce 28
AND              Reduce 28
XOR              Reduce 28
AND_AND          Reduce 28
OR_OR            Reduce 28
NOT_EQUAL        Reduce 28
GREATER_EQUAL    Reduce 28
LESS_EQUAL       Reduce 28
EQUAL_EQUAL      Reduce 28
instanceof       Reduce 28
IDENTIFIER       Reduce 28

Default reduction to rule  28


STATE 53 -----------------------------------------------------------------------
( 39 51 52 54 97 139 157 206 215 216 219 334 )

Dim ::= LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  224



STATE 54 -----------------------------------------------------------------------
( 39 129 219 )

ArrayType ::= PrimitiveType Dims . (27)
Dims ::= Dims  .Dim 

Dim ::= .LBRACKET RBRACKET 

LBRACKET         Shift  53

Dim              Gt/Rd  223

DOT              Reduce 27
COMMA            Reduce 27
COLON            Reduce 27
QUESTION         Reduce 27
SEMICOLON        Reduce 27
RBRACKET         Reduce 27
RBRACE           Reduce 27
LBRACE           Reduce 27
RPAREN           Reduce 27
LESS             Reduce 27
GREATER          Reduce 27
OR               Reduce 27
AND              Reduce 27
XOR              Reduce 27
AND_AND          Reduce 27
OR_OR            Reduce 27
NOT_EQUAL        Reduce 27
GREATER_EQUAL    Reduce 27
LESS_EQUAL       Reduce 27
EQUAL_EQUAL      Reduce 27
instanceof       Reduce 27
IDENTIFIER       Reduce 27

Default reduction to rule  27


STATE 55 -----------------------------------------------------------------------
( 41 203 )

Block ::= LBRACE BlockStatementsopt  .RBRACE 

RBRACE    Sh/Rd  123



STATE 56 -----------------------------------------------------------------------
( 41 90 203 250 287 304 )

ClassDeclaration ::= Modifiersopt  .class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 

class    Shift  15



STATE 57 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

TryStatement ::= try  .Block Catches 
TryStatement ::= try  .Block Catchesopt Finally 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  41

Block     Goto   98



STATE 58 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

ThrowStatement ::= throw  .Expression SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   99
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 59 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

ReturnStatement ::= return  .Expressionopt SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (310)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expressionopt                      Goto   117
Expression                         Gt/Rd  311
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304

SEMICOLON                          Reduce 310

Default reduction to rule  310


STATE 60 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

ContinueStatement ::= continue  .IDENTIFIERopt SEMICOLON 

IDENTIFIERopt ::= . (354)
IDENTIFIERopt ::= .IDENTIFIER 

IDENTIFIER       Sh/Rd  355

IDENTIFIERopt    Goto   118

SEMICOLON        Reduce 354

Default reduction to rule  354


STATE 61 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

BreakStatement ::= break  .IDENTIFIERopt SEMICOLON 

IDENTIFIERopt ::= . (354)
IDENTIFIERopt ::= .IDENTIFIER 

IDENTIFIER       Sh/Rd  355

IDENTIFIERopt    Goto   119

SEMICOLON        Reduce 354

Default reduction to rule  354


STATE 62 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

DoStatement ::= do  .Statement while LPAREN Expression RPAREN SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
IDENTIFIER                              Shift  85
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57

Statement                               Goto   120
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143



STATE 63 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

SwitchStatement ::= switch  .LPAREN Expression RPAREN SwitchBlock 

LPAREN    Shift  122



STATE 64 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

StatementExpression ::= PostDecrementExpression . (162)
PostfixExpression ::= PostDecrementExpression . (237)

COMMA          Reduce 162
SEMICOLON      Reduce 162
RPAREN         Reduce 162
MINUS_MINUS    Reduce 237
PLUS_PLUS      Reduce 237

Default reduction to rule  162


STATE 65 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

StatementExpression ::= PostIncrementExpression . (161)
PostfixExpression ::= PostIncrementExpression . (236)

COMMA          Reduce 161
SEMICOLON      Reduce 161
RPAREN         Reduce 161
MINUS_MINUS    Reduce 236
PLUS_PLUS      Reduce 236

Default reduction to rule  161


STATE 66 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

PostIncrementExpression ::= PostfixExpression  .PLUS_PLUS 
PostDecrementExpression ::= PostfixExpression  .MINUS_MINUS 

MINUS_MINUS    Sh/Rd  239
PLUS_PLUS      Sh/Rd  238



STATE 67 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 203 235 239 240 242 243 244 245 246 250 256 
  258 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 316 317 
  318 319 320 321 330 331 333 )

PreDecrementExpression ::= MINUS_MINUS  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  246
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 68 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 203 235 239 240 242 243 244 245 246 250 256 
  258 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 316 317 
  318 319 320 321 330 331 333 )

PreIncrementExpression ::= PLUS_PLUS  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  245
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 69 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 203 213 235 239 240 242 243 244 245 246 250 
  256 258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 
  316 317 318 319 320 321 330 331 333 )

PrimaryNoNewArray ::= void  .DOT class 

DOT    Shift  124



STATE 70 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   125
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 71 -----------------------------------------------------------------------
( 41 58 59 62 70 90 96 103 122 130 133 134 135 136 140 141 143 144 152 177 182 
  184 186 203 235 239 240 242 243 244 245 246 250 256 266 275 277 278 285 287 
  289 290 291 292 293 294 295 304 315 316 317 318 319 320 321 330 331 333 )

PrimaryNoNewArray ::= FieldAccess . (205)
LeftHandSide ::= FieldAccess . (290)

DOT                           Reduce 205
COMMA                         Reduce 205
COLON                         Reduce 205
QUESTION                      Reduce 205
SEMICOLON                     Reduce 205
RBRACKET                      Reduce 205
LBRACKET                      Reduce 205
RBRACE                        Reduce 205
RPAREN                        Reduce 205
LESS                          Reduce 205
GREATER                       Reduce 205
DIVIDE                        Reduce 205
OR                            Reduce 205
MULTIPLY                      Reduce 205
AND                           Reduce 205
XOR                           Reduce 205
REMAINDER                     Reduce 205
MINUS                         Reduce 205
PLUS                          Reduce 205
AND_AND                       Reduce 205
OR_OR                         Reduce 205
UNSIGNED_RIGHT_SHIFT          Reduce 205
RIGHT_SHIFT                   Reduce 205
LEFT_SHIFT                    Reduce 205
NOT_EQUAL                     Reduce 205
GREATER_EQUAL                 Reduce 205
LESS_EQUAL                    Reduce 205
EQUAL_EQUAL                   Reduce 205
MINUS_MINUS                   Reduce 205
PLUS_PLUS                     Reduce 205
instanceof                    Reduce 205
EQUAL                         Reduce 290
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 290
RIGHT_SHIFT_EQUAL             Reduce 290
LEFT_SHIFT_EQUAL              Reduce 290
REMAINDER_EQUAL               Reduce 290
XOR_EQUAL                     Reduce 290
OR_EQUAL                      Reduce 290
AND_EQUAL                     Reduce 290
DIVIDE_EQUAL                  Reduce 290
MULTIPLY_EQUAL                Reduce 290
MINUS_EQUAL                   Reduce 290
PLUS_EQUAL                    Reduce 290

Default reduction to rule  205


STATE 72 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

StatementExpression ::= ClassInstanceCreationExpression . (164)
PrimaryNoNewArray ::= ClassInstanceCreationExpression . (204)

COMMA          Reduce 164
SEMICOLON      Reduce 164
RPAREN         Reduce 164
DOT            Reduce 204
LBRACKET       Reduce 204
MINUS_MINUS    Reduce 204
PLUS_PLUS      Reduce 204

Default reduction to rule  204


STATE 73 -----------------------------------------------------------------------
( 41 58 59 62 70 90 96 103 122 130 133 134 135 136 140 141 143 144 152 177 182 
  184 186 203 235 239 240 242 243 244 245 246 250 256 266 275 277 278 285 287 
  289 290 291 292 293 294 295 304 315 316 317 318 319 320 321 330 331 333 )

PrimaryNoNewArray ::= ArrayAccess . (203)
LeftHandSide ::= ArrayAccess . (291)

DOT                           Reduce 203
COMMA                         Reduce 203
COLON                         Reduce 203
QUESTION                      Reduce 203
SEMICOLON                     Reduce 203
RBRACKET                      Reduce 203
LBRACKET                      Reduce 203
RBRACE                        Reduce 203
RPAREN                        Reduce 203
LESS                          Reduce 203
GREATER                       Reduce 203
DIVIDE                        Reduce 203
OR                            Reduce 203
MULTIPLY                      Reduce 203
AND                           Reduce 203
XOR                           Reduce 203
REMAINDER                     Reduce 203
MINUS                         Reduce 203
PLUS                          Reduce 203
AND_AND                       Reduce 203
OR_OR                         Reduce 203
UNSIGNED_RIGHT_SHIFT          Reduce 203
RIGHT_SHIFT                   Reduce 203
LEFT_SHIFT                    Reduce 203
NOT_EQUAL                     Reduce 203
GREATER_EQUAL                 Reduce 203
LESS_EQUAL                    Reduce 203
EQUAL_EQUAL                   Reduce 203
MINUS_MINUS                   Reduce 203
PLUS_PLUS                     Reduce 203
instanceof                    Reduce 203
EQUAL                         Reduce 291
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 291
RIGHT_SHIFT_EQUAL             Reduce 291
LEFT_SHIFT_EQUAL              Reduce 291
REMAINDER_EQUAL               Reduce 291
XOR_EQUAL                     Reduce 291
OR_EQUAL                      Reduce 291
AND_EQUAL                     Reduce 291
DIVIDE_EQUAL                  Reduce 291
MULTIPLY_EQUAL                Reduce 291
MINUS_EQUAL                   Reduce 291
PLUS_EQUAL                    Reduce 291

Default reduction to rule  203


STATE 74 -----------------------------------------------------------------------
( 41 62 90 136 140 203 242 243 245 250 287 289 290 293 294 304 319 320 321 330 
  331 333 )

StatementExpression ::= MethodInvocation . (163)
PrimaryNoNewArray ::= MethodInvocation . (202)

COMMA          Reduce 163
SEMICOLON      Reduce 163
RPAREN         Reduce 163
DOT            Reduce 202
LBRACKET       Reduce 202
MINUS_MINUS    Reduce 202
PLUS_PLUS      Reduce 202

Default reduction to rule  202


STATE 75 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 203 213 235 239 240 242 243 244 245 246 250 
  256 258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 
  316 317 318 319 320 321 330 331 333 )

ClassInstanceCreationExpression ::= new  .ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ArrayCreationExpression ::= new  .PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .ArrayType ArrayInitializer 

PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
ClassType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33
boolean                 Sh/Rd  14
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
double                  Sh/Rd  23
float                   Sh/Rd  22

ArrayType               Goto   126
ClassType               Goto   127
ClassOrInterfaceType    Goto   128
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
NumericType             Gt/Rd  13
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
Name                    Goto   38
PrimitiveType           Goto   129



STATE 76 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 203 213 235 239 240 242 243 244 245 246 250 
  256 258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 
  316 317 318 319 320 321 330 331 333 )

Primary ::= PrimaryNoNewArray . (199)
ArrayAccess ::= PrimaryNoNewArray  .LBRACKET Expression RBRACKET 

LBRACKET                Shift  130

DOT                     Reduce 199
COMMA                   Reduce 199
COLON                   Reduce 199
QUESTION                Reduce 199
SEMICOLON               Reduce 199
RBRACKET                Reduce 199
RBRACE                  Reduce 199
RPAREN                  Reduce 199
LESS                    Reduce 199
GREATER                 Reduce 199
DIVIDE                  Reduce 199
OR                      Reduce 199
MULTIPLY                Reduce 199
AND                     Reduce 199
XOR                     Reduce 199
REMAINDER               Reduce 199
MINUS                   Reduce 199
PLUS                    Reduce 199
AND_AND                 Reduce 199
OR_OR                   Reduce 199
UNSIGNED_RIGHT_SHIFT    Reduce 199
RIGHT_SHIFT             Reduce 199
LEFT_SHIFT              Reduce 199
NOT_EQUAL               Reduce 199
GREATER_EQUAL           Reduce 199
LESS_EQUAL              Reduce 199
EQUAL_EQUAL             Reduce 199
MINUS_MINUS             Reduce 199
PLUS_PLUS               Reduce 199
instanceof              Reduce 199

Default reduction to rule  199


STATE 77 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 213 235 239 240 242 243 244 245 246 250 256 
  258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 316 
  317 318 319 320 321 330 331 333 )

FieldAccess ::= super  .DOT IDENTIFIER 
MethodInvocation ::= super  .DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 

DOT    Shift  131



STATE 78 -----------------------------------------------------------------------
( 41 58 59 62 67 68 70 90 96 100 101 103 105 106 122 130 133 134 135 136 140 
  141 143 144 152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 
  175 176 177 178 179 182 184 186 213 235 239 240 242 243 244 245 246 250 256 
  258 259 260 266 275 277 278 285 287 289 290 291 292 293 294 295 304 315 316 
  317 318 319 320 321 330 331 333 )

ClassInstanceCreationExpression ::= Primary  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary  .DOT IDENTIFIER 
MethodInvocation ::= Primary  .DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
PostfixExpression ::= Primary . (234)

DOT                     Shift  132

COMMA                   Reduce 234
COLON                   Reduce 234
QUESTION                Reduce 234
SEMICOLON               Reduce 234
RBRACKET                Reduce 234
RBRACE                  Reduce 234
RPAREN                  Reduce 234
LESS                    Reduce 234
GREATER                 Reduce 234
DIVIDE                  Reduce 234
OR                      Reduce 234
MULTIPLY                Reduce 234
AND                     Reduce 234
XOR                     Reduce 234
REMAINDER               Reduce 234
MINUS                   Reduce 234
PLUS                    Reduce 234
AND_AND                 Reduce 234
OR_OR                   Reduce 234
UNSIGNED_RIGHT_SHIFT    Reduce 234
RIGHT_SHIFT             Reduce 234
LEFT_SHIFT              Reduce 234
NOT_EQUAL               Reduce 234
GREATER_EQUAL           Reduce 234
LESS_EQUAL              Reduce 234
EQUAL_EQUAL             Reduce 234
MINUS_MINUS             Reduce 234
PLUS_PLUS               Reduce 234
instanceof              Reduce 234

Default reduction to rule  234


STATE 79 -----------------------------------------------------------------------
( 41 58 59 62 70 90 96 103 122 130 133 134 135 136 140 141 143 144 152 177 182 
  184 186 203 235 239 240 242 243 244 245 246 250 256 266 275 277 278 285 287 
  289 290 291 292 293 294 295 304 315 316 317 318 319 320 321 330 331 333 )

Assignment ::= LeftHandSide  .AssignmentOperator AssignmentExpression 

AssignmentOperator ::= .EQUAL 
AssignmentOperator ::= .MULTIPLY_EQUAL 
AssignmentOperator ::= .DIVIDE_EQUAL 
AssignmentOperator ::= .REMAINDER_EQUAL 
AssignmentOperator ::= .PLUS_EQUAL 
AssignmentOperator ::= .MINUS_EQUAL 
AssignmentOperator ::= .LEFT_SHIFT_EQUAL 
AssignmentOperator ::= .RIGHT_SHIFT_EQUAL 
AssignmentOperator ::= .UNSIGNED_RIGHT_SHIFT_EQUAL 
AssignmentOperator ::= .AND_EQUAL 
AssignmentOperator ::= .XOR_EQUAL 
AssignmentOperator ::= .OR_EQUAL 

OR_EQUAL                      Sh/Rd  303
XOR_EQUAL                     Sh/Rd  302
AND_EQUAL                     Sh/Rd  301
UNSIGNED_RIGHT_SHIFT_EQUAL    Sh/Rd  300
RIGHT_SHIFT_EQUAL             Sh/Rd  299
LEFT_SHIFT_EQUAL              Sh/Rd  298
MINUS_EQUAL                   Sh/Rd  297
PLUS_EQUAL                    Sh/Rd  296
REMAINDER_EQUAL               Sh/Rd  295
DIVIDE_EQUAL                  Sh/Rd  294
MULTIPLY_EQUAL                Sh/Rd  293
EQUAL                         Sh/Rd  292

AssignmentOperator            Goto   133



STATE 80 -----------------------------------------------------------------------
( 41 62 90 140 203 242 243 250 287 289 293 304 319 320 321 331 333 )

ExpressionStatement ::= StatementExpression  .SEMICOLON 

SEMICOLON    Sh/Rd  157



STATE 81 -----------------------------------------------------------------------
( 41 62 90 140 203 243 250 287 289 304 321 )

IfThenStatement ::= if  .LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= if  .LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 

LPAREN    Shift  134



STATE 82 -----------------------------------------------------------------------
( 41 62 90 140 203 243 250 287 289 304 321 )

WhileStatement ::= while  .LPAREN Expression RPAREN Statement 

LPAREN    Shift  135



STATE 83 -----------------------------------------------------------------------
( 41 62 90 140 203 243 250 287 289 304 321 )

ForStatement ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 

LPAREN    Shift  136



STATE 84 -----------------------------------------------------------------------
( 41 90 136 203 250 287 290 304 )

LocalVariableDeclaration ::= Type  .VariableDeclarators 
PrimaryNoNewArray ::= Type  .DOT class 

VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .IDENTIFIER Dimsopt 

DOT                     Shift  137
IDENTIFIER              Shift  139

VariableDeclarators     Goto   138
VariableDeclarator      Gt/Rd  79
VariableDeclaratorId    Goto   50



STATE 85 -----------------------------------------------------------------------
( 41 62 90 140 203 243 250 287 289 304 321 )

SimpleName ::= IDENTIFIER . (33)
LabeledStatement ::= IDENTIFIER  .COLON Statement 

COLON                         Shift  140

EQUAL                         Reduce 33
DOT                           Reduce 33
LBRACKET                      Reduce 33
LPAREN                        Reduce 33
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 33
RIGHT_SHIFT_EQUAL             Reduce 33
LEFT_SHIFT_EQUAL              Reduce 33
REMAINDER_EQUAL               Reduce 33
XOR_EQUAL                     Reduce 33
OR_EQUAL                      Reduce 33
AND_EQUAL                     Reduce 33
DIVIDE_EQUAL                  Reduce 33
MULTIPLY_EQUAL                Reduce 33
MINUS_EQUAL                   Reduce 33
PLUS_EQUAL                    Reduce 33
MINUS_MINUS                   Reduce 33
PLUS_PLUS                     Reduce 33
IDENTIFIER                    Reduce 33

Default reduction to rule  33


STATE 86 -----------------------------------------------------------------------
( 41 58 59 62 70 90 96 122 130 133 134 135 136 140 141 143 144 152 177 182 184 
  186 235 239 240 242 243 244 245 246 250 256 266 275 277 278 285 287 289 290 
  291 292 293 294 295 304 315 316 317 318 319 320 321 330 331 333 )

ClassOrInterfaceType ::= Name . (26)
ArrayType ::= Name  .Dims 
QualifiedName ::= Name  .DOT IDENTIFIER 
PrimaryNoNewArray ::= Name  .DOT this 
ClassInstanceCreationExpression ::= Name  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name  .DOT super DOT IDENTIFIER 
MethodInvocation ::= Name  .LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= Name  .DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= Name  .LBRACKET Expression RBRACKET 
PostfixExpression ::= Name . (235)
LeftHandSide ::= Name . (289)

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LPAREN                        Shift  141
DOT                           La/Sh  335
LBRACKET                      Shift  143

Dims                          Goto   52
Dim                           Gt/Rd  222

IDENTIFIER                    Reduce 26
COMMA                         Reduce 235
COLON                         Reduce 235
QUESTION                      Reduce 235
SEMICOLON                     Reduce 235
RBRACKET                      Reduce 235
RBRACE                        Reduce 235
RPAREN                        Reduce 235
LESS                          Reduce 235
GREATER                       Reduce 235
DIVIDE                        Reduce 235
OR                            Reduce 235
MULTIPLY                      Reduce 235
AND                           Reduce 235
XOR                           Reduce 235
REMAINDER                     Reduce 235
MINUS                         Reduce 235
PLUS                          Reduce 235
AND_AND                       Reduce 235
OR_OR                         Reduce 235
UNSIGNED_RIGHT_SHIFT          Reduce 235
RIGHT_SHIFT                   Reduce 235
LEFT_SHIFT                    Reduce 235
NOT_EQUAL                     Reduce 235
GREATER_EQUAL                 Reduce 235
LESS_EQUAL                    Reduce 235
EQUAL_EQUAL                   Reduce 235
MINUS_MINUS                   Reduce 235
PLUS_PLUS                     Reduce 235
instanceof                    Reduce 235
EQUAL                         Reduce 289
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 289
RIGHT_SHIFT_EQUAL             Reduce 289
LEFT_SHIFT_EQUAL              Reduce 289
REMAINDER_EQUAL               Reduce 289
XOR_EQUAL                     Reduce 289
OR_EQUAL                      Reduce 289
AND_EQUAL                     Reduce 289
DIVIDE_EQUAL                  Reduce 289
MULTIPLY_EQUAL                Reduce 289
MINUS_EQUAL                   Reduce 289
PLUS_EQUAL                    Reduce 289

Default reduction to rule  235


STATE 87 -----------------------------------------------------------------------
( 41 90 203 250 287 304 )

Modifier ::= synchronized . (58)
SynchronizedStatement ::= synchronized  .LPAREN Expression RPAREN Block 

LPAREN          Shift  144

volatile        Reduce 58
transient       Reduce 58
synchronized    Reduce 58
strictfp        Reduce 58
static          Reduce 58
short           Reduce 58
public          Reduce 58
protected       Reduce 58
private         Reduce 58
native          Reduce 58
long            Reduce 58
int             Reduce 58
float           Reduce 58
final           Reduce 58
double          Reduce 58
class           Reduce 58
char            Reduce 58
byte            Reduce 58
boolean         Reduce 58
abstract        Reduce 58
IDENTIFIER      Reduce 58

Default reduction to rule  58


STATE 88 -----------------------------------------------------------------------
( 41 90 203 250 287 304 )

Modifiers ::= Modifiers  .Modifier 
LocalVariableDeclaration ::= Modifiers  .Type VariableDeclarators 
Modifiersopt ::= Modifiers . (321)

Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 

volatile                Sh/Rd  60
transient               Sh/Rd  59
synchronized            Sh/Rd  58
strictfp                Sh/Rd  57
native                  Sh/Rd  56
final                   Sh/Rd  55
abstract                Sh/Rd  54
static                  Sh/Rd  53
private                 Sh/Rd  52
protected               Sh/Rd  51
public                  Sh/Rd  50
IDENTIFIER              Sh/Rd  33
double                  Sh/Rd  23
float                   Sh/Rd  22
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
boolean                 Sh/Rd  14

Type                    Goto   145
Modifier                Gt/Rd  49
ReferenceType           Gt/Rd  12
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   38
PrimitiveType           Goto   39
ArrayType               Gt/Rd  25
ClassOrInterfaceType    Gt/Rd  24
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
NumericType             Gt/Rd  13

class                   Reduce 321

Default reduction to rule  321


STATE 89 -----------------------------------------------------------------------
( 41 90 203 250 287 304 )

LocalVariableDeclarationStatement ::= LocalVariableDeclaration  .SEMICOLON 

SEMICOLON    Sh/Rd  129



STATE 90 -----------------------------------------------------------------------
( 41 203 250 )

BlockStatements ::= BlockStatements  .BlockStatement 
BlockStatementsopt ::= BlockStatements . (325)

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

try                                     Shift  57
throw                                   Shift  58
return                                  Shift  59
continue                                Shift  60
break                                   Shift  61
do                                      Shift  62
switch                                  Shift  63
MINUS_MINUS                             Shift  67
PLUS_PLUS                               Shift  68
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
false                                   Sh/Rd  10
true                                    Sh/Rd  9
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
new                                     Shift  75
super                                   Shift  77
SEMICOLON                               Sh/Rd  154
LBRACE                                  Shift  41
if                                      Shift  81
while                                   Shift  82
for                                     Shift  83
boolean                                 Sh/Rd  14
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
double                                  Sh/Rd  23
float                                   Sh/Rd  22
IDENTIFIER                              Shift  85
volatile                                Sh/Rd  60
transient                               Sh/Rd  59
synchronized                            Shift  87
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50

BlockStatement                          Gt/Rd  125
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126
Modifiersopt                            Goto   56
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PostfixExpression                       Goto   66
FieldAccess                             Goto   71
ClassInstanceCreationExpression         Goto   72
ArrayAccess                             Goto   73
MethodInvocation                        Goto   74
Literal                                 Gt/Rd  201
BooleanLiteral                          Gt/Rd  5
ArrayCreationExpression                 Gt/Rd  200
PrimaryNoNewArray                       Goto   76
Primary                                 Goto   78
LeftHandSide                            Goto   79
StatementExpression                     Goto   80
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
Type                                    Goto   84
NumericType                             Gt/Rd  13
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
Name                                    Goto   86
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
Modifiers                               Goto   88
Modifier                                Gt/Rd  48
LocalVariableDeclaration                Goto   89

class                                   Reduce 320
RBRACE                                  Reduce 325

Default reduction to rule  325


STATE 91 -----------------------------------------------------------------------
( 44 )

ConstructorDeclaration ::= Modifiersopt ConstructorDeclarator  .Throwsopt 
                           ConstructorBody 

Throws ::= .throws ClassTypeList 
Throwsopt ::= . (330)
Throwsopt ::= .Throws 

throws       Shift  93

Throwsopt    Goto   146
Throws       Gt/Rd  331

LBRACE       Reduce 330

Default reduction to rule  330


STATE 92 -----------------------------------------------------------------------
( 44 )

SimpleName ::= IDENTIFIER . (33)
ConstructorDeclarator ::= IDENTIFIER  .LPAREN FormalParameterListopt RPAREN 

LPAREN        Shift  147

DOT           Reduce 33
LBRACKET      Reduce 33
IDENTIFIER    Reduce 33

Default reduction to rule  33


STATE 93 -----------------------------------------------------------------------
( 46 48 91 )

Throws ::= throws  .ClassTypeList 

ClassOrInterfaceType ::= .Name 
ClassType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
ClassTypeList ::= .ClassType 
ClassTypeList ::= .ClassTypeList COMMA ClassType 

IDENTIFIER              Sh/Rd  33

ClassTypeList           Goto   148
ClassType               Gt/Rd  94
Name                    Goto   26
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
ClassOrInterfaceType    Gt/Rd  29



STATE 94 -----------------------------------------------------------------------
( 47 51 )

MethodDeclarator ::= IDENTIFIER LPAREN  .FormalParameterListopt RPAREN Dimsopt 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
FormalParameterList ::= .FormalParameter 
FormalParameterList ::= .FormalParameterList COMMA FormalParameter 
FormalParameter ::= .Modifiersopt Type VariableDeclaratorId 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
FormalParameterListopt ::= . (332)
FormalParameterListopt ::= .FormalParameterList 

volatile                  Sh/Rd  60
transient                 Sh/Rd  59
synchronized              Sh/Rd  58
strictfp                  Sh/Rd  57
native                    Sh/Rd  56
final                     Sh/Rd  55
abstract                  Sh/Rd  54
static                    Sh/Rd  53
private                   Sh/Rd  52
protected                 Sh/Rd  51
public                    Sh/Rd  50

FormalParameterListopt    Goto   149
Modifiersopt              Goto   150
Modifier                  Gt/Rd  48
Modifiers                 Goto   9
FormalParameterList       Goto   151
FormalParameter           Gt/Rd  90

short                     Reduce 320
long                      Reduce 320
int                       Reduce 320
float                     Reduce 320
double                    Reduce 320
char                      Reduce 320
byte                      Reduce 320
boolean                   Reduce 320
IDENTIFIER                Reduce 320
RPAREN                    Reduce 332

Default reduction to rule  320


STATE 95 -----------------------------------------------------------------------
( 49 138 202 )

VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 

VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .IDENTIFIER Dimsopt 

IDENTIFIER              Shift  139

VariableDeclarator      Gt/Rd  80
VariableDeclaratorId    Goto   50



STATE 96 -----------------------------------------------------------------------
( 50 )

VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

LBRACE                             Shift  152
MINUS                              Shift  105
PLUS                               Shift  106
void                               Shift  69
this                               Sh/Rd  207
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
IDENTIFIER                         Sh/Rd  33
super                              Shift  77
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
LPAREN                             Shift  103
NOT                                Shift  100
TWIDDLE                            Shift  101
MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68

VariableInitializer                Gt/Rd  82
ArrayInitializer                   Gt/Rd  85
Expression                         Gt/Rd  84
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304



STATE 97 -----------------------------------------------------------------------
( 51 139 183 185 206 )

Dims ::= Dims  .Dim 
Dimsopt ::= Dims . (327)

Dim ::= .LBRACKET RBRACKET 

LBRACKET                Shift  53

Dim                     Gt/Rd  223

EQUAL                   Reduce 327
DOT                     Reduce 327
COMMA                   Reduce 327
COLON                   Reduce 327
QUESTION                Reduce 327
SEMICOLON               Reduce 327
RBRACKET                Reduce 327
RBRACE                  Reduce 327
LBRACE                  Reduce 327
RPAREN                  Reduce 327
LESS                    Reduce 327
GREATER                 Reduce 327
DIVIDE                  Reduce 327
OR                      Reduce 327
MULTIPLY                Reduce 327
AND                     Reduce 327
XOR                     Reduce 327
REMAINDER               Reduce 327
MINUS                   Reduce 327
PLUS                    Reduce 327
AND_AND                 Reduce 327
OR_OR                   Reduce 327
UNSIGNED_RIGHT_SHIFT    Reduce 327
RIGHT_SHIFT             Reduce 327
LEFT_SHIFT              Reduce 327
NOT_EQUAL               Reduce 327
GREATER_EQUAL           Reduce 327
LESS_EQUAL              Reduce 327
EQUAL_EQUAL             Reduce 327
MINUS_MINUS             Reduce 327
PLUS_PLUS               Reduce 327
throws                  Reduce 327
instanceof              Reduce 327

Default reduction to rule  327


STATE 98 -----------------------------------------------------------------------
( 57 )

TryStatement ::= try Block  .Catches 
TryStatement ::= try Block  .Catchesopt Finally 

Catches ::= .CatchClause 
Catches ::= .Catches CatchClause 
CatchClause ::= .catch LPAREN FormalParameter RPAREN Block 
Catchesopt ::= . (344)
Catchesopt ::= .Catches 

catch          Shift  154

Catchesopt     Goto   153
CatchClause    Gt/Rd  195
Catches        Goto   155

finally        Reduce 344

Default reduction to rule  344


STATE 99 -----------------------------------------------------------------------
( 58 )

ThrowStatement ::= throw Expression  .SEMICOLON 

SEMICOLON    Sh/Rd  191



STATE 100 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 213 235 239 240 244 246 256 258 259 260 266 275 277 278 285 
  291 292 295 315 316 317 318 )

UnaryExpressionNotPlusMinus ::= NOT  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  250
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 101 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 213 235 239 240 244 246 256 258 259 260 266 275 277 278 285 
  291 292 295 315 316 317 318 )

UnaryExpressionNotPlusMinus ::= TWIDDLE  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  249
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 102 ----------------------------------------------------------------------
( 58 59 62 67 68 70 96 100 101 103 105 106 122 130 133 134 135 140 141 143 144 
  152 159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 
  178 179 182 184 186 213 235 239 240 242 243 244 245 246 256 258 259 260 266 
  275 277 278 285 289 291 292 293 294 295 315 316 317 318 319 320 321 330 331 
  333 )

PrimaryNoNewArray ::= Type  .DOT class 

DOT    Shift  137



STATE 103 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 213 235 239 240 244 246 256 258 259 260 266 275 277 278 285 
  291 292 295 315 316 317 318 )

PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 
CastExpression ::= LPAREN  .PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= LPAREN  .Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= LPAREN  .Name Dims RPAREN UnaryExpressionNotPlusMinus 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   156
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   157
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   158
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 104 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 213 235 239 240 244 246 256 258 259 260 266 275 277 278 285 
  291 292 295 315 316 317 318 )

PostIncrementExpression ::= PostfixExpression  .PLUS_PLUS 
PostDecrementExpression ::= PostfixExpression  .MINUS_MINUS 
UnaryExpressionNotPlusMinus ::= PostfixExpression . (247)

MINUS_MINUS             Sh/Rd  239
PLUS_PLUS               Sh/Rd  238

COMMA                   Reduce 247
COLON                   Reduce 247
QUESTION                Reduce 247
SEMICOLON               Reduce 247
RBRACKET                Reduce 247
RBRACE                  Reduce 247
RPAREN                  Reduce 247
LESS                    Reduce 247
GREATER                 Reduce 247
DIVIDE                  Reduce 247
OR                      Reduce 247
MULTIPLY                Reduce 247
AND                     Reduce 247
XOR                     Reduce 247
REMAINDER               Reduce 247
MINUS                   Reduce 247
PLUS                    Reduce 247
AND_AND                 Reduce 247
OR_OR                   Reduce 247
UNSIGNED_RIGHT_SHIFT    Reduce 247
RIGHT_SHIFT             Reduce 247
LEFT_SHIFT              Reduce 247
NOT_EQUAL               Reduce 247
GREATER_EQUAL           Reduce 247
LESS_EQUAL              Reduce 247
EQUAL_EQUAL             Reduce 247
instanceof              Reduce 247

Default reduction to rule  247


STATE 105 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 235 239 240 244 246 256 258 260 266 275 277 278 285 291 292 
  295 315 316 317 318 )

UnaryExpression ::= MINUS  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  244
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 106 ----------------------------------------------------------------------
( 58 59 67 68 70 96 100 101 103 105 106 122 130 133 134 135 141 143 144 152 
  159 160 161 162 163 165 166 167 168 169 170 171 172 173 174 175 176 177 178 
  179 182 184 186 235 239 240 244 246 256 258 260 266 275 277 278 285 291 292 
  295 315 316 317 318 )

UnaryExpression ::= PLUS  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  243
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 107 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 165 166 167 168 172 173 
  174 175 176 177 178 179 182 184 186 235 239 240 244 246 256 260 266 275 277 
  278 285 291 292 295 315 316 317 318 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= AdditiveExpression . (261)

MINUS                   Shift  159
PLUS                    Shift  160

COMMA                   Reduce 261
COLON                   Reduce 261
QUESTION                Reduce 261
SEMICOLON               Reduce 261
RBRACKET                Reduce 261
RBRACE                  Reduce 261
RPAREN                  Reduce 261
LESS                    Reduce 261
GREATER                 Reduce 261
OR                      Reduce 261
AND                     Reduce 261
XOR                     Reduce 261
AND_AND                 Reduce 261
OR_OR                   Reduce 261
UNSIGNED_RIGHT_SHIFT    Reduce 261
RIGHT_SHIFT             Reduce 261
LEFT_SHIFT              Reduce 261
NOT_EQUAL               Reduce 261
GREATER_EQUAL           Reduce 261
LESS_EQUAL              Reduce 261
EQUAL_EQUAL             Reduce 261
instanceof              Reduce 261

Default reduction to rule  261


STATE 108 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 165 166 167 168 169 170 
  171 172 173 174 175 176 177 178 179 182 184 186 235 239 240 244 246 256 260 
  266 275 277 278 285 291 292 295 315 316 317 318 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= MultiplicativeExpression . (258)

REMAINDER               Shift  161
DIVIDE                  Shift  162
MULTIPLY                Shift  163

COMMA                   Reduce 258
COLON                   Reduce 258
QUESTION                Reduce 258
SEMICOLON               Reduce 258
RBRACKET                Reduce 258
RBRACE                  Reduce 258
RPAREN                  Reduce 258
LESS                    Reduce 258
GREATER                 Reduce 258
OR                      Reduce 258
AND                     Reduce 258
XOR                     Reduce 258
MINUS                   Reduce 258
PLUS                    Reduce 258
AND_AND                 Reduce 258
OR_OR                   Reduce 258
UNSIGNED_RIGHT_SHIFT    Reduce 258
RIGHT_SHIFT             Reduce 258
LEFT_SHIFT              Reduce 258
NOT_EQUAL               Reduce 258
GREATER_EQUAL           Reduce 258
LESS_EQUAL              Reduce 258
EQUAL_EQUAL             Reduce 258
instanceof              Reduce 258

Default reduction to rule  258


STATE 109 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 172 175 176 177 178 179 
  182 184 186 235 239 240 244 246 256 260 266 275 277 278 285 291 292 295 315 
  316 317 318 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= RelationalExpression . (271)

instanceof       Shift  164
GREATER_EQUAL    Shift  165
LESS_EQUAL       Shift  166
GREATER          Shift  167
LESS             Shift  168

COMMA            Reduce 271
COLON            Reduce 271
QUESTION         Reduce 271
SEMICOLON        Reduce 271
RBRACKET         Reduce 271
RBRACE           Reduce 271
RPAREN           Reduce 271
OR               Reduce 271
AND              Reduce 271
XOR              Reduce 271
AND_AND          Reduce 271
OR_OR            Reduce 271
NOT_EQUAL        Reduce 271
EQUAL_EQUAL      Reduce 271

Default reduction to rule  271


STATE 110 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 172 173 174 175 176 177 
  178 179 182 184 186 235 239 240 244 246 256 260 266 275 277 278 285 291 292 
  295 315 316 317 318 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= ShiftExpression . (265)

UNSIGNED_RIGHT_SHIFT    Shift  169
RIGHT_SHIFT             Shift  170
LEFT_SHIFT              Shift  171

COMMA                   Reduce 265
COLON                   Reduce 265
QUESTION                Reduce 265
SEMICOLON               Reduce 265
RBRACKET                Reduce 265
RBRACE                  Reduce 265
RPAREN                  Reduce 265
LESS                    Reduce 265
GREATER                 Reduce 265
OR                      Reduce 265
AND                     Reduce 265
XOR                     Reduce 265
AND_AND                 Reduce 265
OR_OR                   Reduce 265
NOT_EQUAL               Reduce 265
GREATER_EQUAL           Reduce 265
LESS_EQUAL              Reduce 265
EQUAL_EQUAL             Reduce 265
instanceof              Reduce 265

Default reduction to rule  265


STATE 111 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 175 177 178 179 182 184 
  186 235 239 240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 317 
  318 )

AndExpression ::= AndExpression  .AND EqualityExpression 
ExclusiveOrExpression ::= AndExpression . (276)

AND          Shift  172

COMMA        Reduce 276
COLON        Reduce 276
QUESTION     Reduce 276
SEMICOLON    Reduce 276
RBRACKET     Reduce 276
RBRACE       Reduce 276
RPAREN       Reduce 276
OR           Reduce 276
XOR          Reduce 276
AND_AND      Reduce 276
OR_OR        Reduce 276

Default reduction to rule  276


STATE 112 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 175 176 177 178 179 182 
  184 186 235 239 240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 
  317 318 )

EqualityExpression ::= EqualityExpression  .EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= EqualityExpression  .NOT_EQUAL RelationalExpression 
AndExpression ::= EqualityExpression . (274)

NOT_EQUAL      Shift  173
EQUAL_EQUAL    Shift  174

COMMA          Reduce 274
COLON          Reduce 274
QUESTION       Reduce 274
SEMICOLON      Reduce 274
RBRACKET       Reduce 274
RBRACE         Reduce 274
RPAREN         Reduce 274
OR             Reduce 274
AND            Reduce 274
XOR            Reduce 274
AND_AND        Reduce 274
OR_OR          Reduce 274

Default reduction to rule  274


STATE 113 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 177 178 182 184 186 235 
  239 240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 317 318 )

InclusiveOrExpression ::= InclusiveOrExpression  .OR ExclusiveOrExpression 
ConditionalAndExpression ::= InclusiveOrExpression . (280)

OR           Shift  175

COMMA        Reduce 280
COLON        Reduce 280
QUESTION     Reduce 280
SEMICOLON    Reduce 280
RBRACKET     Reduce 280
RBRACE       Reduce 280
RPAREN       Reduce 280
AND_AND      Reduce 280
OR_OR        Reduce 280

Default reduction to rule  280


STATE 114 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 177 178 179 182 184 186 
  235 239 240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 317 318 )

ExclusiveOrExpression ::= ExclusiveOrExpression  .XOR AndExpression 
InclusiveOrExpression ::= ExclusiveOrExpression . (278)

XOR          Shift  176

COMMA        Reduce 278
COLON        Reduce 278
QUESTION     Reduce 278
SEMICOLON    Reduce 278
RBRACKET     Reduce 278
RBRACE       Reduce 278
RPAREN       Reduce 278
OR           Reduce 278
AND_AND      Reduce 278
OR_OR        Reduce 278

Default reduction to rule  278


STATE 115 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 177 182 184 186 235 239 
  240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 317 318 )

ConditionalOrExpression ::= ConditionalOrExpression  .OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= ConditionalOrExpression . (284)
ConditionalExpression ::= ConditionalOrExpression  .QUESTION Expression COLON 
                          ConditionalExpression 

QUESTION     Shift  177
OR_OR        Shift  178

COMMA        Reduce 284
COLON        Reduce 284
SEMICOLON    Reduce 284
RBRACKET     Reduce 284
RBRACE       Reduce 284
RPAREN       Reduce 284

Default reduction to rule  284


STATE 116 ----------------------------------------------------------------------
( 58 59 70 96 103 122 130 133 134 135 141 143 144 152 177 182 184 186 235 239 
  240 244 246 256 260 266 275 277 278 285 291 292 295 315 316 317 318 )

ConditionalAndExpression ::= ConditionalAndExpression  .AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= ConditionalAndExpression . (282)

AND_AND      Shift  179

COMMA        Reduce 282
COLON        Reduce 282
QUESTION     Reduce 282
SEMICOLON    Reduce 282
RBRACKET     Reduce 282
RBRACE       Reduce 282
RPAREN       Reduce 282
OR_OR        Reduce 282

Default reduction to rule  282


STATE 117 ----------------------------------------------------------------------
( 59 )

ReturnStatement ::= return Expressionopt  .SEMICOLON 

SEMICOLON    Sh/Rd  190



STATE 118 ----------------------------------------------------------------------
( 60 )

ContinueStatement ::= continue IDENTIFIERopt  .SEMICOLON 

SEMICOLON    Sh/Rd  189



STATE 119 ----------------------------------------------------------------------
( 61 )

BreakStatement ::= break IDENTIFIERopt  .SEMICOLON 

SEMICOLON    Sh/Rd  188



STATE 120 ----------------------------------------------------------------------
( 62 )

DoStatement ::= do Statement  .while LPAREN Expression RPAREN SEMICOLON 

while    Shift  180



STATE 121 ----------------------------------------------------------------------
( 62 140 242 243 289 293 319 320 321 331 333 )

SynchronizedStatement ::= synchronized  .LPAREN Expression RPAREN Block 

LPAREN    Shift  144



STATE 122 ----------------------------------------------------------------------
( 63 )

SwitchStatement ::= switch LPAREN  .Expression RPAREN SwitchBlock 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   181
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 123 ----------------------------------------------------------------------
( 67 68 100 101 105 106 159 160 161 162 163 165 166 167 168 169 170 171 172 
  173 174 175 176 178 179 213 258 259 260 )

ClassOrInterfaceType ::= Name . (26)
ArrayType ::= Name  .Dims 
QualifiedName ::= Name  .DOT IDENTIFIER 
PrimaryNoNewArray ::= Name  .DOT this 
ClassInstanceCreationExpression ::= Name  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name  .DOT super DOT IDENTIFIER 
MethodInvocation ::= Name  .LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= Name  .DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= Name  .LBRACKET Expression RBRACKET 
PostfixExpression ::= Name . (235)

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LPAREN                  Shift  141
DOT                     La/Sh  336
LBRACKET                Shift  143

Dims                    Goto   52
Dim                     Gt/Rd  222

COMMA                   Reduce 235
COLON                   Reduce 235
QUESTION                Reduce 235
SEMICOLON               Reduce 235
RBRACKET                Reduce 235
RBRACE                  Reduce 235
RPAREN                  Reduce 235
LESS                    Reduce 235
GREATER                 Reduce 235
DIVIDE                  Reduce 235
OR                      Reduce 235
MULTIPLY                Reduce 235
AND                     Reduce 235
XOR                     Reduce 235
REMAINDER               Reduce 235
MINUS                   Reduce 235
PLUS                    Reduce 235
AND_AND                 Reduce 235
OR_OR                   Reduce 235
UNSIGNED_RIGHT_SHIFT    Reduce 235
RIGHT_SHIFT             Reduce 235
LEFT_SHIFT              Reduce 235
NOT_EQUAL               Reduce 235
GREATER_EQUAL           Reduce 235
LESS_EQUAL              Reduce 235
EQUAL_EQUAL             Reduce 235
MINUS_MINUS             Reduce 235
PLUS_PLUS               Reduce 235
instanceof              Reduce 235

Default reduction to rule  235


STATE 124 ----------------------------------------------------------------------
( 69 )

PrimaryNoNewArray ::= void DOT  .class 

class    Sh/Rd  210



STATE 125 ----------------------------------------------------------------------
( 70 )

PrimaryNoNewArray ::= LPAREN Expression  .RPAREN 

RPAREN    Sh/Rd  206



STATE 126 ----------------------------------------------------------------------
( 75 )

ArrayCreationExpression ::= new ArrayType  .ArrayInitializer 

ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 

LBRACE              Shift  152

ArrayInitializer    Gt/Rd  218



STATE 127 ----------------------------------------------------------------------
( 75 )

ClassInstanceCreationExpression ::= new ClassType  .LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 

LPAREN    Shift  182



STATE 128 ----------------------------------------------------------------------
( 75 )

ClassType ::= ClassOrInterfaceType . (29)
ArrayCreationExpression ::= new ClassOrInterfaceType  .DimExprs Dimsopt 

DimExprs ::= .DimExpr 
DimExprs ::= .DimExprs DimExpr 
DimExpr ::= .LBRACKET Expression RBRACKET 

LBRACKET    Shift  184

DimExprs    Goto   183
DimExpr     Gt/Rd  219

LPAREN      Reduce 29

Default reduction to rule  29


STATE 129 ----------------------------------------------------------------------
( 75 )

ArrayType ::= PrimitiveType  .Dims 
ArrayCreationExpression ::= new PrimitiveType  .DimExprs Dimsopt 

DimExprs ::= .DimExpr 
DimExprs ::= .DimExprs DimExpr 
DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LBRACKET    Shift  186

Dims        Goto   54
Dim         Gt/Rd  222
DimExprs    Goto   185
DimExpr     Gt/Rd  219



STATE 130 ----------------------------------------------------------------------
( 76 )

ArrayAccess ::= PrimaryNoNewArray LBRACKET  .Expression RBRACKET 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   187
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 131 ----------------------------------------------------------------------
( 77 252 )

FieldAccess ::= super DOT  .IDENTIFIER 
MethodInvocation ::= super DOT  .IDENTIFIER LPAREN ArgumentListopt RPAREN 

IDENTIFIER    Shift  188



STATE 132 ----------------------------------------------------------------------
( 78 )

ClassInstanceCreationExpression ::= Primary DOT  .new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .IDENTIFIER 
MethodInvocation ::= Primary DOT  .IDENTIFIER LPAREN ArgumentListopt RPAREN 

IDENTIFIER    Shift  189
new           Shift  190



STATE 133 ----------------------------------------------------------------------
( 79 )

Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

AssignmentExpression               Gt/Rd  288
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115



STATE 134 ----------------------------------------------------------------------
( 81 )

IfThenStatement ::= if LPAREN  .Expression RPAREN Statement 
IfThenElseStatement ::= if LPAREN  .Expression RPAREN StatementNoShortIf else 
                        Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   191
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 135 ----------------------------------------------------------------------
( 82 )

WhileStatement ::= while LPAREN  .Expression RPAREN Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   192
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 136 ----------------------------------------------------------------------
( 83 )

ForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (338)
ForInitopt ::= .ForInit 

IDENTIFIER                         Sh/Rd  33
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
super                              Shift  77
new                                Shift  75
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  70
PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
volatile                           Sh/Rd  60
transient                          Sh/Rd  59
synchronized                       Sh/Rd  58
strictfp                           Sh/Rd  57
native                             Sh/Rd  56
final                              Sh/Rd  55
abstract                           Sh/Rd  54
static                             Sh/Rd  53
private                            Sh/Rd  52
protected                          Sh/Rd  51
public                             Sh/Rd  50

ForInitopt                         Goto   193
ForInit                            Gt/Rd  339
StatementExpression                Gt/Rd  186
LeftHandSide                       Goto   79
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Literal                            Gt/Rd  201
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Primary                            Goto   78
PostfixExpression                  Goto   66
ClassInstanceCreationExpression    Goto   72
MethodInvocation                   Goto   74
PostDecrementExpression            Goto   64
PostIncrementExpression            Goto   65
PreDecrementExpression             Gt/Rd  160
PreIncrementExpression             Gt/Rd  159
Assignment                         Gt/Rd  158
Type                               Goto   84
Modifiers                          Goto   194
Modifier                           Gt/Rd  48
LocalVariableDeclaration           Gt/Rd  184
StatementExpressionList            Goto   195

SEMICOLON                          Reduce 338

Default reduction to rule  338


STATE 137 ----------------------------------------------------------------------
( 84 102 )

PrimaryNoNewArray ::= Type DOT  .class 

class    Sh/Rd  209



STATE 138 ----------------------------------------------------------------------
( 84 )

VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 
LocalVariableDeclaration ::= Type VariableDeclarators . (131)

COMMA        Shift  95

SEMICOLON    Reduce 131

Default reduction to rule  131


STATE 139 ----------------------------------------------------------------------
( 84 95 145 207 )

VariableDeclaratorId ::= IDENTIFIER  .Dimsopt 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LBRACKET     Shift  53

Dimsopt      Gt/Rd  83
Dims         Goto   97
Dim          Gt/Rd  222

EQUAL        Reduce 326
COMMA        Reduce 326
SEMICOLON    Reduce 326
RPAREN       Reduce 326

Default reduction to rule  326


STATE 140 ----------------------------------------------------------------------
( 85 )

LabeledStatement ::= IDENTIFIER COLON  .Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
IDENTIFIER                              Shift  85
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57

Statement                               Gt/Rd  155
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143



STATE 141 ----------------------------------------------------------------------
( 86 123 158 254 )

MethodInvocation ::= Name LPAREN  .ArgumentListopt RPAREN 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   196
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 142 ----------------------------------------------------------------------
( 335 336 337 )

QualifiedName ::= Name DOT  .IDENTIFIER 
PrimaryNoNewArray ::= Name DOT  .this 
ClassInstanceCreationExpression ::= Name DOT  .new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name DOT  .super DOT IDENTIFIER 
MethodInvocation ::= Name DOT  .super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 

super         Shift  198
new           Shift  199
this          Sh/Rd  208
IDENTIFIER    Sh/Rd  34



STATE 143 ----------------------------------------------------------------------
( 86 123 158 254 )

Dim ::= LBRACKET  .RBRACKET 
ArrayAccess ::= Name LBRACKET  .Expression RBRACKET 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

RBRACKET                           Sh/Rd  224
PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   200
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 144 ----------------------------------------------------------------------
( 87 121 )

SynchronizedStatement ::= synchronized LPAREN  .Expression RPAREN Block 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   201
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 145 ----------------------------------------------------------------------
( 88 194 )

LocalVariableDeclaration ::= Modifiers Type  .VariableDeclarators 

VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .IDENTIFIER Dimsopt 

IDENTIFIER              Shift  139

VariableDeclarators     Goto   202
VariableDeclarator      Gt/Rd  79
VariableDeclaratorId    Goto   50



STATE 146 ----------------------------------------------------------------------
( 91 )

ConstructorDeclaration ::= Modifiersopt ConstructorDeclarator Throwsopt  .
                           ConstructorBody 

ConstructorBody ::= .Block 
ConstructorBody ::= .LBRACE ExplicitConstructorInvocation BlockStatementsopt 
                    RBRACE 
Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE             Shift  203

ConstructorBody    Gt/Rd  99
Block              Gt/Rd  101



STATE 147 ----------------------------------------------------------------------
( 92 )

ConstructorDeclarator ::= IDENTIFIER LPAREN  .FormalParameterListopt RPAREN 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
FormalParameterList ::= .FormalParameter 
FormalParameterList ::= .FormalParameterList COMMA FormalParameter 
FormalParameter ::= .Modifiersopt Type VariableDeclaratorId 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
FormalParameterListopt ::= . (332)
FormalParameterListopt ::= .FormalParameterList 

volatile                  Sh/Rd  60
transient                 Sh/Rd  59
synchronized              Sh/Rd  58
strictfp                  Sh/Rd  57
native                    Sh/Rd  56
final                     Sh/Rd  55
abstract                  Sh/Rd  54
static                    Sh/Rd  53
private                   Sh/Rd  52
protected                 Sh/Rd  51
public                    Sh/Rd  50

FormalParameterListopt    Goto   204
Modifiersopt              Goto   150
Modifier                  Gt/Rd  48
Modifiers                 Goto   9
FormalParameterList       Goto   151
FormalParameter           Gt/Rd  90

short                     Reduce 320
long                      Reduce 320
int                       Reduce 320
float                     Reduce 320
double                    Reduce 320
char                      Reduce 320
byte                      Reduce 320
boolean                   Reduce 320
IDENTIFIER                Reduce 320
RPAREN                    Reduce 332

Default reduction to rule  320


STATE 148 ----------------------------------------------------------------------
( 93 )

Throws ::= throws ClassTypeList . (93)
ClassTypeList ::= ClassTypeList  .COMMA ClassType 

COMMA        Shift  205

SEMICOLON    Reduce 93
LBRACE       Reduce 93

Default reduction to rule  93


STATE 149 ----------------------------------------------------------------------
( 94 )

MethodDeclarator ::= IDENTIFIER LPAREN FormalParameterListopt  .RPAREN Dimsopt 

RPAREN    Shift  206



STATE 150 ----------------------------------------------------------------------
( 94 147 208 212 )

FormalParameter ::= Modifiersopt  .Type VariableDeclaratorId 

Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33
boolean                 Sh/Rd  14
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
double                  Sh/Rd  23
float                   Sh/Rd  22

Type                    Goto   207
ReferenceType           Gt/Rd  12
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   38
PrimitiveType           Goto   39
ArrayType               Gt/Rd  25
ClassOrInterfaceType    Gt/Rd  24
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
NumericType             Gt/Rd  13



STATE 151 ----------------------------------------------------------------------
( 94 147 )

FormalParameterList ::= FormalParameterList  .COMMA FormalParameter 
FormalParameterListopt ::= FormalParameterList . (333)

COMMA     Shift  208

RPAREN    Reduce 333

Default reduction to rule  333


STATE 152 ----------------------------------------------------------------------
( 96 126 152 256 )

ArrayInitializer ::= LBRACE  .VariableInitializersopt Commaopt RBRACE 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
VariableInitializers ::= .VariableInitializer 
VariableInitializers ::= .VariableInitializers COMMA VariableInitializer 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
VariableInitializersopt ::= . (346)
VariableInitializersopt ::= .VariableInitializers 

LBRACE                             Shift  152
MINUS                              Shift  105
PLUS                               Shift  106
void                               Shift  69
this                               Sh/Rd  207
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
IDENTIFIER                         Sh/Rd  33
super                              Shift  77
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
LPAREN                             Shift  103
NOT                                Shift  100
TWIDDLE                            Shift  101
MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68

VariableInitializersopt            Goto   209
ArrayInitializer                   Gt/Rd  85
Expression                         Gt/Rd  84
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304
VariableInitializers               Goto   210
VariableInitializer                Gt/Rd  121

COMMA                              Reduce 346
RBRACE                             Reduce 346

Default reduction to rule  346


STATE 153 ----------------------------------------------------------------------
( 98 )

TryStatement ::= try Block Catchesopt  .Finally 

Finally ::= .finally Block 

finally    Shift  211

Finally    Gt/Rd  194



STATE 154 ----------------------------------------------------------------------
( 98 155 )

CatchClause ::= catch  .LPAREN FormalParameter RPAREN Block 

LPAREN    Shift  212



STATE 155 ----------------------------------------------------------------------
( 98 )

TryStatement ::= try Block Catches . (193)
Catches ::= Catches  .CatchClause 
Catchesopt ::= Catches . (345)

CatchClause ::= .catch LPAREN FormalParameter RPAREN Block 

catch                   Shift  154

CatchClause             Gt/Rd  196

SEMICOLON               Reduce 193
RBRACE                  Reduce 193
LBRACE                  Reduce 193
LPAREN                  Reduce 193
MINUS_MINUS             Reduce 193
PLUS_PLUS               Reduce 193
StringLiteral           Reduce 193
CharacterLiteral        Reduce 193
DoubleLiteral           Reduce 193
FloatingPointLiteral    Reduce 193
LongLiteral             Reduce 193
IntegerLiteral          Reduce 193
while                   Reduce 193
volatile                Reduce 193
void                    Reduce 193
try                     Reduce 193
true                    Reduce 193
transient               Reduce 193
throw                   Reduce 193
this                    Reduce 193
synchronized            Reduce 193
switch                  Reduce 193
super                   Reduce 193
strictfp                Reduce 193
static                  Reduce 193
short                   Reduce 193
return                  Reduce 193
public                  Reduce 193
protected               Reduce 193
private                 Reduce 193
null                    Reduce 193
new                     Reduce 193
native                  Reduce 193
long                    Reduce 193
int                     Reduce 193
if                      Reduce 193
for                     Reduce 193
float                   Reduce 193
final                   Reduce 193
false                   Reduce 193
else                    Reduce 193
double                  Reduce 193
do                      Reduce 193
default                 Reduce 193
continue                Reduce 193
class                   Reduce 193
char                    Reduce 193
case                    Reduce 193
byte                    Reduce 193
break                   Reduce 193
boolean                 Reduce 193
abstract                Reduce 193
IDENTIFIER              Reduce 193
finally                 Reduce 345

Default reduction to rule  193


STATE 156 ----------------------------------------------------------------------
( 103 )

PrimaryNoNewArray ::= LPAREN Expression  .RPAREN 
CastExpression ::= LPAREN Expression  .RPAREN UnaryExpressionNotPlusMinus 

RPAREN    Shift  213



STATE 157 ----------------------------------------------------------------------
( 103 )

Type ::= PrimitiveType . (11)
ArrayType ::= PrimitiveType  .Dims 
CastExpression ::= LPAREN PrimitiveType  .Dimsopt RPAREN UnaryExpression 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LBRACKET    Shift  53

Dimsopt     Goto   214
Dim         Gt/Rd  222
Dims        Goto   215

RPAREN      Reduce 326
DOT         Reduce 11

Default reduction to rule  11


STATE 158 ----------------------------------------------------------------------
( 103 )

ClassOrInterfaceType ::= Name . (26)
ArrayType ::= Name  .Dims 
QualifiedName ::= Name  .DOT IDENTIFIER 
PrimaryNoNewArray ::= Name  .DOT this 
ClassInstanceCreationExpression ::= Name  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name  .DOT super DOT IDENTIFIER 
MethodInvocation ::= Name  .LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= Name  .DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= Name  .LBRACKET Expression RBRACKET 
PostfixExpression ::= Name . (235)
CastExpression ::= LPAREN Name  .Dims RPAREN UnaryExpressionNotPlusMinus 
LeftHandSide ::= Name . (289)

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LPAREN                        Shift  141
DOT                           La/Sh  337
LBRACKET                      Shift  143

Dims                          Goto   216
Dim                           Gt/Rd  222

QUESTION                      Reduce 235
RPAREN                        Reduce 235
LESS                          Reduce 235
GREATER                       Reduce 235
DIVIDE                        Reduce 235
OR                            Reduce 235
MULTIPLY                      Reduce 235
AND                           Reduce 235
XOR                           Reduce 235
REMAINDER                     Reduce 235
MINUS                         Reduce 235
PLUS                          Reduce 235
AND_AND                       Reduce 235
OR_OR                         Reduce 235
UNSIGNED_RIGHT_SHIFT          Reduce 235
RIGHT_SHIFT                   Reduce 235
LEFT_SHIFT                    Reduce 235
NOT_EQUAL                     Reduce 235
GREATER_EQUAL                 Reduce 235
LESS_EQUAL                    Reduce 235
EQUAL_EQUAL                   Reduce 235
MINUS_MINUS                   Reduce 235
PLUS_PLUS                     Reduce 235
instanceof                    Reduce 235
EQUAL                         Reduce 289
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 289
RIGHT_SHIFT_EQUAL             Reduce 289
LEFT_SHIFT_EQUAL              Reduce 289
REMAINDER_EQUAL               Reduce 289
XOR_EQUAL                     Reduce 289
OR_EQUAL                      Reduce 289
AND_EQUAL                     Reduce 289
DIVIDE_EQUAL                  Reduce 289
MULTIPLY_EQUAL                Reduce 289
MINUS_EQUAL                   Reduce 289
PLUS_EQUAL                    Reduce 289

Default reduction to rule  235


STATE 159 ----------------------------------------------------------------------
( 107 224 225 226 )

AdditiveExpression ::= AdditiveExpression MINUS  .MultiplicativeExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

MultiplicativeExpression           Goto   217
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240



STATE 160 ----------------------------------------------------------------------
( 107 224 225 226 )

AdditiveExpression ::= AdditiveExpression PLUS  .MultiplicativeExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

MultiplicativeExpression           Goto   218
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240



STATE 161 ----------------------------------------------------------------------
( 108 217 218 )

MultiplicativeExpression ::= MultiplicativeExpression REMAINDER  .
                             UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  257
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 162 ----------------------------------------------------------------------
( 108 217 218 )

MultiplicativeExpression ::= MultiplicativeExpression DIVIDE  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  256
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 163 ----------------------------------------------------------------------
( 108 217 218 )

MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY  .
                             UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  255
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 164 ----------------------------------------------------------------------
( 109 228 229 )

RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 

PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33
boolean                 Sh/Rd  14
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
double                  Sh/Rd  23
float                   Sh/Rd  22

ReferenceType           Gt/Rd  270
ArrayType               Gt/Rd  25
ClassOrInterfaceType    Gt/Rd  24
NumericType             Gt/Rd  13
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
PrimitiveType           Goto   219
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   38



STATE 165 ----------------------------------------------------------------------
( 109 228 229 )

RelationalExpression ::= RelationalExpression GREATER_EQUAL  .ShiftExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ShiftExpression                    Goto   220
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108



STATE 166 ----------------------------------------------------------------------
( 109 228 229 )

RelationalExpression ::= RelationalExpression LESS_EQUAL  .ShiftExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ShiftExpression                    Goto   221
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108



STATE 167 ----------------------------------------------------------------------
( 109 228 229 )

RelationalExpression ::= RelationalExpression GREATER  .ShiftExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ShiftExpression                    Goto   222
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108



STATE 168 ----------------------------------------------------------------------
( 109 228 229 )

RelationalExpression ::= RelationalExpression LESS  .ShiftExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ShiftExpression                    Goto   223
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108



STATE 169 ----------------------------------------------------------------------
( 110 220 221 222 223 )

ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT  .AdditiveExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

AdditiveExpression                 Goto   224
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254



STATE 170 ----------------------------------------------------------------------
( 110 220 221 222 223 )

ShiftExpression ::= ShiftExpression RIGHT_SHIFT  .AdditiveExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

AdditiveExpression                 Goto   225
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254



STATE 171 ----------------------------------------------------------------------
( 110 220 221 222 223 )

ShiftExpression ::= ShiftExpression LEFT_SHIFT  .AdditiveExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

AdditiveExpression                 Goto   226
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254



STATE 172 ----------------------------------------------------------------------
( 111 231 )

AndExpression ::= AndExpression AND  .EqualityExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

EqualityExpression                 Goto   227
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110



STATE 173 ----------------------------------------------------------------------
( 112 227 )

EqualityExpression ::= EqualityExpression NOT_EQUAL  .RelationalExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

RelationalExpression               Goto   228
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107



STATE 174 ----------------------------------------------------------------------
( 112 227 )

EqualityExpression ::= EqualityExpression EQUAL_EQUAL  .RelationalExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

RelationalExpression               Goto   229
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107



STATE 175 ----------------------------------------------------------------------
( 113 234 )

InclusiveOrExpression ::= InclusiveOrExpression OR  .ExclusiveOrExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ExclusiveOrExpression              Goto   230
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112



STATE 176 ----------------------------------------------------------------------
( 114 230 )

ExclusiveOrExpression ::= ExclusiveOrExpression XOR  .AndExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

AndExpression                      Goto   231
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109



STATE 177 ----------------------------------------------------------------------
( 115 )

ConditionalExpression ::= ConditionalOrExpression QUESTION  .Expression COLON 
                          ConditionalExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   232
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 178 ----------------------------------------------------------------------
( 115 )

ConditionalOrExpression ::= ConditionalOrExpression OR_OR  .
                            ConditionalAndExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ConditionalAndExpression           Goto   233
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114



STATE 179 ----------------------------------------------------------------------
( 116 233 )

ConditionalAndExpression ::= ConditionalAndExpression AND_AND  .
                             InclusiveOrExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

InclusiveOrExpression              Goto   234
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111



STATE 180 ----------------------------------------------------------------------
( 120 )

DoStatement ::= do Statement while  .LPAREN Expression RPAREN SEMICOLON 

LPAREN    Shift  235



STATE 181 ----------------------------------------------------------------------
( 122 )

SwitchStatement ::= switch LPAREN Expression  .RPAREN SwitchBlock 

RPAREN    Shift  236



STATE 182 ----------------------------------------------------------------------
( 127 )

ClassInstanceCreationExpression ::= new ClassType LPAREN  .ArgumentListopt 
                                    RPAREN ClassBodyopt 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   237
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 183 ----------------------------------------------------------------------
( 128 )

ArrayCreationExpression ::= new ClassOrInterfaceType DimExprs  .Dimsopt 
DimExprs ::= DimExprs  .DimExpr 

DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LBRACKET                Shift  186

DimExpr                 Gt/Rd  220
Dimsopt                 Gt/Rd  217
Dims                    Goto   97
Dim                     Gt/Rd  222

DOT                     Reduce 326
COMMA                   Reduce 326
COLON                   Reduce 326
QUESTION                Reduce 326
SEMICOLON               Reduce 326
RBRACKET                Reduce 326
RBRACE                  Reduce 326
RPAREN                  Reduce 326
LESS                    Reduce 326
GREATER                 Reduce 326
DIVIDE                  Reduce 326
OR                      Reduce 326
MULTIPLY                Reduce 326
AND                     Reduce 326
XOR                     Reduce 326
REMAINDER               Reduce 326
MINUS                   Reduce 326
PLUS                    Reduce 326
AND_AND                 Reduce 326
OR_OR                   Reduce 326
UNSIGNED_RIGHT_SHIFT    Reduce 326
RIGHT_SHIFT             Reduce 326
LEFT_SHIFT              Reduce 326
NOT_EQUAL               Reduce 326
GREATER_EQUAL           Reduce 326
LESS_EQUAL              Reduce 326
EQUAL_EQUAL             Reduce 326
MINUS_MINUS             Reduce 326
PLUS_PLUS               Reduce 326
instanceof              Reduce 326

Default reduction to rule  326


STATE 184 ----------------------------------------------------------------------
( 128 )

DimExpr ::= LBRACKET  .Expression RBRACKET 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   238
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 185 ----------------------------------------------------------------------
( 129 )

ArrayCreationExpression ::= new PrimitiveType DimExprs  .Dimsopt 
DimExprs ::= DimExprs  .DimExpr 

DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LBRACKET                Shift  186

DimExpr                 Gt/Rd  220
Dimsopt                 Gt/Rd  216
Dims                    Goto   97
Dim                     Gt/Rd  222

DOT                     Reduce 326
COMMA                   Reduce 326
COLON                   Reduce 326
QUESTION                Reduce 326
SEMICOLON               Reduce 326
RBRACKET                Reduce 326
RBRACE                  Reduce 326
RPAREN                  Reduce 326
LESS                    Reduce 326
GREATER                 Reduce 326
DIVIDE                  Reduce 326
OR                      Reduce 326
MULTIPLY                Reduce 326
AND                     Reduce 326
XOR                     Reduce 326
REMAINDER               Reduce 326
MINUS                   Reduce 326
PLUS                    Reduce 326
AND_AND                 Reduce 326
OR_OR                   Reduce 326
UNSIGNED_RIGHT_SHIFT    Reduce 326
RIGHT_SHIFT             Reduce 326
LEFT_SHIFT              Reduce 326
NOT_EQUAL               Reduce 326
GREATER_EQUAL           Reduce 326
LESS_EQUAL              Reduce 326
EQUAL_EQUAL             Reduce 326
MINUS_MINUS             Reduce 326
PLUS_PLUS               Reduce 326
instanceof              Reduce 326

Default reduction to rule  326


STATE 186 ----------------------------------------------------------------------
( 129 183 185 )

DimExpr ::= LBRACKET  .Expression RBRACKET 
Dim ::= LBRACKET  .RBRACKET 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

RBRACKET                           Sh/Rd  224
PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   238
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 187 ----------------------------------------------------------------------
( 130 )

ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  233



STATE 188 ----------------------------------------------------------------------
( 131 )

FieldAccess ::= super DOT IDENTIFIER . (226)
MethodInvocation ::= super DOT IDENTIFIER  .LPAREN ArgumentListopt RPAREN 

LPAREN                        Shift  239

EQUAL                         Reduce 226
DOT                           Reduce 226
COMMA                         Reduce 226
COLON                         Reduce 226
QUESTION                      Reduce 226
SEMICOLON                     Reduce 226
RBRACKET                      Reduce 226
LBRACKET                      Reduce 226
RBRACE                        Reduce 226
RPAREN                        Reduce 226
LESS                          Reduce 226
GREATER                       Reduce 226
DIVIDE                        Reduce 226
OR                            Reduce 226
MULTIPLY                      Reduce 226
AND                           Reduce 226
XOR                           Reduce 226
REMAINDER                     Reduce 226
MINUS                         Reduce 226
PLUS                          Reduce 226
AND_AND                       Reduce 226
OR_OR                         Reduce 226
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 226
RIGHT_SHIFT_EQUAL             Reduce 226
LEFT_SHIFT_EQUAL              Reduce 226
REMAINDER_EQUAL               Reduce 226
XOR_EQUAL                     Reduce 226
OR_EQUAL                      Reduce 226
AND_EQUAL                     Reduce 226
DIVIDE_EQUAL                  Reduce 226
MULTIPLY_EQUAL                Reduce 226
MINUS_EQUAL                   Reduce 226
PLUS_EQUAL                    Reduce 226
UNSIGNED_RIGHT_SHIFT          Reduce 226
RIGHT_SHIFT                   Reduce 226
LEFT_SHIFT                    Reduce 226
NOT_EQUAL                     Reduce 226
GREATER_EQUAL                 Reduce 226
LESS_EQUAL                    Reduce 226
EQUAL_EQUAL                   Reduce 226
MINUS_MINUS                   Reduce 226
PLUS_PLUS                     Reduce 226
instanceof                    Reduce 226

Default reduction to rule  226


STATE 189 ----------------------------------------------------------------------
( 132 279 )

FieldAccess ::= Primary DOT IDENTIFIER . (225)
MethodInvocation ::= Primary DOT IDENTIFIER  .LPAREN ArgumentListopt RPAREN 

LPAREN                        Shift  240

EQUAL                         Reduce 225
DOT                           Reduce 225
COMMA                         Reduce 225
COLON                         Reduce 225
QUESTION                      Reduce 225
SEMICOLON                     Reduce 225
RBRACKET                      Reduce 225
LBRACKET                      Reduce 225
RBRACE                        Reduce 225
RPAREN                        Reduce 225
LESS                          Reduce 225
GREATER                       Reduce 225
DIVIDE                        Reduce 225
OR                            Reduce 225
MULTIPLY                      Reduce 225
AND                           Reduce 225
XOR                           Reduce 225
REMAINDER                     Reduce 225
MINUS                         Reduce 225
PLUS                          Reduce 225
AND_AND                       Reduce 225
OR_OR                         Reduce 225
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 225
RIGHT_SHIFT_EQUAL             Reduce 225
LEFT_SHIFT_EQUAL              Reduce 225
REMAINDER_EQUAL               Reduce 225
XOR_EQUAL                     Reduce 225
OR_EQUAL                      Reduce 225
AND_EQUAL                     Reduce 225
DIVIDE_EQUAL                  Reduce 225
MULTIPLY_EQUAL                Reduce 225
MINUS_EQUAL                   Reduce 225
PLUS_EQUAL                    Reduce 225
UNSIGNED_RIGHT_SHIFT          Reduce 225
RIGHT_SHIFT                   Reduce 225
LEFT_SHIFT                    Reduce 225
NOT_EQUAL                     Reduce 225
GREATER_EQUAL                 Reduce 225
LESS_EQUAL                    Reduce 225
EQUAL_EQUAL                   Reduce 225
MINUS_MINUS                   Reduce 225
PLUS_PLUS                     Reduce 225
instanceof                    Reduce 225

Default reduction to rule  225


STATE 190 ----------------------------------------------------------------------
( 132 279 )

ClassInstanceCreationExpression ::= Primary DOT new  .SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

SimpleName ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  33

SimpleName    Goto   241



STATE 191 ----------------------------------------------------------------------
( 134 )

IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 

RPAREN    Shift  242



STATE 192 ----------------------------------------------------------------------
( 135 )

WhileStatement ::= while LPAREN Expression  .RPAREN Statement 

RPAREN    Shift  243



STATE 193 ----------------------------------------------------------------------
( 136 )

ForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 

SEMICOLON    Shift  244



STATE 194 ----------------------------------------------------------------------
( 136 290 )

Modifiers ::= Modifiers  .Modifier 
LocalVariableDeclaration ::= Modifiers  .Type VariableDeclarators 

Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 

volatile                Sh/Rd  60
transient               Sh/Rd  59
synchronized            Sh/Rd  58
strictfp                Sh/Rd  57
native                  Sh/Rd  56
final                   Sh/Rd  55
abstract                Sh/Rd  54
static                  Sh/Rd  53
private                 Sh/Rd  52
protected               Sh/Rd  51
public                  Sh/Rd  50
IDENTIFIER              Sh/Rd  33
double                  Sh/Rd  23
float                   Sh/Rd  22
char                    Sh/Rd  21
long                    Sh/Rd  20
int                     Sh/Rd  19
short                   Sh/Rd  18
byte                    Sh/Rd  17
boolean                 Sh/Rd  14

Type                    Goto   145
Modifier                Gt/Rd  49
ReferenceType           Gt/Rd  12
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   38
PrimitiveType           Goto   39
ArrayType               Gt/Rd  25
ClassOrInterfaceType    Gt/Rd  24
FloatingPointType       Gt/Rd  16
IntegralType            Gt/Rd  15
NumericType             Gt/Rd  13



STATE 195 ----------------------------------------------------------------------
( 136 290 )

ForInit ::= StatementExpressionList . (183)
StatementExpressionList ::= StatementExpressionList  .COMMA StatementExpression 

COMMA        Shift  245

SEMICOLON    Reduce 183

Default reduction to rule  183


STATE 196 ----------------------------------------------------------------------
( 141 )

MethodInvocation ::= Name LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  228



STATE 197 ----------------------------------------------------------------------
( 141 182 239 240 266 275 277 278 295 315 316 317 )

ArgumentList ::= ArgumentList  .COMMA Expression 
ArgumentListopt ::= ArgumentList . (329)

COMMA     Shift  246

RPAREN    Reduce 329

Default reduction to rule  329


STATE 198 ----------------------------------------------------------------------
( 142 )

FieldAccess ::= Name DOT super  .DOT IDENTIFIER 
MethodInvocation ::= Name DOT super  .DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 

DOT    Shift  247



STATE 199 ----------------------------------------------------------------------
( 142 280 )

ClassInstanceCreationExpression ::= Name DOT new  .SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

SimpleName ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  33

SimpleName    Goto   248



STATE 200 ----------------------------------------------------------------------
( 143 )

ArrayAccess ::= Name LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  232



STATE 201 ----------------------------------------------------------------------
( 144 )

SynchronizedStatement ::= synchronized LPAREN Expression  .RPAREN Block 

RPAREN    Shift  249



STATE 202 ----------------------------------------------------------------------
( 145 )

VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 
LocalVariableDeclaration ::= Modifiers Type VariableDeclarators . (130)

COMMA        Shift  95

SEMICOLON    Reduce 130

Default reduction to rule  130


STATE 203 ----------------------------------------------------------------------
( 146 )

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocation BlockStatementsopt 
                    RBRACE 
Block ::= LBRACE  .BlockStatementsopt RBRACE 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
ExplicitConstructorInvocation ::= .this LPAREN ArgumentListopt RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .Primary DOT this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .super LPAREN ArgumentListopt RPAREN 
                                  SEMICOLON 
ExplicitConstructorInvocation ::= .Primary DOT super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .Name DOT super LPAREN ArgumentListopt RPAREN 
                                  SEMICOLON 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
BlockStatementsopt ::= . (324)
BlockStatementsopt ::= .BlockStatements 

void                                    Shift  69
this                                    Shift  251
LPAREN                                  Shift  70
boolean                                 Sh/Rd  14
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
double                                  Sh/Rd  23
float                                   Sh/Rd  22
super                                   Shift  252
false                                   Sh/Rd  10
true                                    Sh/Rd  9
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
new                                     Shift  75
try                                     Shift  57
throw                                   Shift  58
return                                  Shift  59
continue                                Shift  60
break                                   Shift  61
do                                      Shift  62
switch                                  Shift  63
MINUS_MINUS                             Shift  67
PLUS_PLUS                               Shift  68
SEMICOLON                               Sh/Rd  154
LBRACE                                  Shift  41
IDENTIFIER                              Shift  85
if                                      Shift  81
while                                   Shift  82
for                                     Shift  83
volatile                                Sh/Rd  60
transient                               Sh/Rd  59
synchronized                            Shift  87
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50

BlockStatementsopt                      Goto   55
ExplicitConstructorInvocation           Goto   250
Literal                                 Gt/Rd  201
NumericType                             Gt/Rd  13
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
BooleanLiteral                          Gt/Rd  5
ArrayCreationExpression                 Gt/Rd  200
PrimaryNoNewArray                       Goto   76
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126
Modifiersopt                            Goto   56
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
Primary                                 Goto   253
PostfixExpression                       Goto   66
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   254
LeftHandSide                            Goto   79
StatementExpression                     Goto   80
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
Type                                    Goto   84
Modifiers                               Goto   88
Modifier                                Gt/Rd  48
LocalVariableDeclaration                Goto   89
BlockStatements                         Goto   90
BlockStatement                          Gt/Rd  124

class                                   Reduce 320
RBRACE                                  Reduce 324

Default reduction to rule  324


STATE 204 ----------------------------------------------------------------------
( 147 )

ConstructorDeclarator ::= IDENTIFIER LPAREN FormalParameterListopt  .RPAREN 

RPAREN    Sh/Rd  100



STATE 205 ----------------------------------------------------------------------
( 148 )

ClassTypeList ::= ClassTypeList COMMA  .ClassType 

ClassOrInterfaceType ::= .Name 
ClassType ::= .ClassOrInterfaceType 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 

IDENTIFIER              Sh/Rd  33

ClassType               Gt/Rd  95
ClassOrInterfaceType    Gt/Rd  29
QualifiedName           Gt/Rd  32
SimpleName              Gt/Rd  31
Name                    Goto   26



STATE 206 ----------------------------------------------------------------------
( 149 )

MethodDeclarator ::= IDENTIFIER LPAREN FormalParameterListopt RPAREN  .Dimsopt 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 
Dimsopt ::= . (326)
Dimsopt ::= .Dims 

LBRACKET     Shift  53

Dimsopt      Gt/Rd  89
Dims         Goto   97
Dim          Gt/Rd  222

SEMICOLON    Reduce 326
LBRACE       Reduce 326
throws       Reduce 326

Default reduction to rule  326


STATE 207 ----------------------------------------------------------------------
( 150 )

FormalParameter ::= Modifiersopt Type  .VariableDeclaratorId 

VariableDeclaratorId ::= .IDENTIFIER Dimsopt 

IDENTIFIER              Shift  139

VariableDeclaratorId    Gt/Rd  92



STATE 208 ----------------------------------------------------------------------
( 151 )

FormalParameterList ::= FormalParameterList COMMA  .FormalParameter 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
FormalParameter ::= .Modifiersopt Type VariableDeclaratorId 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

volatile           Sh/Rd  60
transient          Sh/Rd  59
synchronized       Sh/Rd  58
strictfp           Sh/Rd  57
native             Sh/Rd  56
final              Sh/Rd  55
abstract           Sh/Rd  54
static             Sh/Rd  53
private            Sh/Rd  52
protected          Sh/Rd  51
public             Sh/Rd  50

FormalParameter    Gt/Rd  91
Modifiersopt       Goto   150
Modifier           Gt/Rd  48
Modifiers          Goto   9

short              Reduce 320
long               Reduce 320
int                Reduce 320
float              Reduce 320
double             Reduce 320
char               Reduce 320
byte               Reduce 320
boolean            Reduce 320
IDENTIFIER         Reduce 320

Default reduction to rule  320


STATE 209 ----------------------------------------------------------------------
( 152 )

ArrayInitializer ::= LBRACE VariableInitializersopt  .Commaopt RBRACE 

Commaopt ::= . (352)
Commaopt ::= .COMMA 

COMMA       Sh/Rd  353

Commaopt    Goto   255

RBRACE      Reduce 352

Default reduction to rule  352


STATE 210 ----------------------------------------------------------------------
( 152 )

VariableInitializers ::= VariableInitializers  .COMMA VariableInitializer 
VariableInitializersopt ::= VariableInitializers . (347)

COMMA     La/Sh  338

RBRACE    Reduce 347

Default reduction to rule  347


STATE 211 ----------------------------------------------------------------------
( 153 )

Finally ::= finally  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  41

Block     Gt/Rd  198



STATE 212 ----------------------------------------------------------------------
( 154 )

CatchClause ::= catch LPAREN  .FormalParameter RPAREN Block 

Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
FormalParameter ::= .Modifiersopt Type VariableDeclaratorId 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

volatile           Sh/Rd  60
transient          Sh/Rd  59
synchronized       Sh/Rd  58
strictfp           Sh/Rd  57
native             Sh/Rd  56
final              Sh/Rd  55
abstract           Sh/Rd  54
static             Sh/Rd  53
private            Sh/Rd  52
protected          Sh/Rd  51
public             Sh/Rd  50

FormalParameter    Goto   257
Modifiersopt       Goto   150
Modifier           Gt/Rd  48
Modifiers          Goto   9

short              Reduce 320
long               Reduce 320
int                Reduce 320
float              Reduce 320
double             Reduce 320
char               Reduce 320
byte               Reduce 320
boolean            Reduce 320
IDENTIFIER         Reduce 320

Default reduction to rule  320


STATE 213 ----------------------------------------------------------------------
( 156 )

PrimaryNoNewArray ::= LPAREN Expression RPAREN . (206)
CastExpression ::= LPAREN Expression RPAREN  .UnaryExpressionNotPlusMinus 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103

UnaryExpressionNotPlusMinus        Gt/Rd  252
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78

DOT                                Reduce 206
COMMA                              Reduce 206
COLON                              Reduce 206
QUESTION                           Reduce 206
SEMICOLON                          Reduce 206
RBRACKET                           Reduce 206
LBRACKET                           Reduce 206
RBRACE                             Reduce 206
RPAREN                             Reduce 206
LESS                               Reduce 206
GREATER                            Reduce 206
DIVIDE                             Reduce 206
OR                                 Reduce 206
MULTIPLY                           Reduce 206
AND                                Reduce 206
XOR                                Reduce 206
REMAINDER                          Reduce 206
MINUS                              Reduce 206
PLUS                               Reduce 206
AND_AND                            Reduce 206
OR_OR                              Reduce 206
UNSIGNED_RIGHT_SHIFT               Reduce 206
RIGHT_SHIFT                        Reduce 206
LEFT_SHIFT                         Reduce 206
NOT_EQUAL                          Reduce 206
GREATER_EQUAL                      Reduce 206
LESS_EQUAL                         Reduce 206
EQUAL_EQUAL                        Reduce 206
MINUS_MINUS                        Reduce 206
PLUS_PLUS                          Reduce 206
instanceof                         Reduce 206

Default reduction to rule  206


STATE 214 ----------------------------------------------------------------------
( 157 )

CastExpression ::= LPAREN PrimitiveType Dimsopt  .RPAREN UnaryExpression 

RPAREN    Shift  258



STATE 215 ----------------------------------------------------------------------
( 157 )

ArrayType ::= PrimitiveType Dims . (27)
Dims ::= Dims  .Dim 
Dimsopt ::= Dims . (327)

Dim ::= .LBRACKET RBRACKET 

LBRACKET    Shift  53

Dim         Gt/Rd  223

DOT         Reduce 27
RPAREN      Reduce 327

Default reduction to rule  327


STATE 216 ----------------------------------------------------------------------
( 158 )

ArrayType ::= Name Dims . (28)
Dims ::= Dims  .Dim 
CastExpression ::= LPAREN Name Dims  .RPAREN UnaryExpressionNotPlusMinus 

Dim ::= .LBRACKET RBRACKET 

RPAREN      Shift  259
LBRACKET    Shift  53

Dim         Gt/Rd  223

DOT         Reduce 28

Default reduction to rule  28


STATE 217 ----------------------------------------------------------------------
( 159 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= AdditiveExpression MINUS MultiplicativeExpression .
                        (260)

REMAINDER               Shift  161
DIVIDE                  Shift  162
MULTIPLY                Shift  163

COMMA                   Reduce 260
COLON                   Reduce 260
QUESTION                Reduce 260
SEMICOLON               Reduce 260
RBRACKET                Reduce 260
RBRACE                  Reduce 260
RPAREN                  Reduce 260
LESS                    Reduce 260
GREATER                 Reduce 260
OR                      Reduce 260
AND                     Reduce 260
XOR                     Reduce 260
MINUS                   Reduce 260
PLUS                    Reduce 260
AND_AND                 Reduce 260
OR_OR                   Reduce 260
UNSIGNED_RIGHT_SHIFT    Reduce 260
RIGHT_SHIFT             Reduce 260
LEFT_SHIFT              Reduce 260
NOT_EQUAL               Reduce 260
GREATER_EQUAL           Reduce 260
LESS_EQUAL              Reduce 260
EQUAL_EQUAL             Reduce 260
instanceof              Reduce 260

Default reduction to rule  260


STATE 218 ----------------------------------------------------------------------
( 160 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= AdditiveExpression PLUS MultiplicativeExpression . (259)

REMAINDER               Shift  161
DIVIDE                  Shift  162
MULTIPLY                Shift  163

COMMA                   Reduce 259
COLON                   Reduce 259
QUESTION                Reduce 259
SEMICOLON               Reduce 259
RBRACKET                Reduce 259
RBRACE                  Reduce 259
RPAREN                  Reduce 259
LESS                    Reduce 259
GREATER                 Reduce 259
OR                      Reduce 259
AND                     Reduce 259
XOR                     Reduce 259
MINUS                   Reduce 259
PLUS                    Reduce 259
AND_AND                 Reduce 259
OR_OR                   Reduce 259
UNSIGNED_RIGHT_SHIFT    Reduce 259
RIGHT_SHIFT             Reduce 259
LEFT_SHIFT              Reduce 259
NOT_EQUAL               Reduce 259
GREATER_EQUAL           Reduce 259
LESS_EQUAL              Reduce 259
EQUAL_EQUAL             Reduce 259
instanceof              Reduce 259

Default reduction to rule  259


STATE 219 ----------------------------------------------------------------------
( 164 )

ArrayType ::= PrimitiveType  .Dims 

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LBRACKET    Shift  53

Dims        Goto   54
Dim         Gt/Rd  222



STATE 220 ----------------------------------------------------------------------
( 165 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER_EQUAL ShiftExpression .
                          (269)

UNSIGNED_RIGHT_SHIFT    Shift  169
RIGHT_SHIFT             Shift  170
LEFT_SHIFT              Shift  171

COMMA                   Reduce 269
COLON                   Reduce 269
QUESTION                Reduce 269
SEMICOLON               Reduce 269
RBRACKET                Reduce 269
RBRACE                  Reduce 269
RPAREN                  Reduce 269
LESS                    Reduce 269
GREATER                 Reduce 269
OR                      Reduce 269
AND                     Reduce 269
XOR                     Reduce 269
AND_AND                 Reduce 269
OR_OR                   Reduce 269
NOT_EQUAL               Reduce 269
GREATER_EQUAL           Reduce 269
LESS_EQUAL              Reduce 269
EQUAL_EQUAL             Reduce 269
instanceof              Reduce 269

Default reduction to rule  269


STATE 221 ----------------------------------------------------------------------
( 166 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression .
                          (268)

UNSIGNED_RIGHT_SHIFT    Shift  169
RIGHT_SHIFT             Shift  170
LEFT_SHIFT              Shift  171

COMMA                   Reduce 268
COLON                   Reduce 268
QUESTION                Reduce 268
SEMICOLON               Reduce 268
RBRACKET                Reduce 268
RBRACE                  Reduce 268
RPAREN                  Reduce 268
LESS                    Reduce 268
GREATER                 Reduce 268
OR                      Reduce 268
AND                     Reduce 268
XOR                     Reduce 268
AND_AND                 Reduce 268
OR_OR                   Reduce 268
NOT_EQUAL               Reduce 268
GREATER_EQUAL           Reduce 268
LESS_EQUAL              Reduce 268
EQUAL_EQUAL             Reduce 268
instanceof              Reduce 268

Default reduction to rule  268


STATE 222 ----------------------------------------------------------------------
( 167 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER ShiftExpression . (267)

UNSIGNED_RIGHT_SHIFT    Shift  169
RIGHT_SHIFT             Shift  170
LEFT_SHIFT              Shift  171

COMMA                   Reduce 267
COLON                   Reduce 267
QUESTION                Reduce 267
SEMICOLON               Reduce 267
RBRACKET                Reduce 267
RBRACE                  Reduce 267
RPAREN                  Reduce 267
LESS                    Reduce 267
GREATER                 Reduce 267
OR                      Reduce 267
AND                     Reduce 267
XOR                     Reduce 267
AND_AND                 Reduce 267
OR_OR                   Reduce 267
NOT_EQUAL               Reduce 267
GREATER_EQUAL           Reduce 267
LESS_EQUAL              Reduce 267
EQUAL_EQUAL             Reduce 267
instanceof              Reduce 267

Default reduction to rule  267


STATE 223 ----------------------------------------------------------------------
( 168 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS ShiftExpression . (266)

UNSIGNED_RIGHT_SHIFT    Shift  169
RIGHT_SHIFT             Shift  170
LEFT_SHIFT              Shift  171

COMMA                   Reduce 266
COLON                   Reduce 266
QUESTION                Reduce 266
SEMICOLON               Reduce 266
RBRACKET                Reduce 266
RBRACE                  Reduce 266
RPAREN                  Reduce 266
LESS                    Reduce 266
GREATER                 Reduce 266
OR                      Reduce 266
AND                     Reduce 266
XOR                     Reduce 266
AND_AND                 Reduce 266
OR_OR                   Reduce 266
NOT_EQUAL               Reduce 266
GREATER_EQUAL           Reduce 266
LESS_EQUAL              Reduce 266
EQUAL_EQUAL             Reduce 266
instanceof              Reduce 266

Default reduction to rule  266


STATE 224 ----------------------------------------------------------------------
( 169 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression .
                     (264)

MINUS                   Shift  159
PLUS                    Shift  160

COMMA                   Reduce 264
COLON                   Reduce 264
QUESTION                Reduce 264
SEMICOLON               Reduce 264
RBRACKET                Reduce 264
RBRACE                  Reduce 264
RPAREN                  Reduce 264
LESS                    Reduce 264
GREATER                 Reduce 264
OR                      Reduce 264
AND                     Reduce 264
XOR                     Reduce 264
AND_AND                 Reduce 264
OR_OR                   Reduce 264
UNSIGNED_RIGHT_SHIFT    Reduce 264
RIGHT_SHIFT             Reduce 264
LEFT_SHIFT              Reduce 264
NOT_EQUAL               Reduce 264
GREATER_EQUAL           Reduce 264
LESS_EQUAL              Reduce 264
EQUAL_EQUAL             Reduce 264
instanceof              Reduce 264

Default reduction to rule  264


STATE 225 ----------------------------------------------------------------------
( 170 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression RIGHT_SHIFT AdditiveExpression . (263)

MINUS                   Shift  159
PLUS                    Shift  160

COMMA                   Reduce 263
COLON                   Reduce 263
QUESTION                Reduce 263
SEMICOLON               Reduce 263
RBRACKET                Reduce 263
RBRACE                  Reduce 263
RPAREN                  Reduce 263
LESS                    Reduce 263
GREATER                 Reduce 263
OR                      Reduce 263
AND                     Reduce 263
XOR                     Reduce 263
AND_AND                 Reduce 263
OR_OR                   Reduce 263
UNSIGNED_RIGHT_SHIFT    Reduce 263
RIGHT_SHIFT             Reduce 263
LEFT_SHIFT              Reduce 263
NOT_EQUAL               Reduce 263
GREATER_EQUAL           Reduce 263
LESS_EQUAL              Reduce 263
EQUAL_EQUAL             Reduce 263
instanceof              Reduce 263

Default reduction to rule  263


STATE 226 ----------------------------------------------------------------------
( 171 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression . (262)

MINUS                   Shift  159
PLUS                    Shift  160

COMMA                   Reduce 262
COLON                   Reduce 262
QUESTION                Reduce 262
SEMICOLON               Reduce 262
RBRACKET                Reduce 262
RBRACE                  Reduce 262
RPAREN                  Reduce 262
LESS                    Reduce 262
GREATER                 Reduce 262
OR                      Reduce 262
AND                     Reduce 262
XOR                     Reduce 262
AND_AND                 Reduce 262
OR_OR                   Reduce 262
UNSIGNED_RIGHT_SHIFT    Reduce 262
RIGHT_SHIFT             Reduce 262
LEFT_SHIFT              Reduce 262
NOT_EQUAL               Reduce 262
GREATER_EQUAL           Reduce 262
LESS_EQUAL              Reduce 262
EQUAL_EQUAL             Reduce 262
instanceof              Reduce 262

Default reduction to rule  262


STATE 227 ----------------------------------------------------------------------
( 172 )

EqualityExpression ::= EqualityExpression  .EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= EqualityExpression  .NOT_EQUAL RelationalExpression 
AndExpression ::= AndExpression AND EqualityExpression . (275)

NOT_EQUAL      Shift  173
EQUAL_EQUAL    Shift  174

COMMA          Reduce 275
COLON          Reduce 275
QUESTION       Reduce 275
SEMICOLON      Reduce 275
RBRACKET       Reduce 275
RBRACE         Reduce 275
RPAREN         Reduce 275
OR             Reduce 275
AND            Reduce 275
XOR            Reduce 275
AND_AND        Reduce 275
OR_OR          Reduce 275

Default reduction to rule  275


STATE 228 ----------------------------------------------------------------------
( 173 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression .
                        (273)

instanceof       Shift  164
GREATER_EQUAL    Shift  165
LESS_EQUAL       Shift  166
GREATER          Shift  167
LESS             Shift  168

COMMA            Reduce 273
COLON            Reduce 273
QUESTION         Reduce 273
SEMICOLON        Reduce 273
RBRACKET         Reduce 273
RBRACE           Reduce 273
RPAREN           Reduce 273
OR               Reduce 273
AND              Reduce 273
XOR              Reduce 273
AND_AND          Reduce 273
OR_OR            Reduce 273
NOT_EQUAL        Reduce 273
EQUAL_EQUAL      Reduce 273

Default reduction to rule  273


STATE 229 ----------------------------------------------------------------------
( 174 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression .
                        (272)

instanceof       Shift  164
GREATER_EQUAL    Shift  165
LESS_EQUAL       Shift  166
GREATER          Shift  167
LESS             Shift  168

COMMA            Reduce 272
COLON            Reduce 272
QUESTION         Reduce 272
SEMICOLON        Reduce 272
RBRACKET         Reduce 272
RBRACE           Reduce 272
RPAREN           Reduce 272
OR               Reduce 272
AND              Reduce 272
XOR              Reduce 272
AND_AND          Reduce 272
OR_OR            Reduce 272
NOT_EQUAL        Reduce 272
EQUAL_EQUAL      Reduce 272

Default reduction to rule  272


STATE 230 ----------------------------------------------------------------------
( 175 )

ExclusiveOrExpression ::= ExclusiveOrExpression  .XOR AndExpression 
InclusiveOrExpression ::= InclusiveOrExpression OR ExclusiveOrExpression .
                           (279)

XOR          Shift  176

COMMA        Reduce 279
COLON        Reduce 279
QUESTION     Reduce 279
SEMICOLON    Reduce 279
RBRACKET     Reduce 279
RBRACE       Reduce 279
RPAREN       Reduce 279
OR           Reduce 279
AND_AND      Reduce 279
OR_OR        Reduce 279

Default reduction to rule  279


STATE 231 ----------------------------------------------------------------------
( 176 )

AndExpression ::= AndExpression  .AND EqualityExpression 
ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression . (277)

AND          Shift  172

COMMA        Reduce 277
COLON        Reduce 277
QUESTION     Reduce 277
SEMICOLON    Reduce 277
RBRACKET     Reduce 277
RBRACE       Reduce 277
RPAREN       Reduce 277
OR           Reduce 277
XOR          Reduce 277
AND_AND      Reduce 277
OR_OR        Reduce 277

Default reduction to rule  277


STATE 232 ----------------------------------------------------------------------
( 177 )

ConditionalExpression ::= ConditionalOrExpression QUESTION Expression  .COLON 
                          ConditionalExpression 

COLON    Shift  260



STATE 233 ----------------------------------------------------------------------
( 178 )

ConditionalAndExpression ::= ConditionalAndExpression  .AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= ConditionalOrExpression OR_OR 
                            ConditionalAndExpression . (283)

AND_AND      Shift  179

COMMA        Reduce 283
COLON        Reduce 283
QUESTION     Reduce 283
SEMICOLON    Reduce 283
RBRACKET     Reduce 283
RBRACE       Reduce 283
RPAREN       Reduce 283
OR_OR        Reduce 283

Default reduction to rule  283


STATE 234 ----------------------------------------------------------------------
( 179 )

InclusiveOrExpression ::= InclusiveOrExpression  .OR ExclusiveOrExpression 
ConditionalAndExpression ::= ConditionalAndExpression AND_AND 
                             InclusiveOrExpression . (281)

OR           Shift  175

COMMA        Reduce 281
COLON        Reduce 281
QUESTION     Reduce 281
SEMICOLON    Reduce 281
RBRACKET     Reduce 281
RBRACE       Reduce 281
RPAREN       Reduce 281
AND_AND      Reduce 281
OR_OR        Reduce 281

Default reduction to rule  281


STATE 235 ----------------------------------------------------------------------
( 180 )

DoStatement ::= do Statement while LPAREN  .Expression RPAREN SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   261
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 236 ----------------------------------------------------------------------
( 181 )

SwitchStatement ::= switch LPAREN Expression RPAREN  .SwitchBlock 

SwitchBlock ::= .LBRACE SwitchLabelsopt RBRACE 
SwitchBlock ::= .LBRACE SwitchBlockStatements SwitchLabelsopt RBRACE 

LBRACE         Shift  262

SwitchBlock    Gt/Rd  168



STATE 237 ----------------------------------------------------------------------
( 182 )

ClassInstanceCreationExpression ::= new ClassType LPAREN ArgumentListopt  .
                                    RPAREN ClassBodyopt 

RPAREN    Shift  263



STATE 238 ----------------------------------------------------------------------
( 184 186 )

DimExpr ::= LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  221



STATE 239 ----------------------------------------------------------------------
( 188 )

MethodInvocation ::= super DOT IDENTIFIER LPAREN  .ArgumentListopt RPAREN 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   264
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 240 ----------------------------------------------------------------------
( 189 )

MethodInvocation ::= Primary DOT IDENTIFIER LPAREN  .ArgumentListopt RPAREN 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   265
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 241 ----------------------------------------------------------------------
( 190 )

ClassInstanceCreationExpression ::= Primary DOT new SimpleName  .LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

LPAREN    Shift  266



STATE 242 ----------------------------------------------------------------------
( 191 )

IfThenStatement ::= if LPAREN Expression RPAREN  .Statement 
IfThenElseStatement ::= if LPAREN Expression RPAREN  .StatementNoShortIf else 
                        Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Goto   267
Statement                               Gt/Rd  165
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268



STATE 243 ----------------------------------------------------------------------
( 192 )

WhileStatement ::= while LPAREN Expression RPAREN  .Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
IDENTIFIER                              Shift  85
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57

Statement                               Gt/Rd  178
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143



STATE 244 ----------------------------------------------------------------------
( 193 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (310)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expressionopt                      Goto   273
Expression                         Gt/Rd  311
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304

SEMICOLON                          Reduce 310

Default reduction to rule  310


STATE 245 ----------------------------------------------------------------------
( 195 310 )

StatementExpressionList ::= StatementExpressionList COMMA  .StatementExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  70
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
super                              Shift  77
IDENTIFIER                         Sh/Rd  33

StatementExpression                Gt/Rd  187
PreDecrementExpression             Gt/Rd  160
PreIncrementExpression             Gt/Rd  159
Assignment                         Gt/Rd  158
PostDecrementExpression            Goto   64
PostIncrementExpression            Goto   65
PostfixExpression                  Goto   66
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Goto   72
ArrayAccess                        Goto   73
MethodInvocation                   Goto   74
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
Primary                            Goto   78
Name                               Goto   86
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
LeftHandSide                       Goto   79



STATE 246 ----------------------------------------------------------------------
( 197 )

ArgumentList ::= ArgumentList COMMA  .Expression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Gt/Rd  215
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 247 ----------------------------------------------------------------------
( 198 301 )

FieldAccess ::= Name DOT super DOT  .IDENTIFIER 
MethodInvocation ::= Name DOT super DOT  .IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 

IDENTIFIER    Shift  274



STATE 248 ----------------------------------------------------------------------
( 199 )

ClassInstanceCreationExpression ::= Name DOT new SimpleName  .LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

LPAREN    Shift  275



STATE 249 ----------------------------------------------------------------------
( 201 )

SynchronizedStatement ::= synchronized LPAREN Expression RPAREN  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  41

Block     Gt/Rd  192



STATE 250 ----------------------------------------------------------------------
( 203 )

ConstructorBody ::= LBRACE ExplicitConstructorInvocation  .BlockStatementsopt 
                    RBRACE 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 
BlockStatementsopt ::= . (324)
BlockStatementsopt ::= .BlockStatements 

try                                     Shift  57
throw                                   Shift  58
return                                  Shift  59
continue                                Shift  60
break                                   Shift  61
do                                      Shift  62
switch                                  Shift  63
MINUS_MINUS                             Shift  67
PLUS_PLUS                               Shift  68
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
false                                   Sh/Rd  10
true                                    Sh/Rd  9
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
new                                     Shift  75
super                                   Shift  77
SEMICOLON                               Sh/Rd  154
LBRACE                                  Shift  41
if                                      Shift  81
while                                   Shift  82
for                                     Shift  83
boolean                                 Sh/Rd  14
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
double                                  Sh/Rd  23
float                                   Sh/Rd  22
IDENTIFIER                              Shift  85
volatile                                Sh/Rd  60
transient                               Sh/Rd  59
synchronized                            Shift  87
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50

BlockStatementsopt                      Goto   276
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126
Modifiersopt                            Goto   56
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PostfixExpression                       Goto   66
FieldAccess                             Goto   71
ClassInstanceCreationExpression         Goto   72
ArrayAccess                             Goto   73
MethodInvocation                        Goto   74
Literal                                 Gt/Rd  201
BooleanLiteral                          Gt/Rd  5
ArrayCreationExpression                 Gt/Rd  200
PrimaryNoNewArray                       Goto   76
Primary                                 Goto   78
LeftHandSide                            Goto   79
StatementExpression                     Goto   80
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
Type                                    Goto   84
NumericType                             Gt/Rd  13
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
Name                                    Goto   86
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
Modifiers                               Goto   88
Modifier                                Gt/Rd  48
LocalVariableDeclaration                Goto   89
BlockStatements                         Goto   90
BlockStatement                          Gt/Rd  124

class                                   Reduce 320
RBRACE                                  Reduce 324

Default reduction to rule  324


STATE 251 ----------------------------------------------------------------------
( 203 )

ExplicitConstructorInvocation ::= this  .LPAREN ArgumentListopt RPAREN 
                                  SEMICOLON 
PrimaryNoNewArray ::= this . (207)

LPAREN         Shift  277

DOT            Reduce 207
LBRACKET       Reduce 207
MINUS_MINUS    Reduce 207
PLUS_PLUS      Reduce 207

Default reduction to rule  207


STATE 252 ----------------------------------------------------------------------
( 203 )

ExplicitConstructorInvocation ::= super  .LPAREN ArgumentListopt RPAREN 
                                  SEMICOLON 
FieldAccess ::= super  .DOT IDENTIFIER 
MethodInvocation ::= super  .DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 

DOT       Shift  131
LPAREN    Shift  278



STATE 253 ----------------------------------------------------------------------
( 203 )

ExplicitConstructorInvocation ::= Primary  .DOT this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= Primary  .DOT super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ClassInstanceCreationExpression ::= Primary  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary  .DOT IDENTIFIER 
MethodInvocation ::= Primary  .DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
PostfixExpression ::= Primary . (234)

DOT            Shift  279

MINUS_MINUS    Reduce 234
PLUS_PLUS      Reduce 234

Default reduction to rule  234


STATE 254 ----------------------------------------------------------------------
( 203 )

ClassOrInterfaceType ::= Name . (26)
ArrayType ::= Name  .Dims 
QualifiedName ::= Name  .DOT IDENTIFIER 
ExplicitConstructorInvocation ::= Name  .DOT super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
PrimaryNoNewArray ::= Name  .DOT this 
ClassInstanceCreationExpression ::= Name  .DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name  .DOT super DOT IDENTIFIER 
MethodInvocation ::= Name  .LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= Name  .DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= Name  .LBRACKET Expression RBRACKET 
PostfixExpression ::= Name . (235)
LeftHandSide ::= Name . (289)

Dims ::= .Dim 
Dims ::= .Dims Dim 
Dim ::= .LBRACKET RBRACKET 

LPAREN                        Shift  141
DOT                           La/Sh  339
LBRACKET                      Shift  143

Dims                          Goto   52
Dim                           Gt/Rd  222

IDENTIFIER                    Reduce 26
MINUS_MINUS                   Reduce 235
PLUS_PLUS                     Reduce 235
EQUAL                         Reduce 289
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 289
RIGHT_SHIFT_EQUAL             Reduce 289
LEFT_SHIFT_EQUAL              Reduce 289
REMAINDER_EQUAL               Reduce 289
XOR_EQUAL                     Reduce 289
OR_EQUAL                      Reduce 289
AND_EQUAL                     Reduce 289
DIVIDE_EQUAL                  Reduce 289
MULTIPLY_EQUAL                Reduce 289
MINUS_EQUAL                   Reduce 289
PLUS_EQUAL                    Reduce 289

Default reduction to rule  289


STATE 255 ----------------------------------------------------------------------
( 209 )

ArrayInitializer ::= LBRACE VariableInitializersopt Commaopt  .RBRACE 

RBRACE    Sh/Rd  120



STATE 256 ----------------------------------------------------------------------
( 338 )

VariableInitializers ::= VariableInitializers COMMA  .VariableInitializer 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

LBRACE                             Shift  152
MINUS                              Shift  105
PLUS                               Shift  106
void                               Shift  69
this                               Sh/Rd  207
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
IDENTIFIER                         Sh/Rd  33
super                              Shift  77
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
LPAREN                             Shift  103
NOT                                Shift  100
TWIDDLE                            Shift  101
MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68

VariableInitializer                Gt/Rd  122
ArrayInitializer                   Gt/Rd  85
Expression                         Gt/Rd  84
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304



STATE 257 ----------------------------------------------------------------------
( 212 )

CatchClause ::= catch LPAREN FormalParameter  .RPAREN Block 

RPAREN    Shift  281



STATE 258 ----------------------------------------------------------------------
( 214 )

CastExpression ::= LPAREN PrimitiveType Dimsopt RPAREN  .UnaryExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

UnaryExpression                    Gt/Rd  251
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   123
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104



STATE 259 ----------------------------------------------------------------------
( 216 )

CastExpression ::= LPAREN Name Dims RPAREN  .UnaryExpressionNotPlusMinus 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 

NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103

UnaryExpressionNotPlusMinus        Gt/Rd  253
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78



STATE 260 ----------------------------------------------------------------------
( 232 )

ConditionalExpression ::= ConditionalOrExpression QUESTION Expression COLON  .
                          ConditionalExpression 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ConditionalExpression              Gt/Rd  285
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
FieldAccess                        Gt/Rd  205
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Gt/Rd  203
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Name                               Goto   123
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116



STATE 261 ----------------------------------------------------------------------
( 235 )

DoStatement ::= do Statement while LPAREN Expression  .RPAREN SEMICOLON 

RPAREN    Shift  282



STATE 262 ----------------------------------------------------------------------
( 236 )

SwitchBlock ::= LBRACE  .SwitchLabelsopt RBRACE 
SwitchBlock ::= LBRACE  .SwitchBlockStatements SwitchLabelsopt RBRACE 

SwitchBlockStatements ::= .SwitchBlockStatement 
SwitchBlockStatements ::= .SwitchBlockStatements SwitchBlockStatement 
SwitchBlockStatement ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .default COLON 
SwitchLabelsopt ::= . (350)
SwitchLabelsopt ::= .SwitchLabels 

default                  Shift  284
case                     Shift  285

SwitchLabelsopt          Goto   283
SwitchLabel              Gt/Rd  174
SwitchBlockStatements    Goto   286
SwitchBlockStatement     Gt/Rd  171
SwitchLabels             Goto   287

RBRACE                   Reduce 350

Default reduction to rule  350


STATE 263 ----------------------------------------------------------------------
( 237 )

ClassInstanceCreationExpression ::= new ClassType LPAREN ArgumentListopt 
                                    RPAREN  .ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (312)
ClassBodyopt ::= .ClassBody 

LBRACE                  Shift  34

ClassBodyopt            Gt/Rd  211
ClassBody               Gt/Rd  313

DOT                     Reduce 312
COMMA                   Reduce 312
COLON                   Reduce 312
QUESTION                Reduce 312
SEMICOLON               Reduce 312
RBRACKET                Reduce 312
LBRACKET                Reduce 312
RBRACE                  Reduce 312
RPAREN                  Reduce 312
LESS                    Reduce 312
GREATER                 Reduce 312
DIVIDE                  Reduce 312
OR                      Reduce 312
MULTIPLY                Reduce 312
AND                     Reduce 312
XOR                     Reduce 312
REMAINDER               Reduce 312
MINUS                   Reduce 312
PLUS                    Reduce 312
AND_AND                 Reduce 312
OR_OR                   Reduce 312
UNSIGNED_RIGHT_SHIFT    Reduce 312
RIGHT_SHIFT             Reduce 312
LEFT_SHIFT              Reduce 312
NOT_EQUAL               Reduce 312
GREATER_EQUAL           Reduce 312
LESS_EQUAL              Reduce 312
EQUAL_EQUAL             Reduce 312
MINUS_MINUS             Reduce 312
PLUS_PLUS               Reduce 312
instanceof              Reduce 312

Default reduction to rule  312


STATE 264 ----------------------------------------------------------------------
( 239 )

MethodInvocation ::= super DOT IDENTIFIER LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  230



STATE 265 ----------------------------------------------------------------------
( 240 )

MethodInvocation ::= Primary DOT IDENTIFIER LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  229



STATE 266 ----------------------------------------------------------------------
( 241 )

ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN  .
                                    ArgumentListopt RPAREN ClassBodyopt 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   288
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 267 ----------------------------------------------------------------------
( 242 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 

else    Shift  289



STATE 268 ----------------------------------------------------------------------
( 242 293 319 320 331 333 )

Statement ::= StatementWithoutTrailingSubstatement . (132)
StatementNoShortIf ::= StatementWithoutTrailingSubstatement . (138)

SEMICOLON               Reduce 132
RBRACE                  Reduce 132
LBRACE                  Reduce 132
LPAREN                  Reduce 132
MINUS_MINUS             Reduce 132
PLUS_PLUS               Reduce 132
StringLiteral           Reduce 132
CharacterLiteral        Reduce 132
DoubleLiteral           Reduce 132
FloatingPointLiteral    Reduce 132
LongLiteral             Reduce 132
IntegerLiteral          Reduce 132
while                   Reduce 132
volatile                Reduce 132
void                    Reduce 132
try                     Reduce 132
true                    Reduce 132
transient               Reduce 132
throw                   Reduce 132
this                    Reduce 132
synchronized            Reduce 132
switch                  Reduce 132
super                   Reduce 132
strictfp                Reduce 132
static                  Reduce 132
short                   Reduce 132
return                  Reduce 132
public                  Reduce 132
protected               Reduce 132
private                 Reduce 132
null                    Reduce 132
new                     Reduce 132
native                  Reduce 132
long                    Reduce 132
int                     Reduce 132
if                      Reduce 132
for                     Reduce 132
float                   Reduce 132
final                   Reduce 132
false                   Reduce 132
double                  Reduce 132
do                      Reduce 132
default                 Reduce 132
continue                Reduce 132
class                   Reduce 132
char                    Reduce 132
case                    Reduce 132
byte                    Reduce 132
break                   Reduce 132
boolean                 Reduce 132
abstract                Reduce 132
IDENTIFIER              Reduce 132
else                    Reduce 138

Default reduction to rule  132


STATE 269 ----------------------------------------------------------------------
( 242 293 319 320 331 333 )

ForStatement ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

LPAREN    Shift  290



STATE 270 ----------------------------------------------------------------------
( 242 293 319 320 331 333 )

WhileStatement ::= while  .LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= while  .LPAREN Expression RPAREN StatementNoShortIf 

LPAREN    Shift  291



STATE 271 ----------------------------------------------------------------------
( 242 293 319 320 331 333 )

IfThenStatement ::= if  .LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= if  .LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if  .LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

LPAREN    Shift  292



STATE 272 ----------------------------------------------------------------------
( 242 293 319 320 331 333 )

SimpleName ::= IDENTIFIER . (33)
LabeledStatement ::= IDENTIFIER  .COLON Statement 
LabeledStatementNoShortIf ::= IDENTIFIER  .COLON StatementNoShortIf 

COLON                         Shift  293

EQUAL                         Reduce 33
DOT                           Reduce 33
LBRACKET                      Reduce 33
LPAREN                        Reduce 33
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 33
RIGHT_SHIFT_EQUAL             Reduce 33
LEFT_SHIFT_EQUAL              Reduce 33
REMAINDER_EQUAL               Reduce 33
XOR_EQUAL                     Reduce 33
OR_EQUAL                      Reduce 33
AND_EQUAL                     Reduce 33
DIVIDE_EQUAL                  Reduce 33
MULTIPLY_EQUAL                Reduce 33
MINUS_EQUAL                   Reduce 33
PLUS_EQUAL                    Reduce 33
MINUS_MINUS                   Reduce 33
PLUS_PLUS                     Reduce 33

Default reduction to rule  33


STATE 273 ----------------------------------------------------------------------
( 244 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                 ForUpdateopt RPAREN Statement 

SEMICOLON    Shift  294



STATE 274 ----------------------------------------------------------------------
( 247 )

FieldAccess ::= Name DOT super DOT IDENTIFIER . (227)
MethodInvocation ::= Name DOT super DOT IDENTIFIER  .LPAREN ArgumentListopt 
                     RPAREN 

LPAREN                        Shift  295

EQUAL                         Reduce 227
DOT                           Reduce 227
COMMA                         Reduce 227
COLON                         Reduce 227
QUESTION                      Reduce 227
SEMICOLON                     Reduce 227
RBRACKET                      Reduce 227
LBRACKET                      Reduce 227
RBRACE                        Reduce 227
RPAREN                        Reduce 227
LESS                          Reduce 227
GREATER                       Reduce 227
DIVIDE                        Reduce 227
OR                            Reduce 227
MULTIPLY                      Reduce 227
AND                           Reduce 227
XOR                           Reduce 227
REMAINDER                     Reduce 227
MINUS                         Reduce 227
PLUS                          Reduce 227
AND_AND                       Reduce 227
OR_OR                         Reduce 227
UNSIGNED_RIGHT_SHIFT_EQUAL    Reduce 227
RIGHT_SHIFT_EQUAL             Reduce 227
LEFT_SHIFT_EQUAL              Reduce 227
REMAINDER_EQUAL               Reduce 227
XOR_EQUAL                     Reduce 227
OR_EQUAL                      Reduce 227
AND_EQUAL                     Reduce 227
DIVIDE_EQUAL                  Reduce 227
MULTIPLY_EQUAL                Reduce 227
MINUS_EQUAL                   Reduce 227
PLUS_EQUAL                    Reduce 227
UNSIGNED_RIGHT_SHIFT          Reduce 227
RIGHT_SHIFT                   Reduce 227
LEFT_SHIFT                    Reduce 227
NOT_EQUAL                     Reduce 227
GREATER_EQUAL                 Reduce 227
LESS_EQUAL                    Reduce 227
EQUAL_EQUAL                   Reduce 227
MINUS_MINUS                   Reduce 227
PLUS_PLUS                     Reduce 227
instanceof                    Reduce 227

Default reduction to rule  227


STATE 275 ----------------------------------------------------------------------
( 248 )

ClassInstanceCreationExpression ::= Name DOT new SimpleName LPAREN  .
                                    ArgumentListopt RPAREN ClassBodyopt 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   296
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 276 ----------------------------------------------------------------------
( 250 )

ConstructorBody ::= LBRACE ExplicitConstructorInvocation BlockStatementsopt  .
                    RBRACE 

RBRACE    Sh/Rd  102



STATE 277 ----------------------------------------------------------------------
( 251 )

ExplicitConstructorInvocation ::= this LPAREN  .ArgumentListopt RPAREN 
                                  SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   297
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 278 ----------------------------------------------------------------------
( 252 )

ExplicitConstructorInvocation ::= super LPAREN  .ArgumentListopt RPAREN 
                                  SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   298
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 279 ----------------------------------------------------------------------
( 253 )

ExplicitConstructorInvocation ::= Primary DOT  .this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= Primary DOT  .super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ClassInstanceCreationExpression ::= Primary DOT  .new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .IDENTIFIER 
MethodInvocation ::= Primary DOT  .IDENTIFIER LPAREN ArgumentListopt RPAREN 

IDENTIFIER    Shift  189
new           Shift  190
super         Shift  299
this          Shift  300



STATE 280 ----------------------------------------------------------------------
( 339 )

QualifiedName ::= Name DOT  .IDENTIFIER 
ExplicitConstructorInvocation ::= Name DOT  .super LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
PrimaryNoNewArray ::= Name DOT  .this 
ClassInstanceCreationExpression ::= Name DOT  .new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Name DOT  .super DOT IDENTIFIER 
MethodInvocation ::= Name DOT  .super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 

new           Shift  199
this          Sh/Rd  208
super         Shift  301
IDENTIFIER    Sh/Rd  34



STATE 281 ----------------------------------------------------------------------
( 257 )

CatchClause ::= catch LPAREN FormalParameter RPAREN  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  41

Block     Gt/Rd  197



STATE 282 ----------------------------------------------------------------------
( 261 )

DoStatement ::= do Statement while LPAREN Expression RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  180



STATE 283 ----------------------------------------------------------------------
( 262 )

SwitchBlock ::= LBRACE SwitchLabelsopt  .RBRACE 

RBRACE    Sh/Rd  169



STATE 284 ----------------------------------------------------------------------
( 262 286 287 )

SwitchLabel ::= default  .COLON 

COLON    Sh/Rd  177



STATE 285 ----------------------------------------------------------------------
( 262 286 287 )

SwitchLabel ::= case  .ConstantExpression COLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ConstantExpression ::= .Expression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ConstantExpression                 Goto   302
Expression                         Gt/Rd  305
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304



STATE 286 ----------------------------------------------------------------------
( 262 )

SwitchBlock ::= LBRACE SwitchBlockStatements  .SwitchLabelsopt RBRACE 
SwitchBlockStatements ::= SwitchBlockStatements  .SwitchBlockStatement 

SwitchBlockStatement ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .default COLON 
SwitchLabelsopt ::= . (350)
SwitchLabelsopt ::= .SwitchLabels 

default                 Shift  284
case                    Shift  285

SwitchBlockStatement    Gt/Rd  172
SwitchLabelsopt         Goto   303
SwitchLabel             Gt/Rd  174
SwitchLabels            Goto   287

RBRACE                  Reduce 350

Default reduction to rule  350


STATE 287 ----------------------------------------------------------------------
( 262 286 )

SwitchBlockStatement ::= SwitchLabels  .BlockStatements 
SwitchLabels ::= SwitchLabels  .SwitchLabel 
SwitchLabelsopt ::= SwitchLabels . (351)

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .default COLON 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

volatile                                Sh/Rd  60
transient                               Sh/Rd  59
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
IDENTIFIER                              Shift  85
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  87
throw                                   Shift  58
try                                     Shift  57
default                                 Shift  284
case                                    Shift  285

SwitchLabel                             Gt/Rd  175
BlockStatements                         Goto   304
BlockStatement                          Gt/Rd  124
LocalVariableDeclaration                Goto   89
Modifier                                Gt/Rd  48
ReferenceType                           Gt/Rd  12
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
Type                                    Goto   84
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
Modifiersopt                            Goto   56
Modifiers                               Goto   88
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126

class                                   Reduce 320
RBRACE                                  Reduce 351

Default reduction to rule  351


STATE 288 ----------------------------------------------------------------------
( 266 )

ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 

RPAREN    Shift  305



STATE 289 ----------------------------------------------------------------------
( 267 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else  .
                        Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
IDENTIFIER                              Shift  85
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57

Statement                               Gt/Rd  166
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143



STATE 290 ----------------------------------------------------------------------
( 269 )

ForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (338)
ForInitopt ::= .ForInit 

IDENTIFIER                         Sh/Rd  33
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
super                              Shift  77
new                                Shift  75
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  70
PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
volatile                           Sh/Rd  60
transient                          Sh/Rd  59
synchronized                       Sh/Rd  58
strictfp                           Sh/Rd  57
native                             Sh/Rd  56
final                              Sh/Rd  55
abstract                           Sh/Rd  54
static                             Sh/Rd  53
private                            Sh/Rd  52
protected                          Sh/Rd  51
public                             Sh/Rd  50

ForInitopt                         Goto   306
ForInit                            Gt/Rd  339
StatementExpression                Gt/Rd  186
LeftHandSide                       Goto   79
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Literal                            Gt/Rd  201
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Primary                            Goto   78
PostfixExpression                  Goto   66
ClassInstanceCreationExpression    Goto   72
MethodInvocation                   Goto   74
PostDecrementExpression            Goto   64
PostIncrementExpression            Goto   65
PreDecrementExpression             Gt/Rd  160
PreIncrementExpression             Gt/Rd  159
Assignment                         Gt/Rd  158
Type                               Goto   84
Modifiers                          Goto   194
Modifier                           Gt/Rd  48
LocalVariableDeclaration           Gt/Rd  184
StatementExpressionList            Goto   195

SEMICOLON                          Reduce 338

Default reduction to rule  338


STATE 291 ----------------------------------------------------------------------
( 270 )

WhileStatement ::= while LPAREN  .Expression RPAREN Statement 
WhileStatementNoShortIf ::= while LPAREN  .Expression RPAREN StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   307
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 292 ----------------------------------------------------------------------
( 271 )

IfThenStatement ::= if LPAREN  .Expression RPAREN Statement 
IfThenElseStatement ::= if LPAREN  .Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN  .Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expression                         Goto   308
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286



STATE 293 ----------------------------------------------------------------------
( 272 )

LabeledStatement ::= IDENTIFIER COLON  .Statement 
LabeledStatementNoShortIf ::= IDENTIFIER COLON  .StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Gt/Rd  156
Statement                               Gt/Rd  155
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268



STATE 294 ----------------------------------------------------------------------
( 273 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON  .
                 ForUpdateopt RPAREN Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForUpdate ::= .StatementExpressionList 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForUpdateopt ::= . (340)
ForUpdateopt ::= .ForUpdate 

MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  70
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
super                              Shift  77
IDENTIFIER                         Sh/Rd  33

ForUpdateopt                       Goto   309
ForUpdate                          Gt/Rd  341
StatementExpression                Gt/Rd  186
LeftHandSide                       Goto   79
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
Literal                            Gt/Rd  201
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Primary                            Goto   78
PostfixExpression                  Goto   66
ClassInstanceCreationExpression    Goto   72
MethodInvocation                   Goto   74
PostDecrementExpression            Goto   64
PostIncrementExpression            Goto   65
PreDecrementExpression             Gt/Rd  160
PreIncrementExpression             Gt/Rd  159
Assignment                         Gt/Rd  158
StatementExpressionList            Goto   310

RPAREN                             Reduce 340

Default reduction to rule  340


STATE 295 ----------------------------------------------------------------------
( 274 )

MethodInvocation ::= Name DOT super DOT IDENTIFIER LPAREN  .ArgumentListopt 
                     RPAREN 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   311
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 296 ----------------------------------------------------------------------
( 275 )

ClassInstanceCreationExpression ::= Name DOT new SimpleName LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 

RPAREN    Shift  312



STATE 297 ----------------------------------------------------------------------
( 277 )

ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt  .RPAREN 
                                  SEMICOLON 

RPAREN    Shift  313



STATE 298 ----------------------------------------------------------------------
( 278 )

ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt  .RPAREN 
                                  SEMICOLON 

RPAREN    Shift  314



STATE 299 ----------------------------------------------------------------------
( 279 )

ExplicitConstructorInvocation ::= Primary DOT super  .LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 

LPAREN    Shift  315



STATE 300 ----------------------------------------------------------------------
( 279 )

ExplicitConstructorInvocation ::= Primary DOT this  .LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 

LPAREN    Shift  316



STATE 301 ----------------------------------------------------------------------
( 280 )

ExplicitConstructorInvocation ::= Name DOT super  .LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
FieldAccess ::= Name DOT super  .DOT IDENTIFIER 
MethodInvocation ::= Name DOT super  .DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 

DOT       Shift  247
LPAREN    Shift  317



STATE 302 ----------------------------------------------------------------------
( 285 )

SwitchLabel ::= case ConstantExpression  .COLON 

COLON    Sh/Rd  176



STATE 303 ----------------------------------------------------------------------
( 286 )

SwitchBlock ::= LBRACE SwitchBlockStatements SwitchLabelsopt  .RBRACE 

RBRACE    Sh/Rd  170



STATE 304 ----------------------------------------------------------------------
( 287 )

BlockStatements ::= BlockStatements  .BlockStatement 
SwitchBlockStatement ::= SwitchLabels BlockStatements . (173)

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Modifiers ::= .Modifier 
Modifiers ::= .Modifiers Modifier 
Modifier ::= .public 
Modifier ::= .protected 
Modifier ::= .private 
Modifier ::= .static 
Modifier ::= .abstract 
Modifier ::= .final 
Modifier ::= .native 
Modifier ::= .strictfp 
Modifier ::= .synchronized 
Modifier ::= .transient 
Modifier ::= .volatile 
ClassDeclaration ::= .Modifiersopt class IDENTIFIER Superopt Interfacesopt 
                     ClassBody 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .Statement 
BlockStatement ::= .ClassDeclaration 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .Modifiers Type VariableDeclarators 
LocalVariableDeclaration ::= .Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Modifiersopt ::= . (320)
Modifiersopt ::= .Modifiers 

try                                     Shift  57
throw                                   Shift  58
return                                  Shift  59
continue                                Shift  60
break                                   Shift  61
do                                      Shift  62
switch                                  Shift  63
MINUS_MINUS                             Shift  67
PLUS_PLUS                               Shift  68
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
false                                   Sh/Rd  10
true                                    Sh/Rd  9
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
new                                     Shift  75
super                                   Shift  77
SEMICOLON                               Sh/Rd  154
LBRACE                                  Shift  41
if                                      Shift  81
while                                   Shift  82
for                                     Shift  83
boolean                                 Sh/Rd  14
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
double                                  Sh/Rd  23
float                                   Sh/Rd  22
IDENTIFIER                              Shift  85
volatile                                Sh/Rd  60
transient                               Sh/Rd  59
synchronized                            Shift  87
strictfp                                Sh/Rd  57
native                                  Sh/Rd  56
final                                   Sh/Rd  55
abstract                                Sh/Rd  54
static                                  Sh/Rd  53
private                                 Sh/Rd  52
protected                               Sh/Rd  51
public                                  Sh/Rd  50

BlockStatement                          Gt/Rd  125
ClassDeclaration                        Gt/Rd  128
Statement                               Gt/Rd  127
LocalVariableDeclarationStatement       Gt/Rd  126
Modifiersopt                            Goto   56
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PostfixExpression                       Goto   66
FieldAccess                             Goto   71
ClassInstanceCreationExpression         Goto   72
ArrayAccess                             Goto   73
MethodInvocation                        Goto   74
Literal                                 Gt/Rd  201
BooleanLiteral                          Gt/Rd  5
ArrayCreationExpression                 Gt/Rd  200
PrimaryNoNewArray                       Goto   76
Primary                                 Goto   78
LeftHandSide                            Goto   79
StatementExpression                     Goto   80
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
Type                                    Goto   84
NumericType                             Gt/Rd  13
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
Name                                    Goto   86
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
Modifiers                               Goto   88
Modifier                                Gt/Rd  48
LocalVariableDeclaration                Goto   89

class                                   Reduce 320
RBRACE                                  Reduce 173
default                                 Reduce 173
case                                    Reduce 173

Default reduction to rule  173


STATE 305 ----------------------------------------------------------------------
( 288 )

ClassInstanceCreationExpression ::= Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN  .ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (312)
ClassBodyopt ::= .ClassBody 

LBRACE                  Shift  34

ClassBodyopt            Gt/Rd  212
ClassBody               Gt/Rd  313

DOT                     Reduce 312
COMMA                   Reduce 312
COLON                   Reduce 312
QUESTION                Reduce 312
SEMICOLON               Reduce 312
RBRACKET                Reduce 312
LBRACKET                Reduce 312
RBRACE                  Reduce 312
RPAREN                  Reduce 312
LESS                    Reduce 312
GREATER                 Reduce 312
DIVIDE                  Reduce 312
OR                      Reduce 312
MULTIPLY                Reduce 312
AND                     Reduce 312
XOR                     Reduce 312
REMAINDER               Reduce 312
MINUS                   Reduce 312
PLUS                    Reduce 312
AND_AND                 Reduce 312
OR_OR                   Reduce 312
UNSIGNED_RIGHT_SHIFT    Reduce 312
RIGHT_SHIFT             Reduce 312
LEFT_SHIFT              Reduce 312
NOT_EQUAL               Reduce 312
GREATER_EQUAL           Reduce 312
LESS_EQUAL              Reduce 312
EQUAL_EQUAL             Reduce 312
MINUS_MINUS             Reduce 312
PLUS_PLUS               Reduce 312
instanceof              Reduce 312

Default reduction to rule  312


STATE 306 ----------------------------------------------------------------------
( 290 )

ForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

SEMICOLON    Shift  318



STATE 307 ----------------------------------------------------------------------
( 291 )

WhileStatement ::= while LPAREN Expression  .RPAREN Statement 
WhileStatementNoShortIf ::= while LPAREN Expression  .RPAREN StatementNoShortIf 

RPAREN    Shift  319



STATE 308 ----------------------------------------------------------------------
( 292 )

IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression  .RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

RPAREN    Shift  320



STATE 309 ----------------------------------------------------------------------
( 294 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt  .RPAREN Statement 

RPAREN    Shift  321



STATE 310 ----------------------------------------------------------------------
( 294 330 )

ForUpdate ::= StatementExpressionList . (185)
StatementExpressionList ::= StatementExpressionList  .COMMA StatementExpression 

COMMA     Shift  245

RPAREN    Reduce 185

Default reduction to rule  185


STATE 311 ----------------------------------------------------------------------
( 295 )

MethodInvocation ::= Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt  .
                     RPAREN 

RPAREN    Sh/Rd  231



STATE 312 ----------------------------------------------------------------------
( 296 )

ClassInstanceCreationExpression ::= Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN  .ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (312)
ClassBodyopt ::= .ClassBody 

LBRACE                  Shift  34

ClassBodyopt            Gt/Rd  213
ClassBody               Gt/Rd  313

DOT                     Reduce 312
COMMA                   Reduce 312
COLON                   Reduce 312
QUESTION                Reduce 312
SEMICOLON               Reduce 312
RBRACKET                Reduce 312
LBRACKET                Reduce 312
RBRACE                  Reduce 312
RPAREN                  Reduce 312
LESS                    Reduce 312
GREATER                 Reduce 312
DIVIDE                  Reduce 312
OR                      Reduce 312
MULTIPLY                Reduce 312
AND                     Reduce 312
XOR                     Reduce 312
REMAINDER               Reduce 312
MINUS                   Reduce 312
PLUS                    Reduce 312
AND_AND                 Reduce 312
OR_OR                   Reduce 312
UNSIGNED_RIGHT_SHIFT    Reduce 312
RIGHT_SHIFT             Reduce 312
LEFT_SHIFT              Reduce 312
NOT_EQUAL               Reduce 312
GREATER_EQUAL           Reduce 312
LESS_EQUAL              Reduce 312
EQUAL_EQUAL             Reduce 312
MINUS_MINUS             Reduce 312
PLUS_PLUS               Reduce 312
instanceof              Reduce 312

Default reduction to rule  312


STATE 313 ----------------------------------------------------------------------
( 297 )

ExplicitConstructorInvocation ::= this LPAREN ArgumentListopt RPAREN  .
                                  SEMICOLON 

SEMICOLON    Sh/Rd  103



STATE 314 ----------------------------------------------------------------------
( 298 )

ExplicitConstructorInvocation ::= super LPAREN ArgumentListopt RPAREN  .
                                  SEMICOLON 

SEMICOLON    Sh/Rd  105



STATE 315 ----------------------------------------------------------------------
( 299 )

ExplicitConstructorInvocation ::= Primary DOT super LPAREN  .ArgumentListopt 
                                  RPAREN SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   322
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 316 ----------------------------------------------------------------------
( 300 )

ExplicitConstructorInvocation ::= Primary DOT this LPAREN  .ArgumentListopt 
                                  RPAREN SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   323
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 317 ----------------------------------------------------------------------
( 301 )

ExplicitConstructorInvocation ::= Name DOT super LPAREN  .ArgumentListopt 
                                  RPAREN SEMICOLON 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (328)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

ArgumentListopt                    Goto   324
AssignmentExpression               Gt/Rd  304
UnaryExpression                    Gt/Rd  254
CastExpression                     Gt/Rd  248
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
ClassInstanceCreationExpression    Gt/Rd  204
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
PostfixExpression                  Goto   104
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Primary                            Goto   78
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
AdditiveExpression                 Goto   107
MultiplicativeExpression           Goto   108
RelationalExpression               Goto   109
ShiftExpression                    Goto   110
AndExpression                      Goto   111
EqualityExpression                 Goto   112
InclusiveOrExpression              Goto   113
ExclusiveOrExpression              Goto   114
ConditionalOrExpression            Goto   115
ConditionalAndExpression           Goto   116
LeftHandSide                       Goto   79
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
ArgumentList                       Goto   197
Expression                         Gt/Rd  214

RPAREN                             Reduce 328

Default reduction to rule  328


STATE 318 ----------------------------------------------------------------------
( 306 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN Expression RPAREN UnaryExpressionNotPlusMinus 
CastExpression ::= .LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression RIGHT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression UNSIGNED_RIGHT_SHIFT AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (310)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  68
MINUS_MINUS                        Shift  67
NOT                                Shift  100
TWIDDLE                            Shift  101
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
false                              Sh/Rd  10
true                               Sh/Rd  9
IDENTIFIER                         Sh/Rd  33
new                                Shift  75
super                              Shift  77
double                             Sh/Rd  23
float                              Sh/Rd  22
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
boolean                            Sh/Rd  14
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  103
MINUS                              Shift  105
PLUS                               Shift  106

Expressionopt                      Goto   325
Expression                         Gt/Rd  311
Assignment                         Gt/Rd  287
ConditionalExpression              Gt/Rd  286
LeftHandSide                       Goto   79
UnaryExpressionNotPlusMinus        Gt/Rd  242
PreDecrementExpression             Gt/Rd  241
PreIncrementExpression             Gt/Rd  240
PostDecrementExpression            Gt/Rd  237
PostIncrementExpression            Gt/Rd  236
Type                               Goto   102
FieldAccess                        Goto   71
ClassInstanceCreationExpression    Gt/Rd  204
ArrayAccess                        Goto   73
MethodInvocation                   Gt/Rd  202
Literal                            Gt/Rd  201
NumericType                        Gt/Rd  13
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
Primary                            Goto   78
Name                               Goto   86
BooleanLiteral                     Gt/Rd  5
ArrayCreationExpression            Gt/Rd  200
PrimaryNoNewArray                  Goto   76
CastExpression                     Gt/Rd  248
PostfixExpression                  Goto   104
MultiplicativeExpression           Goto   108
UnaryExpression                    Gt/Rd  254
ShiftExpression                    Goto   110
AdditiveExpression                 Goto   107
EqualityExpression                 Goto   112
RelationalExpression               Goto   109
ExclusiveOrExpression              Goto   114
AndExpression                      Goto   111
ConditionalAndExpression           Goto   116
InclusiveOrExpression              Goto   113
ConditionalOrExpression            Goto   115
AssignmentExpression               Gt/Rd  304

SEMICOLON                          Reduce 310

Default reduction to rule  310


STATE 319 ----------------------------------------------------------------------
( 307 )

WhileStatement ::= while LPAREN Expression RPAREN  .Statement 
WhileStatementNoShortIf ::= while LPAREN Expression RPAREN  .StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Gt/Rd  179
Statement                               Gt/Rd  178
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268



STATE 320 ----------------------------------------------------------------------
( 308 )

IfThenStatement ::= if LPAREN Expression RPAREN  .Statement 
IfThenElseStatement ::= if LPAREN Expression RPAREN  .StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN  .
                                 StatementNoShortIf else StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Goto   326
Statement                               Gt/Rd  165
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268



STATE 321 ----------------------------------------------------------------------
( 309 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN  .Statement 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  83
while                                   Shift  82
if                                      Shift  81
LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
IDENTIFIER                              Shift  85
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57

Statement                               Gt/Rd  181
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementWithoutTrailingSubstatement    Gt/Rd  132
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143



STATE 322 ----------------------------------------------------------------------
( 315 )

ExplicitConstructorInvocation ::= Primary DOT super LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 

RPAREN    Shift  327



STATE 323 ----------------------------------------------------------------------
( 316 )

ExplicitConstructorInvocation ::= Primary DOT this LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 

RPAREN    Shift  328



STATE 324 ----------------------------------------------------------------------
( 317 )

ExplicitConstructorInvocation ::= Name DOT super LPAREN ArgumentListopt  .
                                  RPAREN SEMICOLON 

RPAREN    Shift  329



STATE 325 ----------------------------------------------------------------------
( 318 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

SEMICOLON    Shift  330



STATE 326 ----------------------------------------------------------------------
( 320 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf  .else StatementNoShortIf 

else    Shift  331



STATE 327 ----------------------------------------------------------------------
( 322 )

ExplicitConstructorInvocation ::= Primary DOT super LPAREN ArgumentListopt 
                                  RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  106



STATE 328 ----------------------------------------------------------------------
( 323 )

ExplicitConstructorInvocation ::= Primary DOT this LPAREN ArgumentListopt 
                                  RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  104



STATE 329 ----------------------------------------------------------------------
( 324 )

ExplicitConstructorInvocation ::= Name DOT super LPAREN ArgumentListopt 
                                  RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  107



STATE 330 ----------------------------------------------------------------------
( 325 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON  .
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON  .ForUpdateopt RPAREN StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForUpdate ::= .StatementExpressionList 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForUpdateopt ::= . (340)
ForUpdateopt ::= .ForUpdate 

MINUS_MINUS                        Shift  67
PLUS_PLUS                          Shift  68
void                               Shift  69
this                               Sh/Rd  207
LPAREN                             Shift  70
boolean                            Sh/Rd  14
char                               Sh/Rd  21
long                               Sh/Rd  20
int                                Sh/Rd  19
short                              Sh/Rd  18
byte                               Sh/Rd  17
double                             Sh/Rd  23
float                              Sh/Rd  22
false                              Sh/Rd  10
true                               Sh/Rd  9
null                               Sh/Rd  8
StringLiteral                      Sh/Rd  7
CharacterLiteral                   Sh/Rd  6
DoubleLiteral                      Sh/Rd  4
FloatingPointLiteral               Sh/Rd  3
LongLiteral                        Sh/Rd  2
IntegerLiteral                     Sh/Rd  1
new                                Shift  75
super                              Shift  77
IDENTIFIER                         Sh/Rd  33

ForUpdateopt                       Goto   332
ForUpdate                          Gt/Rd  341
StatementExpression                Gt/Rd  186
LeftHandSide                       Goto   79
QualifiedName                      Gt/Rd  32
SimpleName                         Gt/Rd  31
ArrayCreationExpression            Gt/Rd  200
BooleanLiteral                     Gt/Rd  5
PrimaryNoNewArray                  Goto   76
ReferenceType                      Gt/Rd  12
PrimitiveType                      Goto   39
ArrayType                          Gt/Rd  25
ClassOrInterfaceType               Gt/Rd  24
FloatingPointType                  Gt/Rd  16
IntegralType                       Gt/Rd  15
NumericType                        Gt/Rd  13
Type                               Goto   102
Literal                            Gt/Rd  201
ArrayAccess                        Goto   73
FieldAccess                        Goto   71
Name                               Goto   86
Primary                            Goto   78
PostfixExpression                  Goto   66
ClassInstanceCreationExpression    Goto   72
MethodInvocation                   Goto   74
PostDecrementExpression            Goto   64
PostIncrementExpression            Goto   65
PreDecrementExpression             Gt/Rd  160
PreIncrementExpression             Gt/Rd  159
Assignment                         Gt/Rd  158
StatementExpressionList            Goto   310

RPAREN                             Reduce 340

Default reduction to rule  340


STATE 331 ----------------------------------------------------------------------
( 326 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else  .
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf else  .StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Gt/Rd  167
Statement                               Gt/Rd  166
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268



STATE 332 ----------------------------------------------------------------------
( 330 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt  .RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt  .RPAREN StatementNoShortIf 

RPAREN    Shift  333



STATE 333 ----------------------------------------------------------------------
( 332 )

ForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN  .Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN  .StatementNoShortIf 

Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .Name 
ArrayType ::= .PrimitiveType Dims 
ArrayType ::= .Name Dims 
Name ::= .SimpleName 
Name ::= .QualifiedName 
SimpleName ::= .IDENTIFIER 
QualifiedName ::= .Name DOT IDENTIFIER 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .IDENTIFIER COLON Statement 
LabeledStatementNoShortIf ::= .IDENTIFIER COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                 ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BreakStatement ::= .break IDENTIFIERopt SEMICOLON 
ContinueStatement ::= .continue IDENTIFIERopt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .Name DOT this 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
ClassInstanceCreationExpression ::= .new ClassType LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Name DOT new SimpleName LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ArrayType ArrayInitializer 
FieldAccess ::= .Primary DOT IDENTIFIER 
FieldAccess ::= .super DOT IDENTIFIER 
FieldAccess ::= .Name DOT super DOT IDENTIFIER 
MethodInvocation ::= .Name LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT IDENTIFIER LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Name DOT super DOT IDENTIFIER LPAREN ArgumentListopt 
                     RPAREN 
ArrayAccess ::= .Name LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .Name 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .Name 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  41
SEMICOLON                               Sh/Rd  154
null                                    Sh/Rd  8
StringLiteral                           Sh/Rd  7
CharacterLiteral                        Sh/Rd  6
DoubleLiteral                           Sh/Rd  4
FloatingPointLiteral                    Sh/Rd  3
LongLiteral                             Sh/Rd  2
IntegerLiteral                          Sh/Rd  1
false                                   Sh/Rd  10
true                                    Sh/Rd  9
super                                   Shift  77
new                                     Shift  75
double                                  Sh/Rd  23
float                                   Sh/Rd  22
char                                    Sh/Rd  21
long                                    Sh/Rd  20
int                                     Sh/Rd  19
short                                   Sh/Rd  18
byte                                    Sh/Rd  17
boolean                                 Sh/Rd  14
void                                    Shift  69
this                                    Sh/Rd  207
LPAREN                                  Shift  70
PLUS_PLUS                               Shift  68
MINUS_MINUS                             Shift  67
switch                                  Shift  63
do                                      Shift  62
break                                   Shift  61
continue                                Shift  60
return                                  Shift  59
synchronized                            Shift  121
throw                                   Shift  58
try                                     Shift  57
for                                     Shift  269
while                                   Shift  270
if                                      Shift  271
IDENTIFIER                              Shift  272

StatementNoShortIf                      Gt/Rd  182
Statement                               Gt/Rd  181
ForStatement                            Gt/Rd  137
WhileStatement                          Gt/Rd  136
IfThenElseStatement                     Gt/Rd  135
IfThenStatement                         Gt/Rd  134
LabeledStatement                        Gt/Rd  133
StatementExpression                     Goto   80
LeftHandSide                            Goto   79
QualifiedName                           Gt/Rd  32
SimpleName                              Gt/Rd  31
ArrayCreationExpression                 Gt/Rd  200
BooleanLiteral                          Gt/Rd  5
PrimaryNoNewArray                       Goto   76
ReferenceType                           Gt/Rd  12
PrimitiveType                           Goto   39
ArrayType                               Gt/Rd  25
ClassOrInterfaceType                    Gt/Rd  24
FloatingPointType                       Gt/Rd  16
IntegralType                            Gt/Rd  15
NumericType                             Gt/Rd  13
Type                                    Goto   102
Literal                                 Gt/Rd  201
ArrayAccess                             Goto   73
FieldAccess                             Goto   71
Name                                    Goto   86
Primary                                 Goto   78
PostfixExpression                       Goto   66
ClassInstanceCreationExpression         Goto   72
MethodInvocation                        Goto   74
PostDecrementExpression                 Goto   64
PostIncrementExpression                 Goto   65
PreDecrementExpression                  Gt/Rd  160
PreIncrementExpression                  Gt/Rd  159
Assignment                              Gt/Rd  158
TryStatement                            Gt/Rd  153
ThrowStatement                          Gt/Rd  152
SynchronizedStatement                   Gt/Rd  151
ReturnStatement                         Gt/Rd  150
ContinueStatement                       Gt/Rd  149
BreakStatement                          Gt/Rd  148
DoStatement                             Gt/Rd  147
SwitchStatement                         Gt/Rd  146
ExpressionStatement                     Gt/Rd  145
EmptyStatement                          Gt/Rd  144
Block                                   Gt/Rd  143
ForStatementNoShortIf                   Gt/Rd  142
WhileStatementNoShortIf                 Gt/Rd  141
IfThenElseStatementNoShortIf            Gt/Rd  140
LabeledStatementNoShortIf               Gt/Rd  139
StatementWithoutTrailingSubstatement    Goto   268


 IBM LALR Parser Generator              1.00 (Feb  1 2007)

Look-Ahead STATES:


LA STATE 334 -------------------------------------------------------------------
(38)


RBRACKET                Shift  53

IDENTIFIER              Reduce 26
boolean                 Reduce 26
byte                    Reduce 26
char                    Reduce 26
double                  Reduce 26
false                   Reduce 26
float                   Reduce 26
int                     Reduce 26
long                    Reduce 26
new                     Reduce 26
null                    Reduce 26
short                   Reduce 26
super                   Reduce 26
this                    Reduce 26
true                    Reduce 26
void                    Reduce 26
IntegerLiteral          Reduce 26
LongLiteral             Reduce 26
FloatingPointLiteral    Reduce 26
DoubleLiteral           Reduce 26
CharacterLiteral        Reduce 26
StringLiteral           Reduce 26
PLUS_PLUS               Reduce 26
MINUS_MINUS             Reduce 26
PLUS                    Reduce 26
MINUS                   Reduce 26
NOT                     Reduce 26
TWIDDLE                 Reduce 26
LPAREN                  Reduce 26

Default reduction to rule  26


LA STATE 335 -------------------------------------------------------------------
(86)


IDENTIFIER    Shift  142
new           Shift  142
super         Shift  142
this          Shift  142

class         Reduce 26

Default reduction to rule  26


LA STATE 336 -------------------------------------------------------------------
(123)


IDENTIFIER    Shift  142
new           Shift  142
super         Shift  142
this          Shift  142

class         Reduce 26

Default reduction to rule  26


LA STATE 337 -------------------------------------------------------------------
(158)


IDENTIFIER    Shift  142
new           Shift  142
super         Shift  142
this          Shift  142

class         Reduce 26

Default reduction to rule  26


LA STATE 338 -------------------------------------------------------------------
(210)


IDENTIFIER              Shift  256
boolean                 Shift  256
byte                    Shift  256
char                    Shift  256
double                  Shift  256
false                   Shift  256
float                   Shift  256
int                     Shift  256
long                    Shift  256
new                     Shift  256
null                    Shift  256
short                   Shift  256
super                   Shift  256
this                    Shift  256
true                    Shift  256
void                    Shift  256
IntegerLiteral          Shift  256
LongLiteral             Shift  256
FloatingPointLiteral    Shift  256
DoubleLiteral           Shift  256
CharacterLiteral        Shift  256
StringLiteral           Shift  256
PLUS_PLUS               Shift  256
MINUS_MINUS             Shift  256
PLUS                    Shift  256
MINUS                   Shift  256
NOT                     Shift  256
TWIDDLE                 Shift  256
LPAREN                  Shift  256
LBRACE                  Shift  256

RBRACE                  Reduce 347

Default reduction to rule  347


LA STATE 339 -------------------------------------------------------------------
(254)


IDENTIFIER    Shift  280
new           Shift  280
super         Shift  280
this          Shift  280

class         Reduce 26

Default reduction to rule  26

Number of entries in base Action Table: 4140
Additional space required for compaction of Action Table: 16.4%

Number of unique terminal states: 242
Number of Shift actions saved by merging: 2177
Number of Conflict points saved by merging: 0
Number of Reduce actions saved by merging: 136
Number of Reduce saved by default: 1387

Number of entries in Terminal Action Table: 1448
Additional space required for compaction of Terminal Table: 4.2%


 IBM LALR Parser Generator              1.00 (Feb  1 2007)


Mapping of new state numbers into original numbers:

  356  ==>>    203
  382  ==>>      9
  383  ==>>    190
  387  ==>>     44
  399  ==>>     52
  403  ==>>    207
  423  ==>>      7
  425  ==>>    199
  429  ==>>      2
  432  ==>>     31
  444  ==>>      8
  447  ==>>     18
  448  ==>>     23
  454  ==>>     10
  455  ==>>     12
  456  ==>>    128
  457  ==>>     41
  483  ==>>     13
  485  ==>>     14
  488  ==>>     88
  504  ==>>     42
  533  ==>>     15
  535  ==>>    164
  549  ==>>    205
  555  ==>>    250
  586  ==>>    194
  598  ==>>     27
  602  ==>>     20
  622  ==>>    286
  624  ==>>     16
  625  ==>>     36
  627  ==>>     19
  628  ==>>     25
  633  ==>>     21
  638  ==>>     28
  643  ==>>     22
  645  ==>>     33
  650  ==>>     95
  651  ==>>     26
  653  ==>>    287
  679  ==>>     43
  680  ==>>     29
  684  ==>>    150
  696  ==>>     30
  700  ==>>     35
  722  ==>>    236
  726  ==>>     40
  729  ==>>     46
  732  ==>>     38
  733  ==>>      1
  734  ==>>     47
  744  ==>>      4
  749  ==>>     57
  750  ==>>     17
  752  ==>>     90
  783  ==>>     75
  794  ==>>     49
  795  ==>>     50
  821  ==>>     98
  822  ==>>     53
  828  ==>>    304
  854  ==>>     84
  855  ==>>     48
  856  ==>>    126
  859  ==>>     37
  862  ==>>     79
  863  ==>>     55
  864  ==>>    153
  867  ==>>      6
  871  ==>>     56
  898  ==>>     54
  900  ==>>    209
  901  ==>>     63
  904  ==>>    242
  930  ==>>     91
  931  ==>>    145
  932  ==>>     60
  936  ==>>     61
  937  ==>>     64
  938  ==>>     65
  941  ==>>     66
  943  ==>>     69
  971  ==>>     93
  976  ==>>     97
  979  ==>>    155
  985  ==>>    293
 1011  ==>>    211
 1013  ==>>    249
 1017  ==>>     71
 1018  ==>>     72
 1019  ==>>     73
 1020  ==>>     74
 1027  ==>>     76
 1028  ==>>     77
 1031  ==>>     78
 1032  ==>>     80
 1033  ==>>     81
 1052  ==>>    215
 1054  ==>>    216
 1058  ==>>    281
 1059  ==>>     82
 1066  ==>>    319
 1092  ==>>     83
 1093  ==>>     85
 1094  ==>>     87
 1097  ==>>     89
 1098  ==>>     92
 1100  ==>>     99
 1103  ==>>    102
 1105  ==>>    104
 1106  ==>>    107
 1107  ==>>    108
 1108  ==>>    109
 1109  ==>>    110
 1113  ==>>    111
 1114  ==>>    112
 1132  ==>>    113
 1133  ==>>    114
 1134  ==>>    115
 1135  ==>>    116
 1136  ==>>    117
 1137  ==>>    118
 1138  ==>>    119
 1139  ==>>    120
 1140  ==>>    121
 1141  ==>>    124
 1147  ==>>    320
 1173  ==>>    125
 1174  ==>>    127
 1175  ==>>    131
 1178  ==>>    132
 1179  ==>>    137
 1180  ==>>    138
 1181  ==>>    142
 1182  ==>>    148
 1183  ==>>    149
 1184  ==>>    151
 1185  ==>>    154
 1186  ==>>    156
 1187  ==>>    180
 1188  ==>>    181
 1189  ==>>    187
 1190  ==>>    188
 1193  ==>>    189
 1194  ==>>    191
 1195  ==>>    192
 1213  ==>>    193
 1214  ==>>    195
 1215  ==>>    196
 1216  ==>>    197
 1217  ==>>    198
 1218  ==>>    200
 1219  ==>>    201
 1220  ==>>    202
 1221  ==>>    204
 1222  ==>>    210
 1228  ==>>    331
 1254  ==>>    214
 1255  ==>>    217
 1256  ==>>    218
 1259  ==>>    220
 1260  ==>>    221
 1261  ==>>    222
 1262  ==>>    223
 1263  ==>>    224
 1264  ==>>    225
 1265  ==>>    226
 1266  ==>>    227
 1267  ==>>    228
 1268  ==>>    229
 1269  ==>>    230
 1270  ==>>    231
 1271  ==>>    232
 1274  ==>>    233
 1275  ==>>    234
 1276  ==>>    237
 1294  ==>>    238
 1295  ==>>    241
 1296  ==>>    247
 1297  ==>>    248
 1298  ==>>    251
 1299  ==>>    252
 1300  ==>>    253
 1301  ==>>    255
 1302  ==>>    257
 1303  ==>>    261
 1309  ==>>    333
 1335  ==>>    146
 1336  ==>>    264
 1337  ==>>    265
 1340  ==>>    267
 1341  ==>>    268
 1342  ==>>    269
 1343  ==>>    270
 1344  ==>>    271
 1345  ==>>    272
 1346  ==>>    273
 1347  ==>>    274
 1348  ==>>    276
 1349  ==>>    279
 1350  ==>>    280
 1351  ==>>    282
 1352  ==>>    283
 1355  ==>>    284
 1356  ==>>    288
 1357  ==>>    296
 1375  ==>>    297
 1376  ==>>    298
 1377  ==>>    299
 1378  ==>>    300
 1380  ==>>    301
 1381  ==>>    302
 1382  ==>>    303
 1383  ==>>    306
 1384  ==>>    307
 1390  ==>>    152
 1434  ==>>    308
 1435  ==>>    309
 1436  ==>>     62
 1462  ==>>    310
 1463  ==>>    311
 1464  ==>>    313
 1467  ==>>    314
 1468  ==>>    322
 1469  ==>>    323
 1470  ==>>    324
 1471  ==>>    325
 1472  ==>>    326
 1473  ==>>    327
 1474  ==>>    328
 1475  ==>>    329
 1477  ==>>    332
 1482  ==>>     39
 1483  ==>>     86
 1502  ==>>    140
 1548  ==>>    123
 1568  ==>>    243
 1614  ==>>    158
 1634  ==>>    289
 1680  ==>>    219
 1700  ==>>    321
 1766  ==>>     96
 1810  ==>>    260
 1858  ==>>    254
 1861  ==>>    141
 1932  ==>>    182
 2003  ==>>    239
 2074  ==>>    240
 2135  ==>>    263
 2136  ==>>    305
 2145  ==>>    256
 2189  ==>>    178
 2240  ==>>    266
 2311  ==>>    275
 2382  ==>>    277
 2453  ==>>    278
 2524  ==>>    295
 2595  ==>>    315
 2666  ==>>    316
 2737  ==>>    317
 2808  ==>>     59
 2852  ==>>    244
 2908  ==>>    133
 2952  ==>>    285
 2996  ==>>    318
 3040  ==>>     58
 3108  ==>>     70
 3152  ==>>    103
 3196  ==>>    122
 3240  ==>>    130
 3284  ==>>    134
 3328  ==>>    135
 3372  ==>>    143
 3416  ==>>    144
 3460  ==>>    177
 3504  ==>>    184
 3548  ==>>    186
 3592  ==>>    235
 3636  ==>>    246
 3680  ==>>    291
 3724  ==>>    292
 3768  ==>>    179
 3797  ==>>      3
 3807  ==>>    175
 3836  ==>>    183
 3837  ==>>     51
 3845  ==>>    136
 3936  ==>>     67
 3966  ==>>    312
 3968  ==>>    176
 3997  ==>>    185
 3998  ==>>    139
 4005  ==>>    290
 4096  ==>>     68
 4128  ==>>    172
 4164  ==>>    173
 4199  ==>>    174
 4234  ==>>    165
 4268  ==>>    166
 4302  ==>>    167
 4336  ==>>    168
 4370  ==>>    294
 4416  ==>>    330
 4462  ==>>    100
 4507  ==>>    159
 4540  ==>>    169
 4573  ==>>    170
 4606  ==>>    171
 4639  ==>>    160
 4671  ==>>    101
 4700  ==>>    105
 4729  ==>>    106
 4758  ==>>    161
 4787  ==>>    162
 4816  ==>>    163
 4845  ==>>    245
 4885  ==>>    262
 4891  ==>>    258
 4920  ==>>    213
 4944  ==>>     34
 4945  ==>>      5
 4948  ==>>    259
 4972  ==>>     24
 4976  ==>>    208
 4989  ==>>     45
 4997  ==>>     32
 5000  ==>>     11
 5023  ==>>    129
 5027  ==>>    157
 5058  ==>>     94
 5060  ==>>    206
 5062  ==>>    147
 5071  ==>>    212

Actions in Compressed Tables:
     Number of Shifts: 485
     Number of Shift/Reduces: 636
     Number of Look-Ahead Shifts: 6
     Number of Gotos: 1440
     Number of Goto/Reduces: 2367
     Number of Reduces: 79
     Number of Defaults: 112

Parsing Tables storage:
    Storage required for BASE_CHECK: 10354 Bytes
    Storage required for BASE_ACTION: 10356 Bytes
    Storage required for TERM_CHECK: 1569 Bytes
    Storage required for TERM_ACTION: 3020 Bytes

Error maps storage:
    Storage required for ACTION_SYMBOLS_BASE map: 668 Bytes
    Storage required for ACTION_SYMBOLS_RANGE map: 653 Bytes
    Storage required for NACTION_SYMBOLS_BASE map: 668 Bytes
    Storage required for NACTION_SYMBOLS_RANGE map: 332 Bytes
    Storage required for TERMINAL_INDEX map: 222 Bytes
    Storage required for NON_TERMINAL_INDEX map: 326 Bytes

    Storage required for SCOPE_PREFIX map: 108 Bytes
    Storage required for SCOPE_SUFFIX map: 108 Bytes
    Storage required for SCOPE_LHS_SYMBOL map: 108 Bytes
    Storage required for SCOPE_LOOK_AHEAD map: 54 Bytes
    Storage required for SCOPE_STATE_SET map: 108 Bytes
    Storage required for SCOPE_RIGHT_SIDE map: 588 Bytes
    Storage required for SCOPE_STATE map: 410 Bytes
    Storage required for IN_SYMB map: 668 Bytes

    Number of names: 199
    Number of characters in name: 1887
