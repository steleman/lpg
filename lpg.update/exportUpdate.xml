<?xml version="1.0" encoding="UTF-8"?>
<project name="lpg.update" default="build.update.zip" basedir=".">
	<xmlproperty file="../lpg.runtime.feature/feature.xml" prefix="lpg.runtime"/>
	<property name="lpg.runtime.version" value="${lpg.runtime.feature(version)}"/>

	<property name="update.name"         value="lpg.update"/>
	<property name="update.version"      value="${lpg.runtime.version}"/>
	<property name="update.temp.folder"  value="${basedir}/update.temp.folder"/>
	<property name="update.destination"  value="${basedir}"/>
	<property name="update.server"       value="shell.sourceforge.net"/>
	<property name="update.server.dir"   value="."/>
	<property name="zip.file"            value="${update.destination}/${update.name}_${update.version}.zip"/>

    <property name="generator.platforms" value="linux_x86,linux_x86_64,macosx_x86,macosx_x86_64,win32_x86"/>
    <property name="feature.ids.list"    value="lpg.runtime,lpg.generator"/>

    <taskdef resource="antlib.xml" classpath="./ant-imp.jar"/>

    <target name="deploy.zip" description="Copies the update archive to the update server.">
		<echo message="Copying update zip file to update server ${update.server}"/>
		<scp file="${zip.file}" keyfile="${user.home}/.ssh/id_dsa" passphrase="" todir="${update.server.username}@${update.server}:${update.server.dir}"></scp>
	</target>

	<target name="build.update.zip" depends="build.plugins,build.features">
		<delete dir="${update.temp.folder}"/>
		<mkdir dir="${update.temp.folder}"/>
	    <for param="feature.id" values="${feature.ids.list}" separator=",">
	        <antcall target="copy.feature">
	            <param name="feature.id"      value="${feature.id}"/>
	            <param name="feature.dir"     value="${feature.id}.feature"/>
	            <param name="feature.version" value="${update.version}"/>
	        </antcall>
        </for>

        <copy file="site.xml" todir="${update.temp.folder}" failonerror="true" overwrite="false"/>
        <copy file="index.html" todir="${update.temp.folder}" failonerror="true" overwrite="false"/>

        <mkdir dir="${update.temp.folder}/web"/>
        <copy todir="${update.temp.folder}/web" failonerror="true" overwrite="false">
            <fileset dir="${basedir}/web" includes="site.css"/>
            <fileset dir="${basedir}/web" includes="site.xsl"/>
        </copy>

        <zip destfile="${zip.file}" basedir="${update.temp.folder}" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${update.temp.folder}"/>
	</target>

	<target name="build.features">
        <delete dir="features"/>
        <mkdir dir="features"/>

	    <for param="feature.id" values="${feature.ids.list}" separator=",">
	        <ant antfile="../${feature.id}.feature/exportFeature.xml" target="build.feature.jar" dir="../${feature.id}.feature"/>
        </for>
	</target>

	<target name="build.plugins">
        <property name="runtimeBridgePluginDir" value="../lpg.runtime"/>
        <property name="runtimeJavaPluginDir" value="../lpg.runtime.java"/>

	    <delete dir="plugins"/>
		<mkdir dir="plugins"/>

        <ant antfile="../lpg.generator/exportPlugin.xml" target="build.plugin.jar" dir="../lpg.generator"/>

		<ant antfile="${runtimeBridgePluginDir}/exportPlugin.xml" target="build.plugin.jar" dir="${runtimeBridgePluginDir}"/>
        <ant antfile="${runtimeJavaPluginDir}/exportPlugin.xml" target="build.plugin.jar" dir="${runtimeJavaPluginDir}"/>

        <for param="platform" values="${generator.platforms}" separator=",">
            <antcall target="build.fragment">
                <param name="fragment.platform" value="${platform}"/>
            </antcall>
        </for>
	</target>

	<target name="build.fragment">
		<property name="dir" value="../lpg.generator.${fragment.platform}"/>
		<ant antfile="${dir}/exportFragment.xml" target="build.fragment.jar" dir="${dir}"/>
	</target>

	<target name="copy.feature">
		<!-- <echo message="Feature directory is ${feature.dir}"/> -->

		<mkdir dir="${update.temp.folder}/features"/>
		<copy todir="${update.temp.folder}/features" failonerror="true" overwrite="false">
			<fileset dir="features" includes="${feature.id}_${feature.version}.jar"/>
		</copy>

		<mkdir dir="${update.temp.folder}/plugins"/>
		<copy todir="${update.temp.folder}/plugins" failonerror="true" overwrite="false">
			<fileset dir="plugins" includes="*.jar"/>
		</copy>
	</target>

    <target name="build.sf.release">
        <property name="release.dir" value="sf-release"/>
        <property name="lpg.gen" value="../lpg.generator"/>
        <property name="lpg.gen.src" value="../lpg.generator.cpp"/>
        <property name="lpg.runtime.bin" value="../lpg.runtime.java"/>
        <mkdir dir="${release.dir}"/>
        <zip destfile="${release.dir}/lpg-generator-cpp-src-${lpg.runtime.version}.zip" update="true">
            <fileset dir="${lpg.gen.src}" includes="src/*.cpp,src/*.h,src/Make*,src/jikespg.g,.project" excludes="bin/*,src/*.o"/>
        </zip>
        <zip destfile="${release.dir}/lpg-generator-templates-${lpg.runtime.version}.zip" update="true">
            <fileset dir="${lpg.gen}" includes="templates/java/**/*.g*,include/java/**/*.g*,docs/*"/>
        </zip>
        <jar destfile="${release.dir}/lpg-java-runtime-bin-${lpg.runtime.version}.jar" update="true">
            <fileset dir="${lpg.runtime.bin}/bin" includes="**/*.class,**/*.properties"/>
            <fileset dir="${lpg.runtime.bin}" includes="META-INF/*"/>
        </jar>
        <zip destfile="${release.dir}/lpg-java-runtime-src-${lpg.runtime.version}.zip" update="true">
            <fileset dir="${lpg.runtime.bin}" includes="src/**/*.java,src/**/*.properties,.project,.classpath,META-INF/*,*.xml,*.htm"/>
        </zip>

        <for param="platform" values="${generator.platforms}" separator=",">
            <copy file="../lpg.generator.${platform}/lpgexe/lpg-${platform}" tofile="${release.dir}/lpg-${platform}-${lpg.runtime.version}"/>
        </for>
    </target>
</project>
